<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/rss2enclosuresfull.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" version="2.0">

<channel>
	<title>Herding Code</title>
	
	<link>http://herdingcode.com</link>
	<description>The Herding Code Podcast</description>
	<lastBuildDate>Tue, 14 Oct 2014 22:40:06 +0000</lastBuildDate>
	<language>en-US</language>
		<sy:updatePeriod>hourly</sy:updatePeriod>
		<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=4.0</generator>
	<atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/HerdingCode" /><feedburner:info uri="herdingcode" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><media:copyright>Creative Commons (by-nc-sa)</media:copyright><media:thumbnail url="http://herdingcode.com/herdingCode.png" /><media:keywords>dotnet,asp,net,programming,software,web,development</media:keywords><media:category scheme="http://www.itunes.com/dtds/podcast-1.0.dtd">Technology/Tech News</media:category><itunes:owner><itunes:email>jon_galloway@yahoo.com</itunes:email><itunes:name>Herding Code</itunes:name></itunes:owner><itunes:author>Herding Code</itunes:author><itunes:explicit>no</itunes:explicit><itunes:image href="http://herdingcode.com/herdingCode.png" /><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><itunes:subtitle>A weekly discussion on software development</itunes:subtitle><itunes:summary>A weekly discussion featuring K. Scott Allen (odetocode.com), Kevin Dente, Scott Koon (lazycoder.com), and Jon Galloway.</itunes:summary><itunes:category text="Technology"><itunes:category text="Tech News" /></itunes:category><creativeCommons:license>http://creativecommons.org/licenses/by-nc-sa/3.0/</creativeCommons:license><feedburner:emailServiceId>HerdingCode</feedburner:emailServiceId><feedburner:feedburnerHostname>https://feedburner.google.com</feedburner:feedburnerHostname><item>
		<title>Herding Code 198: Damian Edwards on ASP.NET vNext, Tag Helpers and SignalR</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/4REQADaSKXg/</link>
		<comments>http://herdingcode.com/herding-code-198-damian-edwards-on-asp-net-vnext-tag-helpers-and-signalr/#comments</comments>
		<pubDate>Tue, 14 Oct 2014 21:26:13 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=679</guid>
		<description><![CDATA[The guys talk to ASP.NET team member Damian Edwards about ASP.NET vNext (the next version of ASP.NET), Tag Helpers, and what&#8217;s new with SignalR. Download / Listen: Herding Code 198: Damian Edwards on ASP.NET vNext, Tag Helpers and SignalR Show Notes: Hello. What is ASP.NET vNext? (00:18) ASP.NET vNext is the next version of ASP.NET. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to ASP.NET team member Damian Edwards about ASP.NET vNext (the next version of ASP.NET), Tag Helpers, and what&#8217;s new with SignalR.</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0198-Damian-Edwards.mp3">Herding Code 198: Damian Edwards on ASP.NET vNext, Tag Helpers and SignalR</a></p>
<!--[if lt IE 9]><script>document.createElement('audio');</script><![endif]-->
<audio class="wp-audio-shortcode" id="audio-679-1" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0198-Damian-Edwards.mp3?_=1" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0198-Damian-Edwards.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0198-Damian-Edwards.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Hello. What is ASP.NET vNext? </li>
<ul>
<li>(00:18) ASP.NET vNext is the next version of ASP.NET. It&#8217;s not just ASP.NET MVC 6 or Web API 3, it&#8217;s a total rethink of the ASP.NET platform. In some ways, it&#8217;s a bigger change than the move from classic ASP to ASP.NET. In other ways, it can be pretty seamless depending on what you&#8217;re doing. </li>
<li>(01:29) Jon asks Damian to talk about what&#8217;s crazy and brand new. Damian describes the full stack in a web application, from the operating system up to the code that you write in your application and the libraries you bring in. Starting at the bottom of the stack, ASP.NET vNext is cross platform, meaning it will work and be supported on Linux and Mac. </li>
</ul>
<li>Cross platform</li>
<ul>
<li>(02:36) Jon asks Damian to clarify what that means &#8211; is it supported cross-platform, or does it just kind of work? Damian says that it&#8217;s first class support &#8211; they&#8217;ll ensure that it works cross-platform, there will be cross-platform documentation, and there will be cross-platform tooling (Damian mentions the Sublime plugin for ASP.NET vNext). They&#8217;ll support building and deploying ASP.NET vNext applications cross-platform. </li>
</ul>
<li>Core CLR</li>
<ul>
<li>(03:41) Damian continues up the stack, talking about how .NET framework is booted up. In vNext, there is a native code custom CLR loader that is decoupled form the operating system&#8217;s .NET loader. Even when you&#8217;re running on Windows, you&#8217;re not relying on the standard .NET loading mechanism. </li>
<li>(05:56) Jon mentions having seen demos where code was written on one laptop, copied onto a USB drive, and executed on another laptop, asking if the custom .NET loader is what makes that work. Damian explains that&#8217;s half of why it works &#8211; the next layer of the platform is the managed runtime itself, which is the other half of the magic. There is a new CLR based on core CLR. Damian explains how the .NET runtime runs on a core CLR and the base class libraries. The core CLR is based on the .NET CLR for Silverlight &#8211; it was already a lightweight version that ran cross-platform. There are now two options for the CLR you can run on &#8211; the full .NET CLR, or the new &quot;cloud optimized&quot; CLR. It&#8217;s important because it&#8217;s smaller &#8211; so small that it can be deployed with your application. Also, because it can be self-contained, multiple versions can run on the same server. </li>
<li>(10:01) Scott K asks what prevents bundling the entire application up into a single EXE. Damian talks about how .NET Native is being used in Windows Store applications and says they&#8217;re intending to look at that for ASP.NET vNext in the future. For now they&#8217;re achieving isolation by shipping the core CLR and libraries as NuGet dependencies. </li>
<li>(12:30) Scott K asks if you need to have the .NET framework installed at all if you&#8217;re running ASP.NET vNext. Damian says no, and if .NET is installed it has no bearing on your application. </li>
<li>(12:12) Jon asks how this affects IT shops that want full control over .NET framework installations on their servers. Damian says this question requires more context on what administrators would be afraid of. He describes how ASP.NET vNext will support servicing, so any urgent vulnerabilities can be patched globally on a server. </li>
</ul>
<li>How does this affect existing apps? What changes?</li>
<ul>
<li>(14:50) K Scott brings up a Twitter question from James on how this will affect ASP.NET MVC and Web API applications. Damian says that ASP.NET MVC 6 will include both ASP.NET MVC and Web API. Damian explains how ASP.NET MVC is on version 5 and there are some things they&#8217;d do differently today. It also previously depended on System.Web, which dates all the way back to before 2000. ASP.NET MVC 6 has DI built in. It&#8217;s OWIN compatible, so you can run it on any OWIN compatible server and run any OWIN middleware. Global configuration (web.config and System.Configuration) are gone, replaced by code-based configuration influenced by Katana. There&#8217;s also Entity Framework 7, which is a complete rewrite that doesn&#8217;t have ObjectContext or System.Entity &#8211; instead it makes model first (DbContext) foundational. EF7 also works with non-relational databases. If you have an existing application with ASP.NET MVC 5 or Web API 2, it should port over pretty seamlessly as long as you&#8217;re not working directly with underlying components like System.Web or HttpContext. </li>
</ul>
<li>Development experience</li>
<ul>
<li>(19:39) Scott K asks about the development experience &#8211; will this work in a new Visual Studio version, or can he just create applications in a text editor? Damian says both will work. This both allows cross-platform development and a more flexible development stack, allowing for things like cloud-based development. Of course, ASP.NET will work work great on Visual Studio. They use Roslyn to do all the code compilation either at design or compile time. This allows for deploying the entire application as source, and eliminates the need for a separate compile step during development (since the code is constantly being compiled as you work). </li>
<li>(25:15) K Scott asks how much churn he should expect if he starts developing with ASP.NET vNext today. Damian says there&#8217;s a lot of churn still right now. It won&#8217;t release until well into next year some time. </li>
</ul>
<li>Questions from Twitter</li>
<ul>
<li>(26:34) Iris Classon asks what features they weren&#8217;t able to include that they&#8217;d have liked to. Damian says it&#8217;s too early to answer that question, since they&#8217;re still in pretty early development. </li>
<li>(27:00) Iris Classon also asks where they looked for inspiration. Damian mentions web frameworks like Rails and Node as well as module loading in Java. </li>
<li>(27:38) Ben Maddox asks how Damian sees this improving the feedback loop for code, UI and tests. Damian says it speeds up UI feedback since all of your code is compiled as you type it and continuous testing is enabled due to the continuous compile. Both are available today with other tools or things you set up yourself, but it will be simpler in future. </li>
<li>(28:55) Steen R. asks when we&#8217;ll see cross-platform Visual Studio. Damian says there are no plans he&#8217;s privy to. </li>
<li>(29:05) Filip Woj. asks if F# will have first class support &#8211; released and supported. Damian says not for version one, although there are demonstrations of F# providers. </li>
<li>(30:40) Steen R. asks how webroot will work in practice. Damian describes how webroot works &#8211; it&#8217;s a separate directory from which your application is served. Any files not in the webroot folder will not be served by the web server. Your application or uploads folders will be separate from your webroot, so they can&#8217;t be served. </li>
</ul>
<li>Portable areas?</li>
<ul>
<li>(33:49) K Scott asks about portable areas. Damian says he&#8217;s not aware of something like that for ASP.NET MVC. </li>
</ul>
<li>Tag Helpers</li>
<ul>
<li>(35:18) Jon asks what tag helpers are. Damian describes how Razor is a templating language that&#8217;s designed to allow mixing C# and HTML. It falls down a bit when you&#8217;re using HTML Helpers and want to change the output &#8211; for instance, if you want to pass in an HTML class to an element. C# gets in the way due to things like class being a reserved word, and you miss out on any HTML IntelliSense or HTML editor smarts, because you&#8217;re just working with C# strings. Tag helpers allow you to just write HTML tags with attributes that Razor understands. These can do things like access the model metadata to emit appropriate form HTML. </li>
<li>(41:27) K Scott asks when he can start using it. Damian says that it&#8217;s in a separate feature branch now and explains how to use them and says you can ping Taylor Mullen for help &#8211; or just wait a few weeks and it&#8217;ll be in the main branch. </li>
<li>(42:59) Jon comments on how the Spark view engine provided something similar, and Damian says that Lou works right next to him and has helped with the design. They&#8217;re not trying to change the core of how Razor works or feels, just make it easier to work with HTML helpers. </li>
</ul>
<li>SignalR</li>
<ul>
<li>(44:10) Jon asks what&#8217;s new with SignalR. Damian runs down some of the recent releases and mentions SignalR 3 for ASP.NET vNext. He also mentions the C++ client that&#8217;s currently in development. </li>
<li>(45:28) Jon asks if ASP.NET vNext makes some things simpler for SignalR. Damian says the main impact is that things like configuration and tracing are now shared between components like Web API and MVC. </li>
</ul>
<li>Wrap Up
<ul>
<li>(46:56) Jon asks Damian what&#8217;s coming up for him. Damian mentions some of the talks he&#8217;ll be doing at NDC London, including load testing SignalR and ASP.NET vNext. </li>
<li>(47:50) Jon asks Damian how people can keep up with ASP.NET vNext, mentioning the asp.net/vnext page. Damian also recommends the weekly ASP.NET vNext Community Standup meetings, being run as a public weekly Google Hangout hosted by Scott Hanselman and Jon Galloway. </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Damian Edwards (<a href="http://damianedwards.wordpress.com/">blog</a> <a href="https://twitter.com/damianedwards">@damianedwards</a>)</li>
<li><a href="http://www.asp.net/vnext">ASP.NET vNext</a></li>
<li><a href="http://aka.ms/aspnet-vnext-standup">ASP.NET vNext Weekly Community Standup</a></li>
<li><a href="https://github.com/aspnet/home">ASP.NET vNext on GitHub</a></li>
<li><a href="https://github.com/aspnet/mvc/tree/TagHelpersFeature">Tag Helpers feature branch</a></li>
<li><a href="http://www.asp.net/signalr">ASP.NET SignalR</a></li>
<li><a href="https://github.com/SignalR/SignalR">SignalR on GitHub</a></li>
<li><a href="https://github.com/SignalR/SignalR/releases">SignalR release notes</a></li>
<li><a href="http://herdingcode.com/herding-code-145-ndc-cage-match-with-rob-conery-node-jssocket-io-and-damian-edwards-signalr/">Herding Code 145 &#8211; NDC Cage Match with Rob Conery (node.js/socket.io) and Damian Edwards (SignalR)</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/4REQADaSKXg" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-198-damian-edwards-on-asp-net-vnext-tag-helpers-and-signalr/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/n-C7Fd1DTiU/HerdingCode-0198-Damian-Edwards.mp3" fileSize="21474672" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to ASP.NET team member Damian Edwards about ASP.NET vNext (the next version of ASP.NET), Tag Helpers, and what&amp;#8217;s new with SignalR. Download / Listen: Herding Code 198: Damian Edwards on ASP.NET vNext, Tag Helpers and SignalR Show Notes</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to ASP.NET team member Damian Edwards about ASP.NET vNext (the next version of ASP.NET), Tag Helpers, and what&amp;#8217;s new with SignalR. Download / Listen: Herding Code 198: Damian Edwards on ASP.NET vNext, Tag Helpers and SignalR Show Notes: Hello. What is ASP.NET vNext? (00:18) ASP.NET vNext is the next version of ASP.NET. [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-198-damian-edwards-on-asp-net-vnext-tag-helpers-and-signalr/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/n-C7Fd1DTiU/HerdingCode-0198-Damian-Edwards.mp3" length="21474672" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0198-Damian-Edwards.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 197: Summer Stories, C# 6, Vim and Atom, Terrible Keyboards, Poorly Aged Hipster Code, React and the Apple Watch</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/o8HrlMwUEo0/</link>
		<comments>http://herdingcode.com/herding-code-197-summer-stories-c-6-vim-and-atom-terrible-keyboards-poorly-aged-hipster-code-react-and-the-apple-watch/#comments</comments>
		<pubDate>Mon, 29 Sep 2014 23:11:52 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=674</guid>
		<description><![CDATA[It&#8217;s time for a discussion show! Download / Listen: Herding Code 197 &#8211; Summer Stories, C# 6, Vim and Atom, Terrible Keyboards, Poorly Aged Hipster Code, React and the Apple Watch Show Notes: (01:22) What&#8217;s new for Kevin? Node, Backbone, working at Brandcast, some talk about how the shop runs. Plus he&#8217;s been busy moving. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>It&#8217;s time for a discussion show!</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0197-Discussion.mp3">Herding Code 197 &#8211; Summer Stories, C# 6, Vim and Atom, Terrible Keyboards, Poorly Aged Hipster Code, React and the Apple Watch</a></p>
<audio class="wp-audio-shortcode" id="audio-674-2" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0197-Discussion.mp3?_=2" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0197-Discussion.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0197-Discussion.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>(01:22) What&#8217;s new for Kevin? Node, Backbone, working at Brandcast, some talk about how the shop runs. Plus he&#8217;s been busy moving.</li>
<li>(03:12) What&#8217;s new for K Scott? Lots of JavaScript, C# / MVC, AngularJS, MongoDB. Jon asks how Mongo is working in production in the healthcare application K Scott had mentioned earlier. K Scott talks about some performance issues he&#8217;s looked at, including some that came down to C# queries, and an issue with a 16MB document size limit. Jon asks if they&#8217;re using Redis or other front end caching outside of Mongo. K Scott says they&#8217;re just map-reducing and storing the information in other collections. He&#8217;s not travelling quite as much </li>
<li>(06:50) Jon asks K Scott about his recent posts on C# 6 and EcmaScript 6. K Scott talks about looking into traceur to write current code today in ES6, compiling to ES5 to work in current browsers. </li>
<li>(07:25) Jon asks K Scott about his recent C# posts on property initializers and primary constructors. K Scott talks about those as well as the new &quot;using static&quot; feature to invoke static members without needing to use the type name. </li>
<li>(08:42) Scott K mentions a discussion about required properties with property initializers. K Scott says he was hesitant about a few things with the new syntax, and problem being that there&#8217;s no initializer body for validation. You can mitigate that a little using an assert in a the initializer. It&#8217;s nice not having to write explicit setters. </li>
<li>(11:06) Scott K says he doesn&#8217;t even think about property syntax all that much because Resharper and CodeRush handle that for him. Jon speculates how long it will take for Resharper to start yelling at him to use primary constructors everywhere. Scott K says he uses CodeRush for that reason and turns off the code hints. </li>
<li>(12:27) K Scott asks what software Kevin is using: OSX and MacVim. </li>
<li>(12:40) Jon asks if anyone&#8217;s using Atom.io. Scott K says he tried it and it was way too slow. Kevin says that after using Vim he has a hard time with heavy IDE&#8217;s &#8211; even WebStorm. He&#8217;s skeptical about the longevity of new code editors, while Vim is eternal. Jon says he&#8217;s interested in Atom.io because it&#8217;s cross-platform and open source. </li>
<li>(16:05) What&#8217;s new for Jon? He&#8217;s been doing some courses for Microsoft Virtual Academy &#8211; Introduction to ASP.NET MVC and a Bootstrap course including some advanced stuff like Bootstrap Mix-ins. Wrox Professional ASP.NET MVC book is out. He went to Norway for fun and went to pulpit rock. He&#8217;s been spending some more time on non-Microsoft web stacks and platforms now that Azure and ASP.NET vNext are cross-platform. Scott K and Kevin talk about the fun of switching operating systems and remembering keyboard shortcuts. Jon says the biggest frustration is that he keeps trying to touch the screen on a MacBook and it doesn&#8217;t do anything. </li>
<li>(21:30) What&#8217;s New for Scott K? He got a new computer a Lenovo U530 &#8211; he calls it the consumer version of the Carbon. He talks about some of the confusing things about the Lenovo keyboard, especially the function keys. Everyone talks about function keys and keyboard problems. K Scott has a newer Carbon, and the keyboard is driving him nuts. Scott K says he&#8217;s constantly hitting the touchpad because his keyboard is off-center, which always brings up the Windows charms. Jon mentions touchfreeze and other ways of disabling the touchpad while typing. Jon says he rarely uses the touchpad because he just uses the touchscreen. Scott says he never uses it, he thinks it&#8217;s weird that you use two fingers to scroll on the touchpad and one on the screen. K Scott said he accidentally put his Carbon in caps lock, but he doesn&#8217;t have a caps lock button so it was hard to turn off. Kevin is unhappy with the Microsoft Sculpt Keyboard&#8217;s function keys. Everyone, please stop messing up the function keys. </li>
<li>(34:13) Jon asks if anyone&#8217;s use the CODE keyboard. He and Jon both agree that it looks great, but they can&#8217;t use non-ergo keyboards. Scott K wants keyboards to keep it simple and last a long time. </li>
<li>(35:27) Scott K get back to telling us about his summer activities. He was working on upgrading a MonoRail that drove him crazy due to being &quot;craftstmanned up&quot; with lots of opinions in the code like fluent extension methods, Brails view engines and difficulty in upgrading libraries due to dependency injection and breaking changes in NHibernate. Jon says that he&#8217;s developed an aversion to things that make great blog posts but will be hard to work with in a few years. Scott K says 90% of the problems came from strong naming &#8211; binding redirects and ILMerge with aliases didn&#8217;t help. They&#8217;ve been evaluating MongoDb and AngularJS a bit at work </li>
<li>(41:50) Scott K used React with Grunt in his MonoRail project to allow him to add client-side functionality into a frightening legacy application. Jon asks how he sets it up so it works at dev time and Scott K explains. Kevin&#8217;s been hearing a lot about React lately. Scott K like that it&#8217;s not trying to be MVC, just the V &#8211; e.g. no two-way binding &#8211; and the virtual DOM diffing is so fast that people are even using it with AngularJS and Ember just to speed up diffing large lists. Plus it&#8217;s used by Facebook for Instagram and the commenting / messenging on Facebook, so it&#8217;s been proven to work in big apps. He thinks it&#8217;s going to be bigger than Angular and Ember in the next few years. </li>
<li>Lightning round </li>
<li>(46:34) Who&#8217;s getting the new Apple Watch? Kevin says it seems iPad 1-ish. Jon likes some things about the watch UI, including the automatic answer prompts from instant messages with questions. He says the Moto 360 looks better, and we haven&#8217;t heard anything about battery life. He&#8217;s not sure what he&#8217;d do with today&#8217;s smart watches, but hopes watches will be really cool in a few years. Jon doesn&#8217;t like all the proprietary stuff &#8211; payment, chargers, etc. Scott K says he could easily switch to Android and it wouldn&#8217;t bother him, so he&#8217;s not going to be getting the new iPhone. He&#8217;s got a Pebble and likes the notifications and battery life. He thinks the Apple Watch is too little too late. He thinks everything from Apple has gone downhill post-Jobs. He also talks about his recent laptop purchase &#8211; if he wanted a posix system, he&#8217;d rather just buy a laptop and put Linux on it. He starts ranting about npm and K Scott cuts him off. But then the guys start complaining about the live stream and things go off the rails again. </li>
<li>(1:02:32) Jon asks why nobody&#8217;s moved to CouchDb. K Scott says the company behind MongoDb is pretty pushy. Nobody had looked at DocumentDb yet, and both Kevin and Scott K are bullish on Postgres.</li>
</ul>
<p>Show Links:</p>
<ul>
<li><a href="https://github.com/google/traceur-compiler/blob/master/README.md">Traceur compiler</a> </li>
<li><a href="http://odetocode.com/blogs/scott/archive/2014/08/04/c-6-0-features-part-i-property-initializers.aspx">C# 6.0 Features Part I : Property Initializers</a></li>
<li><a href="http://odetocode.com/blogs/scott/archive/2014/08/14/c-6-0-features-part-ii-primary-constructors.aspx">C# 6.0 Features Part II : Primary Constructors</a></li>
<li><a href="http://odetocode.com/blogs/scott/archive/2014/09/15/c-6-0-features-part-3-declaration-expressions.aspx">C# 6.0 Features Part 3: Declaration Expressions</a></li>
<li><a title="http://odetocode.com/blogs/scott/archive/2014/07/31/the-features-of-es6-part-1-let.aspx" href="http://odetocode.com/blogs/scott/archive/2014/07/31/the-features-of-es6-part-1-let.aspx">The Features of ES6 Part 1: Let</a></li>
<li>
<div align="left"><a href="http://weblogs.asp.net/jongalloway/two-free-video-courses-intro-to-asp-net-mvc-and-responsive-ui-with-bootstrap">Two free video courses: Intro to ASP.NET MVC and Responsive UI with Bootstrap</a></div>
</li>
<li><a href="http://code.google.com/p/touchfreeze/">touchfreeze</a> </li>
<li><a title="http://www.castleproject.org/projects/monorail/" href="http://www.castleproject.org/projects/monorail/">MonoRail</a> </li>
<li><a href="http://facebook.github.io/react/">React</a> </li>
</ul>
<p>Sponsor</p>
<p>This show is brought to you by Runscope &#8211; find out more at <a href="http://runscope.com/herdingcode">http://runscope.com/herdingcode</a> </p>
<p><a href="http://runscope.com/herdingcode"><img style="border-left-width: 0px; max-width: 100%; border-right-width: 0px; border-bottom-width: 0px; border-top-width: 0px" src="https://www.runscope.com/static/img/press/logo-runscope-wordmark-white.png" /></a></p>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/o8HrlMwUEo0" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-197-summer-stories-c-6-vim-and-atom-terrible-keyboards-poorly-aged-hipster-code-react-and-the-apple-watch/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/Myz_zsRQD2Q/HerdingCode-0197-Discussion.mp3" fileSize="17289909" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>It&amp;#8217;s time for a discussion show! Download / Listen: Herding Code 197 &amp;#8211; Summer Stories, C# 6, Vim and Atom, Terrible Keyboards, Poorly Aged Hipster Code, React and the Apple Watch Show Notes: (01:22) What&amp;#8217;s new for Kevin? Node, Backbone, </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>It&amp;#8217;s time for a discussion show! Download / Listen: Herding Code 197 &amp;#8211; Summer Stories, C# 6, Vim and Atom, Terrible Keyboards, Poorly Aged Hipster Code, React and the Apple Watch Show Notes: (01:22) What&amp;#8217;s new for Kevin? Node, Backbone, working at Brandcast, some talk about how the shop runs. Plus he&amp;#8217;s been busy moving. [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-197-summer-stories-c-6-vim-and-atom-terrible-keyboards-poorly-aged-hipster-code-react-and-the-apple-watch/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/Myz_zsRQD2Q/HerdingCode-0197-Discussion.mp3" length="17289909" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0197-Discussion.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 196: Matias Niemela on ngAnimate</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/ORXAu2NmSBk/</link>
		<comments>http://herdingcode.com/herding-code-196-matias-niemela-on-nganimate/#comments</comments>
		<pubDate>Fri, 12 Sep 2014 19:05:56 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=670</guid>
		<description><![CDATA[The guys talk to AngularJS committer Matias Niemela about AngularJS and Angular animations with ngAnimate. Download / Listen: Herding Code 196: Matias Niemela on ngAnimate Show Notes: Hello. How&#8217;d you get started with AngularJS and ngAnimate? (01:00) K Scott notes a tweet from Matias that he liked Angular before it was popular and asks Matias [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to AngularJS committer Matias Niemela about AngularJS and Angular animations with ngAnimate.</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0196-Matias-Niemela.mp3">Herding Code 196: Matias Niemela on ngAnimate</a></p>
<audio class="wp-audio-shortcode" id="audio-670-3" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0196-Matias-Niemela.mp3?_=3" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0196-Matias-Niemela.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0196-Matias-Niemela.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Hello. How&#8217;d you get started with AngularJS and ngAnimate?
<ul>
<li>(01:00) K Scott notes a tweet from Matias that he liked Angular before it was popular and asks Matias about how he got started with Angular and how he became a contributor, primarily contributing to animation. He&#8217;s also contributed to angular-dart and forms. (03:17) K Scott asks about the history of Animations. Matias talks about how things evolved to working with CSS classes. K Scott talks about how he found the source code for animations was pretty interesting, and Matias agrees. </li>
</ul>
</li>
<li>Dart and Google Material Design
<ul>
<li>(04:47) K Scott asks about AngularDart relates to Angular. Matias explains that both are from Google, and they want to make sure that it&#8217;s easy to build Angular applications using Dart if you want to. </li>
<li>(05:39) Jon asks is Matias is working in both the 1.x and 2.0 source. Matias says he&#8217;s mostly focused on the 1.2 and 1.3 release and lately incorporating Google&#8217;s new Material Design, especially with animations and components. Angular Material Design includes styles and animations, but is built to allow you hooks to add your own styles and animations, transparently syncing them together in a consistent way. </li>
</ul>
</li>
<li>Animation internals</li>
<ul>
<li>(08:14) K Scott asks for Matias&#8217; thoughts on CSS Animations. Matias says the API is too isolated, so there&#8217;s no way to hook into the keyframe system. CSS Transitions do allow for that, but you can&#8217;t repeat transitions. Putting them together, it&#8217;s difficult to create a comprehensive system that&#8217;s guaranteed to always run. The Material Design animations work with the Web Animations API, which is a more robust animations API. Currently only Chrome support the .animate method, and the Web Animations API spec is still being written, but Polymer has a polyfill. </li>
<li>(10:16) Jon asks about browser support and whether Matias is able to write to standards or if he has to do a lot of special casing. Matias says that the Polymer polyfill and the animations API covers almost everything without special casing. </li>
<li>(11:11) K Scott asks what the most challenging part of Angular Matias has worked on so far. Matias says the challenge has been the animations, especially in refactoring over time. </li>
</ul>
<li>Testing in JavaScript</li>
<ul>
<li>(12:56) K Scott asks how Matias tests animations. He says that the tests are all mocked, so they&#8217;re not running against animation engines. He says it&#8217;s been difficult testing asynchronous code in a synchronous manner. </li>
<li>(14:38) Jon asks if Matias uses Javascript libraries to deal with asynchronous code. Matias says that&#8217;s all handled by Angular itself. </li>
</ul>
<li>ECMAScript 6</li>
<ul>
<li>(15:15) K Scott asks for Matias&#8217; thoughts on ECMAScript 6. Matias says that Angular 2 is built with ECMAScript 6 using traceur for backward compatibility. He likes the classes and generators an syntactic features, but after working with Dart there are a lot of other features he&#8217;s missing. The problem is that JavaScript is non-blocking, so the code will always be a series of callbacks with variables to see if a callback has fired. Promises are great, but they&#8217;re just packaged callbacks in a way. </li>
</ul>
<li>Getting Started, Form Validation</li>
<ul>
<li>(16:50) Jon asks for pointers for someone who&#8217;s new to ngAnimate. Matias says he&#8217;s written documentation for 1.2, but some of it isn&#8217;t up to date. There&#8217;s a SitePoint article about it, and when 1.3 is out Matias will have an article out about it. </li>
<li>(17:38) K Scott asks about form validation. Matias talks about the work they&#8217;ve been doing with forms in 1.3. </li>
</ul>
<li>ECMAScript 6 and JavaScript Development</li>
<ul>
<li>(18:55) Twitter question from Steve Strong asked for news on Angular 2.0 and how important ECMAScript 6 is to it. Matias talks about how ES6+ (ES6 with annotations support) simplify dependency injection. </li>
<li>(21:13) K Scott asks if Matias liked using JavaScript back when he was doing more full stack development. Matias talks about how he used to write a lot of JavaScript to do things that Angular just handles. </li>
<li>(22:38) K Scott says that Matias&#8217; blog and twitter names, Year Of Moo, made him thing that Matias might have been involved with Moo Tools. Matias says he used to be heavily invested in Moo Tools because it supported proper object oriented programming (as opposed to jQuery&#8217;s looser approach). He eventually switched to jQuery and then to Angular. He&#8217;d originally named his blog around an idea of writing a new Moo Tools plugin each month for a year, but kept the name because it&#8217;s unique. </li>
</ul>
<li>More Testing</li>
<ul>
<li>(23:50) K Scott asks Matias when he became passionate about testing. He talks about how valuable tests have been to him. </li>
<li>(24:45) Jon asks if Matias has any recommendations on testing. His suggestion is to pay attention to what you&#8217;re after. Your tests are to make sure that the code you&#8217;ve written work, so test the main points of functionality. Look for friction points &#8211; things that will not change &#8211; and test those. Try to write some of your own unit tests first, and when you get frustrated look at how projects like Angular are writing their tests. </li>
</ul>
<li>Inspiration and Design</li>
<ul>
<li>(26:12) K Scott asks Matias what he&#8217;s been looking to for inspiration. Matias has lately inspired by Clojure and books on software patterns and refactoring. </li>
<li>(26:51) Jon asks Matias about his site&#8217;s design and use of color. Matias says the cartoons on his site are by his girlfriend who is a graphic designer. He says that most technical bloggers are not focused on writing articles. His goal is to push the boundaries of technical blogging and to address the frustrations he&#8217;s had in reading other technical blogs. </li>
<li>(28:41) Jon says he really likes Matias&#8217; use of multiple em classes with different colors. Matias discusses that, and says that he&#8217;s rewriting the website from Jeckyl to Hugo (which is built with Go). </li>
</ul>
<li>Wrap up</li>
<ul>
<li>(29:58) K Scott asks what Matias does for fun. He mentions travel (he&#8217;s from Finland), golf and going to the gym. But computers is a big passion of his, so it&#8217;s rare that he&#8217;s away from the computer. </li>
<li>(30:28) K Scott says he used to play golf a lot, but he&#8217;s been making an effort to get out golfing at least once a week. Matias says it&#8217;s definitely a challenge a lot of programmers face &#8211; most of us like what we do, and going outside requires intention. Jon talks about his friends in other professions who leave their work at work. Matias talks about the portability aspect of computing. </li>
<li>(32:24) K Scott asks Matias about what&#8217;s on the way for for him. He mentions some posts and upcoming speaking engagements, especially ngEurope in October in Paris, talking about what&#8217;s new with Angular and ngAnimate. </li>
</ul>
</ul>
<p>Show Links:</p>
<ul>
<li>Matias Niemela (<a title="http://mahemoff.com/" href="http://yearofmoo.com/">http://yearofmoo.com/</a>,&#160; <a title="https://twitter.com/mahemoff" href="https://twitter.com/yearofmoo">@yearofmoo</a>) </li>
<li><a href="https://material.angularjs.org/">Angular Material Design examples</a> </li>
<li><a href="https://github.com/google/traceur-compiler/blob/master/README.md">Traceur compiler</a> </li>
<li><a href="http://www.yearofmoo.com/2013/04/animation-in-angularjs.html">ngAnimations post series</a> (currently covers ngAnimate 1.2) </li>
<li><a href="http://www.sitepoint.com/adding-css-animations-angularjs-applications/">Adding CSS Animations to AngularJS Applications</a> (SitePoint) </li>
<li><a href="http://ngeurope.org/">ng-europe</a> (October 22-23, Paris) </li>
</ul>
<p>Sponsor</p>
<p>This show is brought to you by Runscope &#8211; find out more at <a href="http://runscope.com/herdingcode">http://runscope.com/herdingcode</a> </p>
<p><a href="http://runscope.com/herdingcode"><img style="border-left-width: 0px; max-width: 100%; border-right-width: 0px; border-bottom-width: 0px; border-top-width: 0px" src="https://www.runscope.com/static/img/press/logo-runscope-wordmark-white.png" /></a></p>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/ORXAu2NmSBk" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-196-matias-niemela-on-nganimate/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/oSiwLVTMSoo/HerdingCode-0196-Matias-Niemela.mp3" fileSize="8604503" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to AngularJS committer Matias Niemela about AngularJS and Angular animations with ngAnimate. Download / Listen: Herding Code 196: Matias Niemela on ngAnimate Show Notes: Hello. How&amp;#8217;d you get started with AngularJS and ngAnimate? (01:00</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to AngularJS committer Matias Niemela about AngularJS and Angular animations with ngAnimate. Download / Listen: Herding Code 196: Matias Niemela on ngAnimate Show Notes: Hello. How&amp;#8217;d you get started with AngularJS and ngAnimate? (01:00) K Scott notes a tweet from Matias that he liked Angular before it was popular and asks Matias [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-196-matias-niemela-on-nganimate/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/oSiwLVTMSoo/HerdingCode-0196-Matias-Niemela.mp3" length="8604503" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0196-Matias-Niemela.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 195: Michael Mahemoff on Player FM</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/qzFhq_wfIp4/</link>
		<comments>http://herdingcode.com/herding-code-195-michael-mahemoff-on-player-fm/#comments</comments>
		<pubDate>Fri, 15 Aug 2014 20:46:15 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=668</guid>
		<description><![CDATA[The guys talk to Michael Mahemoff about Player FM, a cloud based podcast application which is focused on discovery and multi-device synchronization that he recently showed off at Google I/O. Download / Listen: Herding Code 195: Michael Mahemoff on Player FM Show Notes: Hello. What is Player FM? (00:48) K Scott asks Mike for a [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to Michael Mahemoff about Player FM, a cloud based podcast application which is focused on discovery and multi-device synchronization that he recently showed off at Google I/O.</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0195-Michael-Mahemoff.mp3">Herding Code 195: Michael Mahemoff on Player FM</a></p>
<audio class="wp-audio-shortcode" id="audio-668-4" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0195-Michael-Mahemoff.mp3?_=4" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0195-Michael-Mahemoff.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0195-Michael-Mahemoff.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Hello. What is Player FM? </li>
<ul>
<li>(00:48) K Scott asks Mike for a quick introduction. Mike has studies both psychology and software engineering and has worked on a variety of applications, focusing lately on HTML5 web applications. He&#8217;s been working for the past few years on Player FM, a cloud based podcast application which is focused on discovery and multi-device synchronization. </li>
<li>(01:55) K Scott asks about the technologies used to build Player FM. Mike talks about the advantages of moving feed fetching to the cloud, the web site (using a PJAX implementation which pushes markup rather than data and HTML5 history) and an API. </li>
</ul>
<li>Player FM API</li>
<ul>
<li>(04:33) K Scott asks more about the API. The server is running Ruby on Rails using controllers that supply different format based on the extension in URL. The API is publicly available for experimentation but isn&#8217;t officially supported. Mike&#8217;s set up using a spectrum of detail levels (none, id, medium and full) rather than allowing clients to select specific fields. This allows you to be efficient in your API requests for hierarchies but is still cachable. He&#8217;s created a framework to support that. </li>
<li>(09:10) Jon mentions some of the URLs he&#8217;s seeing in browsing the API for listeners who want to play along at home. He asks Mike about the balance of a self documenting API vs the full hypermedia smart client approach. Mike says he thinks the API needs to be pretty mature for that to work and points out some of the curated lists in the feed. </li>
<li>(11:33) K Scott asks if the curation is community based. Mike says that&#8217;s the eventual goal, but for now he&#8217;s doing that. </li>
<li>(12:23) K Scott asks about the difficulty in tracking when all the feeds have been last updated. Mike says that originally it was a simple loop using feedzilla. Now it&#8217;s using sidekick and the PubSubHubbub standard (using the superfeeder service and webhooks). The clients are still polling now, but he&#8217;s going to be updating the clients to use Google Cloud Messaging (on Android) and iCloud Messaging (on Apple) so the updates will be realtime from publisher to client. </li>
</ul>
<li>Native clients for Android and iOS</li>
<ul>
<li>(14:30) K Scott asks if Mike&#8217;s building native clients. Mike says the iOS client is still in development and the Android app is native. K Scott says he&#8217;s wanted to do some Android dev but it&#8217;s always seemed like the most difficult platform. Mike says that it&#8217;s gotten easier lately due to the new application services and gives an example of the Google Wear Services. Jon asks for some more info on the Google Wear integration and Mike explains how any media framework application automatically gets some support, and they&#8217;ve extended it to create a phone application to allow episode browsing on the watch. </li>
<li>(17:15) K Scott says he was surprised by Mike&#8217;s blog post about the demand for Chromecast support for audio applications and asks about the work required to build that support. Mike explains the API integration and says that the hardest part was complying with the look and feel guidelines. </li>
</ul>
<li>Advanced podcast support with Podlove</li>
<ul>
<li>(20:02) Jon asks if there are things that podcasts can add to enable podcast applications to give a better experience. Mike talks about emerging standards like Podlove which adds support for chapters, time based links, attributions and related feeds. Jon says he&#8217;s been including timestamps in the show notes for a while so that seems pretty easy to implement. Mike talks about how TimeJump and Podlove could allow for deep linking into content. </li>
<li>(22:18) K Scott asks what&#8217;s been frustrating in dealing with feeds. Mike talks about the difficulty in feed parsing and the differing standards and implementations. Jon says he&#8217;s always just used Feedburner. Mike likes Feedburner and appreciates the built-in support for PubSubHubbub and would like to see Google pay more attention to it. </li>
</ul>
<li>Misc: Business plan, mobile web support and Google I/O</li>
<ul>
<li>(24:24) K Scott asks if Player FM is Mike&#8217;s full time job. Mike says it is. They&#8217;re not monetizing it yet, but he&#8217;s building out a freemium service with advanced features like unlimited subscriptions and advanced syncing across devices. </li>
<li>(26:16) Jon asks if Mike has plans for a Windows Phone application. Mike says he&#8217;d love to support it eventually, but right now his support for other platforms is via the mobile optimized website and the Player FM feeds. </li>
<li>(27:06) K Scott asks about Mike&#8217;s experience in bringing Player FM to Google I/O. Mike talks about the experience &#8211; it was his 4th Google I/O, and he&#8217;s been both an attendee and speaker in the past, but this time he was too busy to attend. </li>
</ul>
<li>User Experience</li>
<ul>
<li>(28:43) K Scott asks how Mike&#8217;s psychology degree has helped him in software development. Mike talks about the applications in user interface design and machine learning. Jon asks about Mikes thesis about human computer interaction; Mike talks about user interface design patterns for consistency. </li>
<li>(32:20) K Scott says he&#8217;s happy the Player FM site doesn&#8217;t use the ubiquitous cheeseburger menu. Mike talks about some of the UI design features in the web application.</li>
</ul>
<li>API Optimization</li>
<ul>
<li>(33:19) K Scott asks about optimizations in the API. Mike talks about timestamps in the API responses so the mobile applications can keep aware of which channels have been updated and get the responses from edge servers. </li>
<li>(36:10) Jon asks about using JSON LD and E-Tags. Mike says he hasn&#8217;t needed that since he&#8217;s building the clients and they&#8217;re doing the same checking. </li>
<li>(37:39) Jon asks how Cloudflare has worked for Mike. Mike says it&#8217;s been great, but there were a few surprises like caching of error responses. </li>
<li>(38:40) K Scott asks if it&#8217;s possible to remove things from the cache. Mike explains some of the options. Jon talks about some of the difficulties in diagnosing content problems when you&#8217;ve got multiple levels of caching and Mike agrees that it&#8217;d be nice if there were some visibility via HTTP headers. </li>
</ul>
<li>Search and Discovery</li>
<ul>
<li>(40:48) Jon asks if Player FM has additional markup to light up in search results. Mike says they were one of the early sites to be included in the Google app indexing setup, which supports deep linking in Android applications. </li>
<li>(42:30) K Scott says he&#8217;s looking forward to the recommendation features and Mike describes some of the things they&#8217;re including. </li>
<li>(43:30) Mike talks about Player FM support for full text search using Elastic Search to allow for easier discovery. </li>
<li>(44:25) Kevin asks if transcripts could be included in the full text search. Mike talks about some of the standards support. </li>
</ul>
<li>Wrap Up</li>
<ul>
<li>(45:49) K Scott asks what Mike does when he&#8217;s not working on Player FM. </li>
<li>(46:47) K Scott asks Mike what&#8217;s coming up for him in the near future. Mike talks about some Player FM features he&#8217;s excited about working on like intelligent discovery, collaborative filtering, server-side play tracking, analytics and platform support including an desktop form factor that will work offline. The desktop application is based on an open source project they&#8217;re working on that will compile a Chrome application and cross-compile native applications for Windows, Apple and Linux (based on node webkit). </li>
<li>(48:20) K Scott asks for any last words; Mike says he&#8217;s happy for any questions at <a href="mailto:mike@playerfm.com">mike@playerfm.com</a>. </li>
</ul>
</ul>
<p>Show Links:</p>
<ul>
<li>Michael Mahemoff (<a title="http://mahemoff.com/" href="http://mahemoff.com/">http://mahemoff.com/</a>,&#160; <a title="https://twitter.com/mahemoff" href="https://twitter.com/mahemoff">@mahemoff</a>) </li>
<li><a href="https://player.fm/">Player FM</a> </li>
<li><a href="http://blog.player.fm/design-develop-and-distribute-player-fm-at-google-io-2014/">Design, Develop And Distribute: Player FM At Google IO Developer Sandbox</a> </li>
<li><a title="http://podlove.org/projects/" href="http://podlove.org/projects/">Podlove Projects</a> </li>
<li><a href="https://code.google.com/p/pubsubhubbub/">PubSubHubbub</a> </li>
<li><a title="http://json-ld.org/" href="http://json-ld.org/">JSON-LD</a> (JSON for Linking Data) </li>
<li><a title="http://ui-patterns.com/" href="http://ui-patterns.com/">UI Patterns</a> </li>
</ul>
<p>Sponsor</p>
<p>This show is brought to you by Runscope &#8211; find out more at <a href="http://runscope.com/herdingcode">http://runscope.com/herdingcode</a> </p>
<p><a href="http://runscope.com/herdingcode"><img style="border-left-width: 0px; max-width: 100%; border-right-width: 0px; border-bottom-width: 0px; border-top-width: 0px" src="https://www.runscope.com/static/img/press/logo-runscope-wordmark-white.png" /></a></p>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/qzFhq_wfIp4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-195-michael-mahemoff-on-player-fm/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/_fRjE5us170/HerdingCode-0195-Michael-Mahemoff.mp3" fileSize="13999475" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to Michael Mahemoff about Player FM, a cloud based podcast application which is focused on discovery and multi-device synchronization that he recently showed off at Google I/O. Download / Listen: Herding Code 195: Michael Mahemoff on Player </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to Michael Mahemoff about Player FM, a cloud based podcast application which is focused on discovery and multi-device synchronization that he recently showed off at Google I/O. Download / Listen: Herding Code 195: Michael Mahemoff on Player FM Show Notes: Hello. What is Player FM? (00:48) K Scott asks Mike for a [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-195-michael-mahemoff-on-player-fm/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/_fRjE5us170/HerdingCode-0195-Michael-Mahemoff.mp3" length="13999475" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0195-Michael-Mahemoff.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 194: Hadi Hariri on Kotlin, Nitra, and Developing In A Decade</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/TQMrGU5l2L4/</link>
		<comments>http://herdingcode.com/herding-code-194-hadi-hariri-on-kotlin-nitra-and-developing-in-a-decade/#comments</comments>
		<pubDate>Fri, 25 Jul 2014 15:39:05 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=666</guid>
		<description><![CDATA[The guys talk to Hadi Hariri about Kotlin, Nitra, and his NDC talk, Developing In A Decade. Download / Listen: Herding Code 194: Hadi Hariri on Kotlin Show Notes: Hello. What is Kotlin? (01:00) K Scott asks what Kotlin is. Hadi explains it&#8217;s a statically type programming language that targets the JVM and JavaScript, and [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to Hadi Hariri about Kotlin, Nitra, and his NDC talk, Developing In A Decade.</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0194-Hadi-Hariri.mp3">Herding Code 194: Hadi Hariri on Kotlin</a></p>
<audio class="wp-audio-shortcode" id="audio-666-5" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0194-Hadi-Hariri.mp3?_=5" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0194-Hadi-Hariri.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0194-Hadi-Hariri.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Hello. What is Kotlin?
<ul>
<li>(01:00) K Scott asks what Kotlin is. Hadi explains it&#8217;s a statically type programming language that targets the JVM and JavaScript, and that it was designed to serve the needs of the JetBrains development team: Let&#8217;s create a language that a language that we can use ourselves&#8230; and if other people want to use it then, awesome. </li>
<li>(03:07) K. Scott asks about the source code. It&#8217;s on Github and it&#8217;s under Apache 2 license. He asks who in their right mind these days would design a closed source language *cough* Swift *cough*. </li>
<li>(03:48) Jon asks about comparisons with the Swift language. Hadi comments and says both Kotlin and Swift are kind of similar to Groovy. Jon asks why not just use Groovy then, and Hadi says that they wanted a statically typed language. </li>
<li>(05:32) K. Scott asks about the comparisons with Scala and Java. Hadi says that Kotlin is more restrictive than Scala in some cases, which they see as a benefit. They strive for 100% interoperability with Java, since they have 14 years of existing Java source code to work with. </li>
<li>(08:15) K. Scott asks about the JavaScript story. Hadi says it was bound to happen eventually, so they just did it from the source. The benefit is that you can share source code between server and client. </li>
<li>(11:44) K. Scott asks about .NET support in the roadmap. Hadi says it&#8217;s not likely soon. He says there&#8217;s a ton of activity on the JVM lately, and it runs everywhere, albeit with the Ask toolbar. </li>
<li>(13:31) Jon asks about running Java code on Mono and .NET using IKVM. Hadi says he&#8217;s tried it on some prototypes and it works, but Scott K complains that it&#8217;s really slow. </li>
<li>(14:33) Scott K. Asks about the use of inference. Hadi says one of the goals of Kotlin is to be very concise, so you very rarely need to declare types. </li>
<li>(17:43) K Scott asks if there are any libraries that JetBrains has for Kotlin. Hadi describes Kara, a web framework which makes use of strongly-typed HTML and CSS builders. Spec is a specification framework that Hadi&#8217;s written. Kotlin is pretty popular for Android development, so there are a lot of Android helpers available. </li>
<li>(21:31) Jon asks about best places to get started with Kotlin. Hadi says it&#8217;s very easy to get started with just the compiler, available from on the Kotlin site. For an IDE-centric experience, use IntelliJ (either the free OSS Community Edition Version or IntelliJ IDEA Ultimate). You can also use the browser-based Kotlin demo without downloading anything. </li>
</ul>
</li>
<li>Java
<ul>
<li>(23:06) Jon mentions installing Java JDK via Chocolatey, so as not to get the Ask toolbar. Hadi agrees and says that the Ask toolbar was from back in the Sun days, it&#8217;s not an Oracle thing. Jon also asks about the Java browser plugin. There&#8217;s a silly discussion about Java applets. </li>
<li>(26:44) Jon asks about Nitra. Hadi explains the difference between Nitra, Kotlin and MPS. MPS (Meta Programming System) is a language workbench to create new languages or extend existing ones running on the JVM. Kotlin is a separate language, but it&#8217;s written in a way that makes it possible to easily create DSL&#8217;s. Nitra is an open source tool built by the Nemerle team, who were hired by JetBrains. Nitra is similar to Roslyn &#8211; it&#8217;s a generic tool that allows you to create a compiler for any language with support for tooling. </li>
</ul>
</li>
<li>Nitra
<ul>
<li>(30:36) Jon asks how Nitra is being used. Hadi says it&#8217;s mostly used internally by JetBrains, and it&#8217;s still really under development. </li>
<li>(32:45) Jon asks about the Nitra samples and Visual Studio extensions on GitHub. Hadi says you can start using them already, and that it does include Nemerle so you can start extending the with it now, but it won&#8217;t provide tooling for the language you&#8217;re building. </li>
</ul>
</li>
<li>Developing In A Decade
<ul>
<li>(33:38) K Scott asks about Hadi&#8217;s talk at NDC called Developing in a Decade, looking ahead at technology and trends ten years from now. Hadi says he&#8217;s not so much looking at how or what we&#8217;ll be doing, but why we&#8217;ll be doing it. He says that he sees an overemphasis on how many rounds of VC money a company gets as opposed to what they&#8217;re actually doing. He&#8217;s interested in things people are doing for social good, and he&#8217;s concerned that we&#8217;re being destructive without thinking about the effects. </li>
<li>(39:02) K Scott says that until recently when he called tech support, when he finally got to a person they could help him. Lately he&#8217;s been finding that when he reaches a person, they&#8217;re powerless to help him because the computers are in control. Hadi talks about how emerging technology like self driving cars will eliminate jobs. </li>
<li>(41:26) Jon ask Hadi if trends towards automation will have positive effects, such as creating content that wouldn&#8217;t have previously been available or giving us more time to produce things we wouldn&#8217;t have before. Hadi references Brave New World and Amusing Ourselves To Death, and says that the huge explosion of content has a negative effect. Scott K and Hadi talk about the numbing effect of news as entertainment. </li>
</ul>
</li>
<li>Parting Shot
<ul>
<li>(48:25) Hadi says &quot;I told you so&quot; about the coming unification of Web API and MVC controllers. </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Hadi Hariri (<a href="http://hadihariri.com/">blog</a>, <a href="https://twitter.com/#!/hhariri">@hhariri</a>) </li>
<li><a href="http://kotlinlang.org/">Project Kotlin</a> </li>
<li><a title="http://hadihariri.com/2014/04/17/getting-started-with-kotlin-oss-project/" href="http://hadihariri.com/2014/04/17/getting-started-with-kotlin-oss-project/">Blog post: Getting Started with a Kotlin OSS Project</a> </li>
<li><a href="http://confluence.jetbrains.com/display/Kotlin/Type-safe+Groovy-style+builders">Type-safe Groovy-style builders</a> </li>
<li><a title="http://blog.jetbrains.com/blog/2014/05/27/nitra-goes-open-source/" href="http://blog.jetbrains.com/blog/2014/05/27/nitra-goes-open-source/">Blog: Nitra goes open source</a> </li>
<li><a href="http://karaframework.com/">Kara Web Framework</a> </li>
<li>NDC video: <a href="http://vimeo.com/97315946">Developing In A Decade</a> </li>
<li>Hadi&#8217;s post about MVC and Web API controllers: <a href="http://hadihariri.com/2012/04/06/with-http-your-application-is-your-api/">With HTTP, your application is your API</a> </li>
</ul>
<p>Sponsor</p>
<p>This show is brought to you by Runscope &#8211; find out more at <a href="http://runscope.com/herdingcode">http://runscope.com/herdingcode</a> </p>
<p><a href="http://runscope.com/herdingcode"><img style="border-left-width: 0px; max-width: 100%; border-right-width: 0px; border-bottom-width: 0px; border-top-width: 0px" src="https://www.runscope.com/static/img/press/logo-runscope-wordmark-white.png" /></a></p>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/TQMrGU5l2L4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-194-hadi-hariri-on-kotlin-nitra-and-developing-in-a-decade/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/dUs_cuaVoAM/HerdingCode-0194-Hadi-Hariri.mp3" fileSize="12666971" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to Hadi Hariri about Kotlin, Nitra, and his NDC talk, Developing In A Decade. Download / Listen: Herding Code 194: Hadi Hariri on Kotlin Show Notes: Hello. What is Kotlin? (01:00) K Scott asks what Kotlin is. Hadi explains it&amp;#8217;s a stati</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to Hadi Hariri about Kotlin, Nitra, and his NDC talk, Developing In A Decade. Download / Listen: Herding Code 194: Hadi Hariri on Kotlin Show Notes: Hello. What is Kotlin? (01:00) K Scott asks what Kotlin is. Hadi explains it&amp;#8217;s a statically type programming language that targets the JVM and JavaScript, and [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-194-hadi-hariri-on-kotlin-nitra-and-developing-in-a-decade/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/dUs_cuaVoAM/HerdingCode-0194-Hadi-Hariri.mp3" length="12666971" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0194-Hadi-Hariri.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 193: Mark Rendle on Zudio, developing with Angular and Typescript, The History of Programming, and Simple.Data</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/kn6KQTnRFu4/</link>
		<comments>http://herdingcode.com/herding-code-193-mark-rendle-on-zudio-developing-with-angular-and-typescript-the-history-of-programming-and-simple-data/#comments</comments>
		<pubDate>Mon, 07 Jul 2014 21:50:19 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=660</guid>
		<description><![CDATA[At Techorama 2014 (Belgium), Jon corners Mark Rendle for a few minutes to talk about his new startup, Zudio, &#34;the Azure Cloud storage toolkit,&#34; his keynote on the History of Programming, and other minutia. Download / Listen: Herding Code 193: Mark Rendle on Zudio, developing with Angular and Typescript, The History of Programming, and Simple.Data [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At Techorama 2014 (Belgium), Jon corners Mark Rendle for a few minutes to talk about his new startup, Zudio, &quot;the Azure Cloud storage toolkit,&quot; his keynote on the History of Programming, and other minutia. </p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0193-Mark-Rendle.mp3">Herding Code 193: Mark Rendle on Zudio, developing with Angular and Typescript, The History of Programming, and Simple.Data</a></p>
<audio class="wp-audio-shortcode" id="audio-660-6" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0193-Mark-Rendle.mp3?_=6" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0193-Mark-Rendle.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0193-Mark-Rendle.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>History of Programming
<ul>
<li>(00:54) Jon asks Mark what the talk was about, and some of his personal favorite periods. </li>
<li>(01:53) Jon remarks that some of the joke terrible languages weren&#8217;t much worse than the unintentionally terrible languages. Mark mentions Intercal, brainf*** and Malbolge as joke programming languages and IBM Cobol as the most unintentionally hilarious programming language. </li>
</ul>
</li>
<li>Zudio: The Azure Cloud Storage Toolkit
<ul>
<li>(02:55) Mark talks about how Zudio got started and where it&#8217;s at. Zudio is a web based tool for managing Azure storage. It&#8217;s great for a lot of users, especially PHP / Node / Java developers and in the enterprise. It&#8217;s built with AngularJS and Typescript. </li>
<li>(04:37) Jon said he assumed it was just a simple table grid, but there are seem to be a lot more advanced features. Mark talks about the new enterprise model, which lets you control your user list through Azure Active Directory (which can be synchronized to on premises Active Directory), and you can assign different access rights to users and groups. There&#8217;s also auditing and logging to track usage. </li>
<li>(05:29) Jon asks if he&#8217;s specifically focused on storage. Mark talks about upcoming support for SQL databases, including Azure SQL, SQL VM&#8217;s, ClearDB running MySQL, Oracle VM&#8217;s, Postgres via VM, etc. that will show run queries and show results in a grid, list tables and views, etc. Jon compares it to phpMyAdmin, but Mark says it&#8217;s for any database and deployed in the same datacenters, without you needing to spin up a web server. His stretch goal is to handle data migrations between different database systems. </li>
</ul>
</li>
<li>Angular and Typescript
<ul>
<li>(07:19) Jon says that Mark&#8217;s been a fan of Angular and Typescript for a while and asks why he likes the combination so much. Mark says it feels like the data binding framework Microsoft&#8217;s been trying to build since VB3. </li>
<li>(08:30) Jon asks why Typescript instead of just writing in JavaScript. Mark talks about the benefits of compile-time checking. Jon asks for some specific answers and Mark gives an example with services passed as parameters. Oh, and IntelliSense is handy, too. Mark uses DefinitelyTyped and some Bower packages that he maintains. </li>
<li>(10:24) Mark says that unlike most frameworks he&#8217;s worked with, he&#8217;s gotten to the end of a project using Angular and doesn&#8217;t want to throw it out, so that&#8217;s saying something. </li>
</ul>
</li>
<li>Simple.Web and Simple.Data
<ul>
<li>(11:33) Jon asks Mark what&#8217;s going on with Simple.Web (a simple .NET web framework with attribute routing and dependency injection). Mark says that everything that had driven him to create Simple.Web has been added into ASP.NET vNext, so Simple.Web is pretty much done. </li>
<li>(14:50) Simple.Data is Mark&#8217;s simple data access layer that leverages dynamic types and can work without any code changes against a lot of different databases. </li>
<li>(15:52) Jon asks why someone would use Simple.Data instead of Entity Framework. Mark explains how Simple.Data works really well in lightweight web frameworks; it&#8217;s so simple you can code to it without IntelliSense. </li>
<li>(16:47) Mark is focused on updates to Simple.Data for use in Zudio, and will we working on more metadata, performance, and async support. He&#8217;s looking at moving to async only and is interested in listener input on that. </li>
</ul>
</li>
<li>Wrap up
<ul>
<li>(18:13) Mark likes all the new stuff and thinks it&#8217;s a good time to be a programmer. </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Mark Rendle (<a href="http://blog.markrendle.net/">blog</a>, <a href="http://twitter.com/markrendle">@MarkRendle</a>) </li>
<li>Zudio </li>
<li><a title="http://herdingcode.com/herding-code-106-mark-rendle-on-simple-data/" href="http://herdingcode.com/herding-code-106-mark-rendle-on-simple-data/">Herding Code 106: Mark Rendle on Simple.Data</a> </li>
<li><a href="http://vimeo.com/97541186">History of Programming (NDC recording)</a>&#160; </li>
<li>Programming languages
<ul>
<li><a title="http://esolangs.org/wiki/Malbolge" href="http://esolangs.org/wiki/Malbolge">Malbolge</a> </li>
<li><a title="http://esolangs.org/wiki/Intercal" href="http://esolangs.org/wiki/Intercal">INTERCAL</a> </li>
<li><a href="http://esolangs.org/wiki/Brainfuck">brainf***</a> </li>
<li><a href="http://en.wikipedia.org/wiki/COBOL">COBOL</a> </li>
</ul>
</li>
<li><a href="https://github.com/markrendle/Simple.Web">Simple.Web</a> </li>
<li><a href="https://github.com/markrendle/Simple.Data">Simple.Data</a> </li>
</ul>
<p>Sponsor</p>
<p>This show is brought to you by Runscope &#8211; find out more at <a href="http://runscope.com/herdingcode">http://runscope.com/herdingcode</a> </p>
<p><a href="http://runscope.com/herdingcode"><img style="max-width: 100%; border: 0px; background-color:white;" src="/wp-content/uploads/ads/logo-runscope-wordmark-white.png" /></a></p>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/kn6KQTnRFu4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-193-mark-rendle-on-zudio-developing-with-angular-and-typescript-the-history-of-programming-and-simple-data/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/QKs6ah0JJo0/HerdingCode-0193-Mark-Rendle.mp3" fileSize="13266664" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At Techorama 2014 (Belgium), Jon corners Mark Rendle for a few minutes to talk about his new startup, Zudio, &amp;#34;the Azure Cloud storage toolkit,&amp;#34; his keynote on the History of Programming, and other minutia. Download / Listen: Herding Code 193: Mark</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At Techorama 2014 (Belgium), Jon corners Mark Rendle for a few minutes to talk about his new startup, Zudio, &amp;#34;the Azure Cloud storage toolkit,&amp;#34; his keynote on the History of Programming, and other minutia. Download / Listen: Herding Code 193: Mark Rendle on Zudio, developing with Angular and Typescript, The History of Programming, and Simple.Data [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-193-mark-rendle-on-zudio-developing-with-angular-and-typescript-the-history-of-programming-and-simple-data/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/QKs6ah0JJo0/HerdingCode-0193-Mark-Rendle.mp3" length="13266664" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0193-Mark-Rendle.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 192: Jackson Harper on the CodeReview iOS app</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/6R4OhWiOW8g/</link>
		<comments>http://herdingcode.com/herding-code-192-jackson-harper-on-the-codereview-ios-app/#comments</comments>
		<pubDate>Mon, 16 Jun 2014 23:15:46 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=656</guid>
		<description><![CDATA[The guys talk to Jackson Harper about CodeReview, his iPad application for reviewing GitHub pull requests. As Jackson describes the episode on Twitter: &#34;&#8230;hear me talk about: @johnsheehan, @codereviewapp, and my one weird trick for writing better code.&#34; Download / Listen: Herding Code 192: Jackson Harper on the CodeReview iOS app Show Notes: Hello. What [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to Jackson Harper about CodeReview, his iPad application for reviewing GitHub pull requests. As Jackson describes the episode on Twitter: &quot;&#8230;hear me talk about: <a href="https://twitter.com/johnsheehan"><s>@</s><b>johnsheehan</b></a>, <a href="https://twitter.com/codereviewapp"><s>@</s><b>codereviewapp</b></a>, and my one weird trick for writing better code.&quot;</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0192-Jackson-Harper.mp3">Herding Code 192: Jackson Harper on the CodeReview iOS app</a></p>
<audio class="wp-audio-shortcode" id="audio-656-7" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0192-Jackson-Harper.mp3?_=7" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0192-Jackson-Harper.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0192-Jackson-Harper.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Hello. What is CodeReview?
<ul>
<li>(00:18) Kevin introduces Jackson and asks about CodeReview. Jackson talks about how he missed </li>
<li>(01:25) Kevin asks about some of the specific features in CodeReview. </li>
<li>(02:05) Jon asks what the CodeReview app adds to the mobile web experience on GitHub. One of the big features is that CodeReview allows for completely working completely disconnected. </li>
</ul>
</li>
<li>Nerdy Implementation Details
<ul>
<li>(04:10) Kevin asks if Jackson&#8217;s working against the GitHub API&#8217;s. Jackson says he debated working using Git directly, but so far he&#8217;s been using the GitHub API. Internally the code is abstracted so in theory it could work against other source code hosts like CodePlex. There&#8217;s a brief discussion of Google Glass </li>
<li>(05:45) Jon asks about Jackson&#8217;s development stack. Jackson says he&#8217;s working directly in Objective-C and some C as well for the Markdown parser. There&#8217;s some discussion of the joy of writing parsers in C. Jackson talks about how some old formats like diff are so much simpler to parse than even newer formats like XML and JSON. </li>
<li>(08:15) Jon asks why Jackson didn&#8217;t use Mono for this application. Jackson says he&#8217;s writing Objective-C for his day job, so it&#8217;s good for him to write as much Objective-C as possible. Kevin said it seemed like working with Mono would require learning Objective-C to read the documentation. Jackson agrees, but says that learning the iOS APIs using Mono made the transition a lot easier for him. </li>
<li>(10:46) Jon asks about the BetterFetch feature. Jackson talks about he&#8217;d originally modeled the application more like a Twitter stream, so he&#8217;d been using the stream API. Over time, it became obvious that an e-mail client was a better application model, so he&#8217;s moved off the steam API. </li>
</ul>
</li>
<li>Business Model and Pricing
<ul>
<li>(12:47) Jon asks about the business model and pricing. Jackson said he and JB originally thought that they&#8217;d use a freemium model, but they figured out that it really was more applicable for business users who can&#8217;t as easily do in-app purchasing. He&#8217;s switched to a flat rate to allow for group purchases and generally work better for business scenarios. Kevin says $20 is pretty steep for an app, but Jon says it says it seems completely reasonable for the right application with one of his favorite Android applications which cost $20. Jackson says it&#8217;s a perpetual license, iPad apps often sell for a little more, and since it offers a lot of value to businesses he thinks it&#8217;s worth it. They&#8217;d originally looked at $4.99, but that&#8217;s hard to make any money off. Jon says he thinks that the price sensitivity between $4.99 and $19.99 is probably a lot less than between free and 99 cents. Jackson says he wants to sell and support a quality application that&#8217;s sustainable. </li>
</ul>
</li>
<li>Services? Nope, just more repos.
<ul>
<li>(18:03) Kevin asks if it&#8217;s all run off GitHub or if there are some hosted background services. Jackson says it&#8217;s all running off GitHub. He supports storing additional profile data in an optional GitHub repository. Since he knows you&#8217;ll have a GitHub application, he can include support for retina quality profile images (and potentially other information) stored in GitHub. </li>
</ul>
</li>
<li>Design issues
<ul>
<li>(20:54) Kevin asks if he&#8217;s been working with a designer or doing it himself. Jackson talks about how he&#8217;s worked with a few designers and it&#8217;s really helped. </li>
<li>(22:50) Kevin asks if the application&#8217;s design reflects GitHub&#8217;s design. Jackson says it&#8217;s similar, but explains some important differences between the application and the website. </li>
<li>(24:27) Jon asks about the full screen experience. Jackson explains how it both frees up screen real estate and allows you to focus. </li>
</ul>
</li>
<li>Code Reviews and Separating the Creative and Editorial Process
<ul>
<li>(25:24) Twitter question from Elijah Manor: &quot;Do you use the CodeReview app to review code for the app itself?&quot; Jackson says yes and explains how a bit inspiration for the application was Stephen King&#8217;s writing workflow: bang out a bunch of pages in the morning, edit in the evening. Separating the creation and refining steps allow for a lot more productivity. Jon&#8217;s very interested and asks Jackson for tips on how to do that. Jackson talks about setting small goals and working in a coffeeshop without bringing his power adapter, so he&#8217;s constrained on time and internet use. K. Scott says that the iPad form factor probably helps for this, and Jackson agrees &#8211; he sees it as really good for focus. </li>
<li>(30:41) Jon asks if there are other features he could add by gathering intelligence about my codebase and workflow. Jackson mentions some ideas like hotspots and detecting patch impact. He&#8217;s been watching GitHub&#8217;s career page hoping to see that they&#8217;ll be hiring data scientists to start providing this kind of information.&#160; Jon agrees that it&#8217;d be great for GitHub to start investing in data science. Jackson says that you could get a pretty good start on patch impact just by manually flagging a few files as important. Kevin says this would have been useful in the case of OpenSSL. </li>
</ul>
</li>
<li>Code Reviews and Git Workflows
<ul>
<li>(34:29) Jon asks about workflow support for larger teams and team hierarchy. Jackson talks about some of the different Git workflow methodologies. He says he might eventually add support for code review tools like Gerrit, although he feels that some of these tools give code review a bad name because they force you to look for minutia as opposed to the big picture. </li>
</ul>
</li>
<li>When Does it Ship
<ul>
<li>(37:56) Jon asks how close he is to shipping. Jackson talks about the beta and some of the challenges of running a beta. [Note: the application is now up on the app store] </li>
</ul>
</li>
<li>Metrics, Tracking and API Profiling
<ul>
<li>(37:35) Jon asks if he&#8217;s tracking metrics or tracking. Jackson says he&#8217;s gathering crash reports and doing some very basic analytics using localytics because he doesn&#8217;t want users to be concerned. Jon says he likes applications give checkboxes to allow for extended tracking. Jackson talks about how he&#8217;s using Runscope and would like to allow users to optionally turn Runscope on. Jackson and Jon rave about Runscope; Jackson talks about how a few hours of API profiling helped him significantly improve the application performance. Jon talks about how we don&#8217;t think about server interactions, and there&#8217;s all kinds of crazy, scary things going on behind the scenes. Jackson tells a horror story about how the Mono site used to return the logo image when you tried to download, and they didn&#8217;t find it out until they looked at the server logs. Jon talks about a case where someone requesting the Herding Code RSS feed several times a second. </li>
</ul>
</li>
<li>What&#8217;s Next?
<ul>
<li>(48:39) Jon asks what&#8217;s next for the app. Jackson talks about the difficulty in cutting off the features and shipping a version. </li>
<li>(49:29) Kevin asks if he&#8217;s got big vision for more than code review. Jackson says he just wants to ship it and will probably start looking at other features eventually. Kevin talks about a polititian who&#8217;s put all of his information on GitHub. Jackson says he&#8217;s worked with a lawyer in setting up the company and wished they he could work in Markdown. Jon talks about how it would be nice if Markdown had review and change tracking that were similar to Word&#8217;s. Jon says that the recent hosted Sharepoint releases are getting close. Kevin, Jackson and Jon talk about how foreign the idea of versioning and change tracking is to most professions. </li>
</ul>
</li>
<li>Random questions
<ul>
<li>(55:35) &quot;Who is the best canadian you know&quot; (Wayne Gretzky) </li>
<li>(55:55) &quot;What type of dog is your favorite&quot; Labrador </li>
<li>(55:57) &quot;When will you stop lying about your tweets&quot; There&#8217;s a short discussion about deleting tweets and Jackson&#8217;s feature request for Tweet focus testing. Jackson talks about a time when Twitter asked users to stop deleting tweets for performance reaons </li>
</ul>
</li>
<li>Epilogue
<ul>
<li>(59:20) The app is now live on the app store! You can find out about it at CodeReview.io. </li>
<li>(1:00:32) Jon asks for some promo codes, Jackson gives away ten free promo codes (below)! </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Jackson Harper (<a href="http:// jacksonh.org">jacksonh.org</a>,&#160; <a href="https://twitter.com/jacksonh">@jacksonh</a>) </li>
<li><a href="http://codereview.io/">CodeReview.io</a> </li>
<li><a href="http://code.google.com/p/gerrit/">Gerrit code review tool</a> </li>
<li><a href="http://herdingcode.com/herding-code-168-john-sheehan-on-runscope/">Herding Code 168: John Sheehan on Runscope</a> </li>
<li><a href="http://www.localytics.com/">Localytics</a> </li>
</ul>
<p>Promo Codes for show listeners (please just take one, leave a comment when they&#8217;re all gone):</p>
<ul>
<li><a href="http://tokn.co/gcmy5zs7">http://tokn.co/gcmy5zs7</a> </li>
<li><a href="http://tokn.co/5qdrawcy">http://tokn.co/5qdrawcy</a> </li>
<li><a href="http://tokn.co/unftsayg">http://tokn.co/unftsayg</a> </li>
<li><a href="http://tokn.co/6z5xcs8r">http://tokn.co/6z5xcs8r</a> </li>
<li><a href="http://tokn.co/9p243ttq">http://tokn.co/9p243ttq</a> </li>
<li><a href="http://tokn.co/y49p9z7m">http://tokn.co/y49p9z7m</a> </li>
<li><a href="http://tokn.co/cxvjme4d">http://tokn.co/cxvjme4d</a> </li>
<li><a href="http://tokn.co/pmpnja6f">http://tokn.co/pmpnja6f</a> </li>
<li><a href="http://tokn.co/rakqesz5">http://tokn.co/rakqesz5</a> </li>
<li><a href="http://tokn.co/e7jdrd2e">http://tokn.co/e7jdrd2e</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/6R4OhWiOW8g" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-192-jackson-harper-on-the-codereview-ios-app/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/toGqS6Fy9nQ/HerdingCode-0192-Jackson-Harper.mp3" fileSize="19377069" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to Jackson Harper about CodeReview, his iPad application for reviewing GitHub pull requests. As Jackson describes the episode on Twitter: &amp;#34;&amp;#8230;hear me talk about: @johnsheehan, @codereviewapp, and my one weird trick for writing better</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to Jackson Harper about CodeReview, his iPad application for reviewing GitHub pull requests. As Jackson describes the episode on Twitter: &amp;#34;&amp;#8230;hear me talk about: @johnsheehan, @codereviewapp, and my one weird trick for writing better code.&amp;#34; Download / Listen: Herding Code 192: Jackson Harper on the CodeReview iOS app Show Notes: Hello. What [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-192-jackson-harper-on-the-codereview-ios-app/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/toGqS6Fy9nQ/HerdingCode-0192-Jackson-Harper.mp3" length="19377069" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0192-Jackson-Harper.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 191: Derick Bailey on SignalLeaf and Getting Started Podcasting</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/tm4r9Jcs5ZA/</link>
		<comments>http://herdingcode.com/herding-code-191-derick-bailey-on-signalleaf-and-getting-started-podcasting/#comments</comments>
		<pubDate>Tue, 03 Jun 2014 23:24:46 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=652</guid>
		<description><![CDATA[The guys (joined by guest host Rob Conery) talk to Derick Bailey about his new podcast audio hosting venture, SignalLeaf. Download / Listen: Herding Code 191: Derick Bailey on SignalLeaf and Getting Started Podcasting Show Notes: What is SignalLeaf? (00:18) Kevin introduces the show and warns listeners that Rob Conery is present. (01:00) Kevin asks [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys (joined by guest host Rob Conery) talk to Derick Bailey about his new podcast audio hosting venture, SignalLeaf.</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0191-Derick-Bailey.mp3">Herding Code 191: Derick Bailey on SignalLeaf and Getting Started Podcasting</a></p>
<audio class="wp-audio-shortcode" id="audio-652-8" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0191-Derick-Bailey.mp3?_=8" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0191-Derick-Bailey.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0191-Derick-Bailey.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>What is SignalLeaf?
<ul>
<li>(00:18) Kevin introduces the show and warns listeners that Rob Conery is present. </li>
<li>(01:00) Kevin asks Derick what SignalLeaf is. Derick explains that SignalLeaf is a podcast audio hosting service. He explains how his service compares to big players like Libsyn. </li>
<li>(02:05) There&#8217;s a discussion of Libsyn. Jon confesses that Herding Code still runs off WordPress on an &quot;unlimited hosting&quot; account. </li>
</ul>
</li>
<li>Bandwidth costs
<ul>
<li>(02:52) Jon asks Derick if the main cost is bandwidth. Derick explains that SignalLeaf runs on Heroku, but all the storage goes directly to Amazon S3 storage. He agrees that bandwidth is the main cost, and is planning to just make sure the overall subscribers balance out some of the more expensive bandwidth costs. </li>
<li>(04:52) Jon asks Derick what else he provides outside of audio hosting. Derick says he provides audio hosting, an RSS feed and stats, but he limits it at that. He also provides a blog with a lot of good information. The goal isn&#8217;t a big all-in-one service, just keeping it simple for people who want to get started. </li>
<li>(06:31) Rob gives the example of the rapid takeoff of This Developer&#8217;s Life and asks how Derick&#8217;s planning to handle pricing for unpredictable bandwidth. Derick says the model&#8217;s focused on unlimited uploads, but limited in how many releases a podcaster makes in a month. He&#8217;s relying on the law of average to pay for the popular podcasts. </li>
<li>(09:18) Rob talks about the huge streaming bills he was getting from Amazon for TekPub, which he almost eliminated by switching to Vimeo. He asks Derick if he&#8217;s looked into services like that. Derick says the backend is abstracted so he can move to other services if needed. </li>
</ul>
</li>
<li>What does SignalLeaf run on? (Part 1)
<ul>
<li>(11:10) Jon asks about what SignalLeaf runs on. Derick mentions MongoDb (running on MongoLab), Keen.io&#160; for analytics and CloudAMQP.com for RabbitMQ. </li>
</ul>
</li>
<li>What services does SignalLeaf provide?
<ul>
<li>(13:25) Kevin asks more about the services SignalLeaf offers. Derick mentions storage, bandwidth, storage and analytics. Something he offers beyond what many other similar services provide is &#8211; if you use his RSS feed and embedable audio player &#8211; he can tell you where your listeners are coming from. </li>
<li>(14:50) Derick mentions his blog post showing that about 50% of listeners don&#8217;t listen via RSS. Jon said he&#8217;s seen the same thing with the Herding Code site. </li>
</ul>
</li>
<li>Stats and advertising services
<ul>
<li>(17:25) Jon says advertisers are always asking for stats, and the kind of stats that advertisers want are hard to find. Derick mentions a service (blubrry) that inserts audio ads, but doesn&#8217;t think that sounds like a good idea. He mentions a business podcast running on a free service which had some off-color ads included as an example. </li>
</ul>
</li>
<li>Getting started in podcasting: What equipment and software do you need?
<ul>
<li>(20:40) Rob asks how a developer should get started with creating a podcast. Derick says just hit record and get started. Don&#8217;t buy equipment, just record something and upload it and get started. He talks about professional podcasters who put artificial barriers up by focusing on radio quality recording; he disagrees. </li>
<li>(23:56) Jon mentions Derick&#8217;s recent post on getting started. He agrees with Derick and says don&#8217;t start by buying equipment, get started and buy equipment as you need it. </li>
<li>(26:11) Jon says he doesn&#8217;t use his high end condenser microphone because it picks up lots of noise and sounds strange compared to guests and other hosts. Rob asks Derick what people getting started should buy to start with. Derick recommends starting with a $26 Logitech headset, then looking at a $50 Audio Technica ATR 2100, a $90 Blue Yeti, $220 Rode podcaster mic etc. </li>
<li>(30:15) Rob asks about recording software. Derick mentions Garageband, Skype Call Recorder and Audacity. Jon uses a free Skype call recorder from scribie.com, Audacity and Reaper.fm. Jon and Derick both love the noise removal feature in Audacity. </li>
<li>(33:26) Jon says another thing to figure out at the beginning is how much you want to edit. Jon tries to focus on removing ums and repeated words and things, but leave it sounding natural. Both Jon and Derick say that Rob&#8217;s the easiest guest to edit. </li>
<li>(35:40) Jon asks K. Scott what he uses for recording. He uses Audacity and Camtasia. Jon tells a story about how how he spliced in audio from a previous call when one of the hosts couldn&#8217;t make a show. It didn&#8217;t make sense, but no one seemed to notice. </li>
<li>(36:50) K. Scott asks what kind of formats don&#8217;t work on a podcast. Derick says that visual features and visual cues obviously don&#8217;t translate. </li>
</ul>
</li>
<li>What does SignalLeaf run on? (Part 2)
<ul>
<li>(38:21) Rob asks everyone to guess about the technology Derick&#8217;s running on. Turns out it&#8217;s all Node.js. Derick talks about how he got started with Node.js. Jon asks about what other libraries he&#8217;s using. Derick mentions Express, S3 restful API&#8217;s for upload and host, raygun.io for exceptions, keen.io for analytics, stripe.com for billing, MongoDb for data, Mandrill App for SMTP. Derick talks about how little it takes to build up a service now &#8211; he&#8217;s able to stitch a lot of services together to build what he needs. (45:30) K. Scott asks what text editor he uses. Derick&#8217;s a big VIM fan, having started with a Visual Studio VIM extension a while ago. </li>
<li>(47:20) Kevin asks about JavaScript libraries and testing. Derick talks up Backbone, Q and RSVP for promises, Underscore for utilities, and moment.js for date / time math. </li>
<li>(50:07) K. Scott asks whether Derick uses Grunt or Gulp. Derick says he&#8217;s thought about looking at Gulp, but Grunt works for him, although he doesn&#8217;t like . </li>
</ul>
</li>
<li>Discussion about managing small, application specific Node modules
<ul>
<li>(50:55) Derick says he doesn&#8217;t like the way NPM wants you to have a separate git repository for each module &#8211; he wants to have all of his modules in one repo. He works around that by using different repositories for development and deployment. Kevin says that his company uses softlinks to work around that, but Derick&#8217;s not happy with that. Rob thinks you can do file references, but Derick and Kevin disagrees. Jon asks if submodules would work. Rob and Derick discuss cases where it does and doesn&#8217;t make sense to use different repos for different small modules which are specific to a project. Rob talks about using grunt to run an npm install command, or npm init or start scripts (set in package.json), or npm init. </li>
</ul>
</li>
<li>Fin
<ul>
<li>(1:01:55) Kevin asks Derick if there&#8217;s anything else he wants to mention. Derick starts to mention WatchMeCode.com but the calls keep dropping and the show spontaneously combusts. </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Derick Bailey (<a href="http://derickbailey.com/">derickbailey.com</a>,&#160; former <a href="http://lostechies.com/derickbailey/">Los Techies blog</a>, <a href="https://twitter.com/derickbailey">@derickbailey</a>) </li>
<li><a href="http://signalleaf.com/">SignalLeaf</a> </li>
<li><a href="http://blog.signalleaf.com/">SignalLeaf blog</a>
<ul>
<li><a href="http://blog.signalleaf.com/blog/2014/02/06/4-of-the-worst-things-to-do-when-starting-a-podcast/">4 of the Worst Things to Do When Starting a Podcast</a> </li>
<li><a href="http://blog.signalleaf.com/equipment/">Recommended equipment</a> </li>
</ul>
</li>
<li><a href="http://watchmecode.net/">WatchMeCode.net</a> </li>
<li><a href="http://lostechies.com/derickbailey/2014/02/27/using-a-single-git-repository-for-multiple-heroku-projects/">Using A Single Git Repository for Multiple Heroku Projects</a> </li>
<li>Equipment (headsets / microphones)</li>
<ul>
<li><a href="http://www.amazon.com/gp/product/B000UXZQ42/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B000UXZQ42&amp;linkCode=as2&amp;tag=jongall-20&amp;linkId=FSUIP6N4BWZYFAWR">Logitech ClearChat Comfort/USB Headset H390 (Black)</a><img style="border-top-style: none !important; border-bottom-style: none !important; border-right-style: none !important; margin: 0px; border-left-style: none !important" border="0" alt="" src="http://ir-na.amazon-adsystem.com/e/ir?t=jongall-20&amp;l=as2&amp;o=1&amp;a=B000UXZQ42" width="1" height="1" /></li>
<li><a href="http://www.amazon.com/gp/product/B00906E03I/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00906E03I&amp;linkCode=as2&amp;tag=jongall-20&amp;linkId=M6AZCQWQEKW54UOS">Microsoft LifeChat LX-3000 Headset (JUG-00013)</a><img style="border-top-style: none !important; border-bottom-style: none !important; border-right-style: none !important; margin: 0px; border-left-style: none !important" border="0" alt="" src="http://ir-na.amazon-adsystem.com/e/ir?t=jongall-20&amp;l=as2&amp;o=1&amp;a=B00906E03I" width="1" height="1" /> </li>
<li><a href="http://www.amazon.com/gp/product/B00465UNYI/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00465UNYI&amp;linkCode=as2&amp;tag=jongall-20&amp;linkId=A2HTA2EUSJVI75V3">Microsoft LifeChat LX-6000 for Business</a><img style="border-top-style: none !important; border-bottom-style: none !important; border-right-style: none !important; margin: 0px; border-left-style: none !important" border="0" alt="" src="http://ir-na.amazon-adsystem.com/e/ir?t=jongall-20&amp;l=as2&amp;o=1&amp;a=B00465UNYI" width="1" height="1" /> </li>
<li><a href="http://www.amazon.com/gp/product/B004QJOZS4/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B004QJOZS4&amp;linkCode=as2&amp;tag=jongall-20&amp;linkId=KWZIEKLYX6R3Q67X">Audio-Technica ATR2100-USB Cardioid Dynamic USB/XLR Microphone</a><img style="border-top-style: none !important; border-bottom-style: none !important; border-right-style: none !important; margin: 0px; border-left-style: none !important" border="0" alt="" src="http://ir-na.amazon-adsystem.com/e/ir?t=jongall-20&amp;l=as2&amp;o=1&amp;a=B004QJOZS4" width="1" height="1" /> </li>
<li><a href="http://www.amazon.com/gp/product/B004L9KLT6/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B004L9KLT6&amp;linkCode=as2&amp;tag=jongall-20&amp;linkId=EPTBG76MFSBVC4UQ">Blue Microphones Yeti Pro USB Condenser Microphone, Multipattern</a><img style="border-top-style: none !important; border-bottom-style: none !important; border-right-style: none !important; margin: 0px; border-left-style: none !important" border="0" alt="" src="http://ir-na.amazon-adsystem.com/e/ir?t=jongall-20&amp;l=as2&amp;o=1&amp;a=B004L9KLT6" width="1" height="1" /> </li>
</ul>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/tm4r9Jcs5ZA" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-191-derick-bailey-on-signalleaf-and-getting-started-podcasting/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/mFxoOP_M8as/HerdingCode-0191-Derick-Bailey.mp3" fileSize="15167949" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys (joined by guest host Rob Conery) talk to Derick Bailey about his new podcast audio hosting venture, SignalLeaf. Download / Listen: Herding Code 191: Derick Bailey on SignalLeaf and Getting Started Podcasting Show Notes: What is SignalLeaf? (00:1</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys (joined by guest host Rob Conery) talk to Derick Bailey about his new podcast audio hosting venture, SignalLeaf. Download / Listen: Herding Code 191: Derick Bailey on SignalLeaf and Getting Started Podcasting Show Notes: What is SignalLeaf? (00:18) Kevin introduces the show and warns listeners that Rob Conery is present. (01:00) Kevin asks [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-191-derick-bailey-on-signalleaf-and-getting-started-podcasting/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/mFxoOP_M8as/HerdingCode-0191-Derick-Bailey.mp3" length="15167949" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0191-Derick-Bailey.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 190: Rob Ashton on NodeJS vs C#, Clojure and Cooking Constraints</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/qIt9Dq0Xs6k/</link>
		<comments>http://herdingcode.com/herding-code-190-rob-ashton-on-nodejs-vs-c-clojure-and-cooking-constraints/#comments</comments>
		<pubDate>Wed, 30 Apr 2014 23:04:27 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=650</guid>
		<description><![CDATA[In our final interview from NDC London, Jon and K. Scott talk to Rob Ashton his cage match with Jeremy Miller on NodeJS vs. C#, some functional languages he&#8217;s been learning, and cooking just enough curry. Download / Listen: Herding Code 190: Rob Ashton on NodeJS vs C#, Clojure and Cooking Constraints Show Notes: The [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>In our final interview from NDC London, Jon and K. Scott talk to Rob Ashton his cage match with Jeremy Miller on NodeJS vs. C#, some functional languages he&#8217;s been learning, and cooking just enough curry.</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0190-Rob-Ashton.mp3">Herding Code 190: Rob Ashton on NodeJS vs C#, Clojure and Cooking Constraints</a></p>
<audio class="wp-audio-shortcode" id="audio-650-9" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0190-Rob-Ashton.mp3?_=9" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0190-Rob-Ashton.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0190-Rob-Ashton.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>The NDC Cage Match: Testing! NodeJS vs. C#</li>
<ul>
<li>(00:18) K Scott asks Rob about the cage match he just had with Jeremy Miller comparing testing in NodeJS and C#. Rob&#8217;s got a lot of good things to say about what Jeremy showed, but is pretty sure he won. </li>
<li>(02:40) K Scott asks Rob to explain why he doesn&#8217;t like monkey patching. Rob mentions how QuickCheck helps, then talks about how code structure obviates the need for monkey patching. </li>
<li>(05:16) Jon asks how he bootstraps his application to inject dependencies and explains how he avoids deep dependency chains. </li>
</ul>
<li>Clojure?</li>
<ul>
<li>(06:40) K Scott asks what led him to Clojure. </li>
<li>(07:39) Jon asks Rob what he likes about Clojure. Rob says a better question is what he likes about functional programming languagues, then explains. </li>
<li>(09:25) K Scott asks about some of the learning project Rob&#8217;s been working with to learn Clojure. Rob talks about some of the games he started with, then the RavenDb reimplementation he&#8217;s been building with Clojure called Craven. </li>
</ul>
<li>What do you do in your free time?</li>
<ul>
<li>(12:56) K Scott asks Rob what he does in his free time. Rob starts by talking about Clojure, then talks about some of the complicated cooking things he&#8217;s been working on. He talks about some of the similarities between cooking and coding, and some of the constraint he deals with in ambitions cooking projects.</li>
</ul>
<li>The future</li>
<ul>
<li>(14:58) K Scott asks Rob about some of his plans for early 2014.&#160; Erlang away! </li>
</ul>
</ul>
<p>Show Links:</p>
<ul>
<li>Rob Ashton (<a href="http://codeofrob.com/">blog</a>, <a href="https://twitter.com/robashton">@robashton</a>) </li>
<li><a href="http://vimeo.com/84677180">NDC Cage Match between Rob Ashton and Jeremy Miller: Testing! NodeJS vs. C#</a> </li>
<li><a href="http://en.wikipedia.org/wiki/QuickCheck">QuickCheck</a> </li>
<li><a href="http://clojure.org/">Clojure</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/qIt9Dq0Xs6k" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-190-rob-ashton-on-nodejs-vs-c-clojure-and-cooking-constraints/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/Mk-ckO5CXGI/HerdingCode-0190-Rob-Ashton.mp3" fileSize="12606526" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In our final interview from NDC London, Jon and K. Scott talk to Rob Ashton his cage match with Jeremy Miller on NodeJS vs. C#, some functional languages he&amp;#8217;s been learning, and cooking just enough curry. Download / Listen: Herding Code 190: Rob Ash</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In our final interview from NDC London, Jon and K. Scott talk to Rob Ashton his cage match with Jeremy Miller on NodeJS vs. C#, some functional languages he&amp;#8217;s been learning, and cooking just enough curry. Download / Listen: Herding Code 190: Rob Ashton on NodeJS vs C#, Clojure and Cooking Constraints Show Notes: The [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-190-rob-ashton-on-nodejs-vs-c-clojure-and-cooking-constraints/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/Mk-ckO5CXGI/HerdingCode-0190-Rob-Ashton.mp3" length="12606526" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0190-Rob-Ashton.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 189: Gary Bernhardt on The Birth and Death of JavaScript</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/D4TUVvXMUeo/</link>
		<comments>http://herdingcode.com/herding-code-189-gary-bernhardt-on-the-birth-and-death-of-javascript/#comments</comments>
		<pubDate>Fri, 18 Apr 2014 00:41:34 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=647</guid>
		<description><![CDATA[At NDC London, Jon and K Scott talk to Gary Bernhardt about his talk, The Birth and Death of JavaScript. Download / Listen: Herding Code 189: Gary Bernhardt on The Birth and Death of JavaScript Show Notes: (00:15) The talk occurs in the year 2035. JavaScript is now pronounced differently, and there has been another [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC London, Jon and K Scott talk to Gary Bernhardt about his talk, The Birth and Death of JavaScript. </p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0189-Gary-Bernhardt.mp3">Herding Code 189: Gary Bernhardt on The Birth and Death of JavaScript</a></p>
<audio class="wp-audio-shortcode" id="audio-647-10" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0189-Gary-Bernhardt.mp3?_=10" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0189-Gary-Bernhardt.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0189-Gary-Bernhardt.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>(00:15) The talk occurs in the year 2035. JavaScript is now pronounced differently, and there has been another world war. </li>
<li>(01:20) Jon ran over to the talk when he heard (via Twitter) that Gary was (or will be, it&#8217;s all so confusing) mentioning Singularity. </li>
<li>(02:20) Jon asks about Gary&#8217;s references to the performance improvements gained by turning off hardware protection. Gary and Jon discuss how Singularity and the (yet to be developed) Asm language offer high performance due to this approach. </li>
<li>(04:10) Jon asks why JavaScript has died, since Asm is universal. Gary mentions some of the problems &#8211; many historical &#8211; with JavaScript. And Gary should know, he&#8217;s famous for the &quot;wat&quot; talk showing several JavaScript insanities. </li>
<li>(05:37) Jon asks for some reasons why JavaScript had to die. Gary explains how it&#8217;s really just running on inertia now, and that it&#8217;d be preferable to use a better designed language like Clojure. </li>
<li>(06:30) Jon asks what we&#8217;re writing our code in, now that it&#8217;s compiling to Asm. Gary doesn&#8217;t specify that &#8211; it&#8217;s not really necessary to pick one, and he doesn&#8217;t need to alienate anyone unnecessarily. </li>
<li>(07:45) Jon asks if Asm is a binary format. Gary clarifies that it&#8217;s the JavaScript subset that was proposed in 2012. </li>
<li>(08:54) Jon asks if Asm is perfect, or just good enough. Gary talks about how both Asm and the HTML DOM (which also has become universal in 2035) are full of flaws, but they&#8217;re better than fragmentation. Jon and Gary talk abouthow </li>
<li>(10:45) K Scott says this all sounds plausible, all that&#8217;s needed is time. So, why 2035? Gary talks about his reasoning&#8230; it could happen faster. He talks about some core services moving into operating system kernels, and Jon and K Scott agree. </li>
<li>(12:55) Jon applauds Gary&#8217;s 25-30 minute talk length. </li>
<li>(13:15) Jon mentions some of the interesting audience questions at the end of the talk. Gary talks about some of the most interesting. All of them were pretty easy except for the question of parallel execution. </li>
<li>(15:20) There&#8217;s a discussion about the limitations of x86 architecture and parallelism. </li>
<li>(16:10) Jon asks about some of the other things Gary&#8217;s up to &#8211; there are the Destroy All Software screencasts and a consumer product Gary&#8217;s working on but isn&#8217;t ready to announce yet. </li>
<li>(16:40) K Scott asks Gary about relaxation and recreation. Gary says that he&#8217;d become really preoccupied with things that were bad in software, and it was stressing him out. He&#8217;s made three changes: intentional social interactions, crossfit and playing guitar. All three have helped him be less angry about the state of software&#8230; which is all hacks on x86, when we get down to it. </li>
</ul>
<p>Show Links:</p>
<ul>
<li>Gary Bernhardt&#160; on Twitter &#8211; <a href="https://twitter.com/garybernhardt">@garybernhardt</a> </li>
<li>Video of <a href="https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript">The Birth And Death Of JavaScript</a> talk at PyCon 2014</li>
<li><a href="https://www.destroyallsoftware.com/talks/wat">WAT</a> (lightning talk from CodeMash 2012) </li>
<li><a href="https://www.destroyallsoftware.com/screencasts">Destroy All Software screencasts</a> </li>
<li><a href="http://asmjs.org/">asm.js</a> </li>
<li><a href="http://research.microsoft.com/en-us/projects/singularity/">Microsoft Singularity project</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/D4TUVvXMUeo" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-189-gary-bernhardt-on-the-birth-and-death-of-javascript/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/niAHqTEl_2Q/HerdingCode-0189-Gary-Bernhardt.mp3" fileSize="13196818" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC London, Jon and K Scott talk to Gary Bernhardt about his talk, The Birth and Death of JavaScript. Download / Listen: Herding Code 189: Gary Bernhardt on The Birth and Death of JavaScript Show Notes: (00:15) The talk occurs in the year 2035. JavaScr</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC London, Jon and K Scott talk to Gary Bernhardt about his talk, The Birth and Death of JavaScript. Download / Listen: Herding Code 189: Gary Bernhardt on The Birth and Death of JavaScript Show Notes: (00:15) The talk occurs in the year 2035. JavaScript is now pronounced differently, and there has been another [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-189-gary-bernhardt-on-the-birth-and-death-of-javascript/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/niAHqTEl_2Q/HerdingCode-0189-Gary-Bernhardt.mp3" length="13196818" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0189-Gary-Bernhardt.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 188: Pete Smith on Superscribe</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/VU7YzAoRJUg/</link>
		<comments>http://herdingcode.com/herding-code-188-pete-smith-on-superscribe/#comments</comments>
		<pubDate>Fri, 07 Mar 2014 00:10:20 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=644</guid>
		<description><![CDATA[At NDC London, Jon talks to Pete Smith about Superscribe, a library which brings graph based routing to ASP.NET, Web API and OWIN. Download / Listen: Herding Code 188: Pete Smith on Superscribe Note: There&#8217;s a little bit of background noise due to the conference recording. Show Notes: Intro to Superscribe (00:20) Jon asks Pete [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC London, Jon talks to Pete Smith about Superscribe, a library which brings graph based routing to ASP.NET, Web API and OWIN. </p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0188-Pete-Smith.mp3">Herding Code 188: Pete Smith on Superscribe</a></p>
<audio class="wp-audio-shortcode" id="audio-644-11" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0188-Pete-Smith.mp3?_=11" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0188-Pete-Smith.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0188-Pete-Smith.mp3</a></audio>
<p><em>Note: There&#8217;s a little bit of background noise due to the conference recording.</em></p>
<p>Show Notes:</p>
<ul>
<li>Intro to Superscribe</li>
<ul>
<li>(00:20) Jon asks Pete to explain what Superscribe&#8217;s graph-based routing means. Pete explains how traditional routing needs to check each route for a match, one at a time. Graph-based routing stores using a structure, so there are some performance gains due to only matching routes with a matching structure rather than using string matching. </li>
<li>(02:17) Pete explains that graph based routing is language agnostic, so there&#8217;s also a JavaScript implementation. </li>
</ul>
<li>Extensibility due to strongly typed route nodes</li>
<ul>
<li>(02:37) Each node in the graph is a strongly typed entity, so you can use an activation function for each node in the graph to determine if it&#8217;s a match rather than just using a simple regex match. You can write custom activation functions for any node. For parameter matching, Superscribe uses TryParse rather than regex matches. </li>
<li>(04:22) There are three guiding principles behind Superscribe: composability, efficiency and extensibility. </li>
</ul>
<li>The OWIN connection</li>
<ul>
<li>(05:22) Jon asks where Superscribe can be used. Pete says it&#8217;s currently usable in Web API and OWIN, with NancyFx and possibly MVC on the way. </li>
<li>(06:02) In addition to activation functions, you can also define an action function which says what should happen when a node is matched. This allows running different OWIN middleware based on route matches. This means you can hook up authentication middleware using an action function which will only operate on a specific node. </li>
</ul>
<li>Graphs vs. Trees</li>
<ul>
<li>(08:16) You can hook up optional nodes, which would allow things like an optional /debug/ route prefix which would hook up tracing middleware. Pete says this is something that wouldn&#8217;t be possible with tree-based routing (available in NancyFx). </li>
<li>(09:00) Jon asks what the difference is between tree-based routing and graph-based routing. Both are connected nodes, and trees are a type of graph in which the node connections branch out and ever reconnect, whereas in a graph any node may connect to any other node. </li>
</ul>
<li>API options: Different ways to define route graphs</li>
<ul>
<li>(09:53) Jon asks how developers will define nodes in Superscribe. Pete talks about the difference between economy and expressivity: economic design has fewer options but is easy to learn, while expressive design offers many options but a steeper learning curve. Superscribe is currently more expressive, using a domain specific language using operator overloads. It overloads the / symbol to add segments and the | operator to allow defining multiple routes (or the entire graph) in a single line. </li>
<li>(12:28) Jon says that you can always add an economic API layer over an expressive one. Pete agrees and says that since everything&#8217;s strongly typed underneath, you can configure it explicitly or fluently&#160; as well (if you don&#8217;t like the DSL). </li>
<li>(13:14) Jon asks about how to hook in action functions or activator functions. Pete says they&#8217;re currently not available in the DSL, so you&#8217;d need to build those notes out by hand at this point. </li>
</ul>
<li>Miscellaneous questions and pretend ending</li>
<ul>
<li>(15:08) Jon asks about using routes for localization. Pete talks about some options for doing that. </li>
<li>(16:28) Jon asks what&#8217;s next on the list. Pete lists some features: syntax improvements and OWIN middleware ideas. </li>
<li>(19:12) Jon asks how people can learn more and keep up, Pete talks about Superscribe.org. </li>
<li>(20:12) Jon asks about the use case for Superscript in JavaScript. Pete talks about how activation functions are really useful in single page applications and how he&#8217;s using this in a production application. He&#8217;s working on packaging this up as Superscribe.js. </li>
</ul>
<li>Update on the 0.4 release (follow-up phone call)</li>
<ul>
<li>(22:11) Jon asks what&#8217;s new in the 0.4 release. Pete starts by describing some improvements to the routing syntax. </li>
<li>(23:02) You can now combine Web API replacement routing, traditional routing, Attribute Routing and Superscribe in the same application, so you can pick and choose. </li>
<li>(23:24) You can wire it up with an IOC container, so you can compose different components based on routes. You can also use route information in OWIN middleware. </li>
<li>(23:56) Everything about the new release is up on the Superscribe.org site. </li>
</ul>
</ul>
<p>Show Links:</p>
<ul>
<li>Pete Smith (<a href="http://roysvork.wordpress.com/">blog</a>, <a href="https://twitter.com/roysvork">@roysvork</a>) </li>
<li><a href="http://superscribe.org">Superscribe</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/VU7YzAoRJUg" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-188-pete-smith-on-superscribe/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/ttjBHxTF3ag/HerdingCode-0188-Pete-Smith.mp3" fileSize="15430123" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC London, Jon talks to Pete Smith about Superscribe, a library which brings graph based routing to ASP.NET, Web API and OWIN. Download / Listen: Herding Code 188: Pete Smith on Superscribe Note: There&amp;#8217;s a little bit of background noise due to t</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC London, Jon talks to Pete Smith about Superscribe, a library which brings graph based routing to ASP.NET, Web API and OWIN. Download / Listen: Herding Code 188: Pete Smith on Superscribe Note: There&amp;#8217;s a little bit of background noise due to the conference recording. Show Notes: Intro to Superscribe (00:20) Jon asks Pete [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-188-pete-smith-on-superscribe/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/ttjBHxTF3ag/HerdingCode-0188-Pete-Smith.mp3" length="15430123" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0188-Pete-Smith.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 187: Brock Allen on ASP.NET Security and Identity</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/fMfgD8p0Y6Q/</link>
		<comments>http://herdingcode.com/herding-code-187-brock-allen-on-asp-net-security-and-identity/#comments</comments>
		<pubDate>Wed, 12 Feb 2014 22:27:25 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=642</guid>
		<description><![CDATA[At NDC London, Jon and K. Scott talk to Paul Betts about several of his recent open source libraries designed to simplify cross platform development on C#. Download / Listen: Herding Code 187: Brock Allen on ASP.NET Security and Identity Show Notes: Intro (00:18) Brock gave two presentations on security at NDC, as well as [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC London, Jon and K. Scott talk to Paul Betts about several of his recent open source libraries designed to simplify cross platform development on C#.</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0187-Brock-Allen.mp3">Herding Code 187: Brock Allen on ASP.NET Security and Identity</a></p>
<audio class="wp-audio-shortcode" id="audio-642-12" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0187-Brock-Allen.mp3?_=12" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0187-Brock-Allen.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0187-Brock-Allen.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Intro
<ul>
<li>(00:18) Brock gave two presentations on security at NDC, as well as a two day pre-conference workshop with Dominick Baier (also on security). </li>
</ul>
</li>
<li>Brock&#8217;s contribution of CORS support to ASP.NET Web API
<ul>
<li>(00:35) Jon asks Brock about the CORS support he recently contributed to ASP.NET Web API. Brock tells the history of how he built a CORS implementation at Thinktecture and how he went about contributing it. </li>
<li>(01:21) Jon asks Brock about what was involved in his CORS implementation. Brock describes the limitations browsers place on cross-origin requests and how CORS solves that. It&#8217;s defined in the HTML5 specs and is supported by all modern browsers. </li>
<li>(02:12) Jon asks what&#8217;s required on the server for CORS to work. Brock explains how servers respond to browsers to tell them they support CORS and which other servers they want to allow communications with. </li>
<li>(02:45) The most common form of browser communications for CORS is via an OPTIONS request from the browser, to which the server responds using predefined headers. </li>
<li>(03:14) K. Scott asks about the process of getting his CORS implementation added to the ASP.NET Web API codebase. Brock explains the process, including his big pull request and the month of work he and Yao put in to getting the code &quot;Microsoftified.&quot; Brock&#8217;s implementation was pretty broad, the shipping version was targeted just at Web API. </li>
</ul>
</li>
<li>Thinktecture Identity Model
<ul>
<li>(04:59) Jon asks if there&#8217;s any reason to use the Thinktecture Identity Model version now. Brock explains the other areas that Identity Model supports, and that many of the features of Thinktecture Identity Model have been removed as ASP.NET Web API has added a lot of these features to the core. </li>
</ul>
</li>
<li>ASP.NET Identity and Membership Reboot
<ul>
<li>(06:09) K. Scott asks how the identity features in Thinktecture Identity Model compare to the new features shipped in the new ASP.NET Identity system. Brock describes the problems that the ASP.NET Identity system was designed to solve. </li>
<li>(07:02) Brock describes the membership system he wrote as an alternative to the ASP.NET provider model system, called Membership Reboot. His Membership Reboot system includes things like password resets and e-mail account verification which are not in the initial version of ASP.NET Identity, but he thinks that the new system is well architected to add these in, since it&#8217;s just a NuGet package. </li>
<li>(07:42) Jon asks Brock about the other features Membership Reboot covers. Brock says that was the subject of one of his talks &#8211; how he implemented features like password reset, e-mail verification and two factor authentication without opening up attack vectors. </li>
</ul>
</li>
<li>ASP.NET Security
<ul>
<li>(08:27) K. Scott asks about the other talks Brock did at NDC London. His other talk was on ASP.NET Core Security &#8211; he focused on teasing apart the membership and forms authentication parts so they&#8217;re understood as separate components. </li>
<li>(09:20) Jon asks Brock how he got interested in security. Brock talks about his background in programming, and how he thinks it&#8217;s interesting to see how the different parts work together. </li>
<li>(09:48) Jon talks about cases he sees where developers decide they want to write their own security implementations for speed or other reasons. Brock says that was one of the key points of his talk: you don&#8217;t want to implement those things yourself. </li>
<li>(10:19) Jon asks about common security issues that developers commonly forget to consider. Brock lists several: proper implementation of SSL, password management, etc. </li>
</ul>
</li>
<li>What&#8217;s Next For Brock?
<ul>
<li>(11:09) Jon asks what&#8217;s next for Brock. He&#8217;ll be busy: he&#8217;s got a lot of course rework for recent updates, Identity Server v3 (with OpenID Connect). </li>
<li>(11:46) Jon asks how OpenID Connect affects him as a developer. </li>
<li>(13:15) K. Scott asks what Brock does to relax. Brock does Tai Chi and Kung Fu. </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Paul Betts (<a href="http://brockallen.com/">blog</a>, <a href="https://twitter.com/BrockLAllen">@BrockLAllen</a>, <a href="https://github.com/brockallen">github</a>) </li>
<li><a href="https://github.com/thinktecture/Thinktecture.IdentityModel">Thinktecture Identity Model</a> </li>
<li><a href="http://brockallen.com/category/membershipreboot/">Membership Reboot</a></li>
<li><a href="http://brockallen.com/2014/02/11/introducing-identityreboot/">Identity Reboot</a>&#160;</li>
<li><a href="http://www.asp.net/identity">ASP.NET Identity</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/fMfgD8p0Y6Q" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-187-brock-allen-on-asp-net-security-and-identity/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/PvLHEmTarI0/HerdingCode-0187-Brock-Allen.mp3" fileSize="9369323" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC London, Jon and K. Scott talk to Paul Betts about several of his recent open source libraries designed to simplify cross platform development on C#. Download / Listen: Herding Code 187: Brock Allen on ASP.NET Security and Identity Show Notes: Intro</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC London, Jon and K. Scott talk to Paul Betts about several of his recent open source libraries designed to simplify cross platform development on C#. Download / Listen: Herding Code 187: Brock Allen on ASP.NET Security and Identity Show Notes: Intro (00:18) Brock gave two presentations on security at NDC, as well as [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-187-brock-allen-on-asp-net-security-and-identity/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/PvLHEmTarI0/HerdingCode-0187-Brock-Allen.mp3" length="9369323" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0187-Brock-Allen.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 186: Paul Betts on three cross-platform libraries: splat, ModernHttpClient and punchclock</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/HyyjiBAxKdI/</link>
		<comments>http://herdingcode.com/herding-code-186-paul-betts-on-three-cross-platform-libraries-splat-modernhttpclient-and-punchclock/#comments</comments>
		<pubDate>Thu, 06 Feb 2014 21:17:12 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=639</guid>
		<description><![CDATA[At NDC London, Jon and K. Scott talk to Paul Betts about several of his recent open source libraries designed to simplify cross platform development on C#. Download / Listen: Herding Code 186: Paul Betts on three cross-platform libraries: splat, ModernHttpClient and punchclock Show Notes: Intro (00:18) Jon welcomes Paul back &#8211; he&#8217;s been on [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC London, Jon and K. Scott talk to Paul Betts about several of his recent open source libraries designed to simplify cross platform development on C#.</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0186-Paul-Betts.mp3">Herding Code 186: Paul Betts on three cross-platform libraries: splat, ModernHttpClient and punchclock</a></p>
<audio class="wp-audio-shortcode" id="audio-639-13" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0186-Paul-Betts.mp3?_=13" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0186-Paul-Betts.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0186-Paul-Betts.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Intro
<ul>
<li>(00:18) Jon welcomes Paul back &#8211; he&#8217;s been on a few times before, talking about GitHub for Windows and Reactive UI. </li>
<li>(00:28) Paul has a dream: he&#8217;d like to write applications in C# and have them run everywhere: iOS, Android, Windows Phone maybe even WinRT. He&#8217;s not interested in sharing everything (views or designer code), but there&#8217;s plenty of other code that developers shouldn&#8217;t need to rewrite for every platform. </li>
<li>(01:16) Jon asks if Xamarin doesn&#8217;t help with this. Paul says that Xamarin&#8217;s intention is to give you direct access to the native platform, which is good when developing for a specific platform, but not when you&#8217;re working on cross-platform applications. </li>
<li>01:32 Paul&#8217;s been on a crusade, writing a lot of small, cross-platform libraries. </li>
</ul>
</li>
<li>splat
<ul>
<li>(01:48) splat is a library that lets you share certain things in cross-platform viewmodels, the biggest one being images. It allows for the simple load-and-display scenario. Each platform hast its own image types; splat gives you a common abstract image type that you can then cast to a native image. This allows you to write cross-platform viewmodels and just have native views. splat also gives you System.Drawing on platforms that don&#8217;t have it, e.g. WinRT by providing common types for primitives like colors and rectangles. </li>
<li>(04:08) Jon asks if portable class libraries will help with this. Paul explains the PCL operations for splat. </li>
<li>(04:45) Jon asks about support for high-DPI / Retina images. Paul talks about how the different platforms handle high DPI images. </li>
</ul>
</li>
<li>ModernHttpClient
<ul>
<li>(05:44) Paul says that HttpClient is implemented on Xamarin using HttpWebRequest. This has some problems: it doesn&#8217;t use 3G on iOS, and it&#8217;s a blocking call. That means if you make several web requests, you end up with a bunch of waiting threads and the app slows down. </li>
<li>(06:45) There are better APIs available on each platform, so Paul&#8217;s taken the most popular HTTP libraries on each platform and made them HttpClient compatible. HttpClient allows you to specify an HttpMessageHandler, so in your portable library you can just drop in the handlers provided by ModernHttpClient . </li>
<li>(08:33) In the latest version, Paul&#8217;s done work to make sure you can cancel requests. This lets you cancel a request based on headers (e.g. status codes or ETags) which can make a big difference on mobile network usage. </li>
<li>(09:23) Jon asks how it works in the Windows platforms. Paul says that on WinRT it&#8217;s already built in, and on Windows Phone there&#8217;s no way to do anything better than HttpWebRequest. </li>
<li>Jon asks a bit more about how you use it. Paul explains how platform-specific factory methods can provide the different handlers. </li>
</ul>
</li>
<li>punchclock</li>
<ul>
<li>(11:00) punchclock lets you make multiple web requests; it queues them up and makes the requests for you so there are a maximum of four web requests at a time. It&#8217;s based on an Android library called Volley. </li>
<li>(12:20) punchclock is a priority based scheduler. You can then make things like analytics low priority and user initiated requests high priority. </li>
<li>(13:12) It&#8217;s not just specific to network requests, you can use it for anything that&#8217;s awaitable. </li>
</ul>
<li>What&#8217;s Paul using these on?
<ul>
<li>(13:35) Jon asks Paul what kind of mobile applications he&#8217;s building that are pushing him to build these libraries. Paul says he&#8217;s been working on some internal applications at GitHub. One example is a support application called Halp. It lets customer support people use @mention style messages to developers, allowing developers to respond quickly from mobile devices. </li>
</ul>
</li>
<li>Reactive UI documentation
<ul>
<li>(15:10) Jon asks Paul what he&#8217;s been doing when he&#8217;s not writing cool code. Paul says he&#8217;s been working on documentation for Reactive UI by writing one big article per day. </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Paul Betts (<a href="http://log.paulbetts.org/">blog</a>, <a href="http://twitter.com/paulcbetts">@paulcbetts</a>, <a href="https://github.com/paulcbetts">github</a>) </li>
<li><a href="https://github.com/paulcbetts/splat">splat</a> </li>
<li><a href="https://github.com/paulcbetts/ModernHttpClient">ModernHttpClient</a> </li>
<li><a href="https://github.com/paulcbetts/punchclock">punchclock</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/HyyjiBAxKdI" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-186-paul-betts-on-three-cross-platform-libraries-splat-modernhttpclient-and-punchclock/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/PILjWMuMX8s/HerdingCode-0186-Paul-Betts.mp3" fileSize="11550528" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC London, Jon and K. Scott talk to Paul Betts about several of his recent open source libraries designed to simplify cross platform development on C#. Download / Listen: Herding Code 186: Paul Betts on three cross-platform libraries: splat, ModernHtt</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC London, Jon and K. Scott talk to Paul Betts about several of his recent open source libraries designed to simplify cross platform development on C#. Download / Listen: Herding Code 186: Paul Betts on three cross-platform libraries: splat, ModernHttpClient and punchclock Show Notes: Intro (00:18) Jon welcomes Paul back &amp;#8211; he&amp;#8217;s been on [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-186-paul-betts-on-three-cross-platform-libraries-splat-modernhttpclient-and-punchclock/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/PILjWMuMX8s/HerdingCode-0186-Paul-Betts.mp3" length="11550528" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0186-Paul-Betts.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 185: Glenn Block on Splunk</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/xAfhfCwnUaY/</link>
		<comments>http://herdingcode.com/herding-code-185-glenn-block-on-splunk/#comments</comments>
		<pubDate>Thu, 30 Jan 2014 22:03:06 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=637</guid>
		<description><![CDATA[At NDC Jon and K. Scott talk to Glenn Block about Splunk. Download / Listen: Herding Code 185: Glenn Block on Splunk Show Notes: Intro (00:18) Glenn got a new job at Splunk. What is Splunk? (00:40) Jon asks Glenn what Splunk does. Splunk has a product that gathers operational intelligence. It&#8217;s got a data [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC Jon and K. Scott talk to Glenn Block about Splunk.</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0185-Glenn-Block.mp3">Herding Code 185: Glenn Block on Splunk</a></p>
<audio class="wp-audio-shortcode" id="audio-637-14" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0185-Glenn-Block.mp3?_=14" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0185-Glenn-Block.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0185-Glenn-Block.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Intro</li>
<ul>
<li>(00:18) Glenn got a new job at Splunk.</li>
</ul>
<li>What is Splunk?</li>
<ul>
<li>(00:40) Jon asks Glenn what Splunk does. Splunk has a product that gathers operational intelligence. It&#8217;s got a data analytics platform which understands a lot of log formats. It can handle streaming logs and has a bunch of API&#8217;s. It can index in realtime, handles unstructured data, and has some advanced pattern matching features.</li>
<li>(02:12) Glenn talks about some common uses. GitHub and Target both use Splunk. It&#8217;s especially liked by IT Admins who can query across multiple servers by timeslice in realtime. There&#8217;s a customizable dashboard to surface the information.</li>
<li>(03:24) Glenn says that since Splunk has a powerful API, you can push data into it. You can push data in using HTTP or TCP.</li>
<li>(04:01) You can teach Splunk to fetch data from a source using their app platform. Glenn talks about an Azure app he built for Windows Azure Web Sites diagnostics.</li>
<li>(05:39) Splunk is available in the cloud, but it&#8217;s often run on premises. It&#8217;s cross-platform. It doesn&#8217;t store the data, it just indexes it.</li>
</ul>
<li>Pricing, free versions, cloud hosted versions</li>
<ul>
<li>(06:44) Glenn says the pricing is based on data throughput. They have a free license that gives you 500MB/day, a developer license that gives you 10GB/day for a limited time, a free cloud product called Splunk Storm which gives you 20GB/application for a 30 days, and a new enterprise product called Splunk Cloud running in AWS. The enterprise cloud product is especially useful for AWS hosted apps.</li>
<li>(08:20) Jon asks if there&#8217;s a planned cloud hosted offering for Windows Azure. Glenn says he&#8217;s pushing for it, but in the meantime it&#8217;s pretty easy to install it yourself.</li>
<li>(08:58) K. Scott asks about what he&#8217;d see if he used Glenn&#8217;s Azure app on a Windows Azure Web Site. Glenn lists some of the data and sources.</li>
</ul>
<li>Developing Splunk apps and language support</li>
<ul>
<li>(10:03) K. Scott asks about the process of writing a Splunk app. Glenn talks about all the language specific SDK&#8217;s they support and describes the process.</li>
<li>(11:20) K. Scott asks how they support so many languages in Splunk. Glenn says it&#8217;s pretty Unixy in that it works with streams, so all the language specific SDK&#8217;s work with that.</li>
</ul>
<li>Using Splunk for evented data, not just logs</li>
<ul>
<li>(12:25) Jon asks about some&#160; real world examples of things people are monitoring. Glenn talks about a recent DSL-like feature called data models, which allows business analysts to search through the data, and graphically pivot on it. One of the places people use that is for monitoring the entire dev lifecycle. Security auditing is a huge use case. 50% of the Fortune 100 uses Splunk. Glenn gives an example of how one of his co-workers wrote a Node app using Firebase&#8217;s bus feed to show a realtime map with bus location.</li>
<li>(16:00) Jon says this seems to blur the lines between logs and event sourcing. Glenn says it&#8217;s not just a log platform, and works really well with evented data.</li>
</ul>
<li>Technology stack</li>
<ul>
<li>(16:44) Jon asks what technologies it runs on, and if it&#8217;s using Hadoop. Glenn says Hadoop&#8217;s great, but not for realtime. They do have a product called Hunk which can access Hadoop HDFS information, though. It&#8217;s mostly C++ and Python (Django). They&#8217;ve recently rolled out an app frameowrk which makes it easy to customize Splunk using Django. There&#8217;s no database, since Splunk really just maintains indexes to data from other sources.</li>
</ul>
<li>Glenn&#8217;s new book: Designing Evolvable Web APIs with ASP.NET</li>
<ul>
<li>(19:25) Jon asks Glenn what he does in his free time. Glenn talks about the book he (and friends) are just finishing, called Designing Evolvable Web APIs with ASP.NET. It focuses on building a real system using hypermedia using ASP.NET Web API.</li>
<li>(20:35) Jon asks about versioning: are they using headers, URLs, etc.? Glenn says their argument is based on using additional media types and hypermedia. Hypermedia makes it easier to evolve your API because your clients are following links, not using hardcode URLs.</li>
<li>(22:15) Jon says hypermedia sounds great, but developers often want to follow defined links. Glenn says he doesn&#8217;t think it as a magical automaton, but both developers and code can look for new links as they&#8217;re added.</li>
<li>(23:40) Jon says it&#8217;s harder to evolve APIs if you&#8217;re thinking RPC style, but once you&#8217;re focused on resouces it&#8217;s easier. Glenn says this pattern has worked great for the web &#8211; clients just ignore things they don&#8217;t understand. Jon and Glenn say this is similar also to the move from relational databases to document databases.</li>
<li>(24:30) Glenn says it&#8217;s exciting to finally see some hypermedia APIs coming out: PayPal, GitHub, Amazon&#8217;s streaming APIs, and NPR&#8217;s recent API updates based on hypermedia.</li>
<li>(25:30) Glenn says the book doesn&#8217;t try to convince you that this is the only way, just shows the benefits. K. Scott says this sounds really useful to move from the theoretical to some concrete examples.</li>
</ul>
</ul>
<p>Show Links:</p>
<ul>
<li>Glenn Block (<a href="http://codebetter.com/glennblock">blog</a>, <a href="http://twitter.com/gblock">@gblock</a>)</li>
<li>&#160;<a href="http://splunk.com">Splunk</a></li>
<li><a href="http://dev.splunk.com/">Splunk developer information</a></li>
<li>Book: <a title="http://www.amazon.com/gp/product/1449337716/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1449337716&amp;linkCode=as2&amp;tag=jongall-20" href="http://www.amazon.com/gp/product/1449337716/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1449337716&amp;linkCode=as2&amp;tag=jongall-20">Designing Evolvable Web APIs with ASP.NET</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/xAfhfCwnUaY" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-185-glenn-block-on-splunk/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/b_pRHbtCKY4/HerdingCode-0185-Glenn-Block.mp3" fileSize="18148872" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC Jon and K. Scott talk to Glenn Block about Splunk. Download / Listen: Herding Code 185: Glenn Block on Splunk Show Notes: Intro (00:18) Glenn got a new job at Splunk. What is Splunk? (00:40) Jon asks Glenn what Splunk does. Splunk has a product tha</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC Jon and K. Scott talk to Glenn Block about Splunk. Download / Listen: Herding Code 185: Glenn Block on Splunk Show Notes: Intro (00:18) Glenn got a new job at Splunk. What is Splunk? (00:40) Jon asks Glenn what Splunk does. Splunk has a product that gathers operational intelligence. It&amp;#8217;s got a data [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-185-glenn-block-on-splunk/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/b_pRHbtCKY4/HerdingCode-0185-Glenn-Block.mp3" length="18148872" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0185-Glenn-Block.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 184: Scott Guthrie on Windows Azure</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/KR_bqY0S1wM/</link>
		<comments>http://herdingcode.com/herding-code-184-scott-guthrie-on-windows-azure/#comments</comments>
		<pubDate>Thu, 23 Jan 2014 00:32:48 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=635</guid>
		<description><![CDATA[At NDC Jon and K. Scott talk to Scott Guthrie about his talk Building Real World Apps with Windows Azure, what&#8217;s new in Windows Azure, the advantage of provisioning and scaling up and down instantly, and more. Download / Listen: Herding Code 184: Scott Guthrie on Windows Azure Show Notes: Scott talk: Building Real World [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC Jon and K. Scott talk to Scott Guthrie about his talk Building Real World Apps with Windows Azure, what&#8217;s new in Windows Azure, the advantage of provisioning and scaling up and down instantly, and more.</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0184-Scott-Guthrie.mp3">Herding Code 184: Scott Guthrie on Windows Azure</a></p>
<audio class="wp-audio-shortcode" id="audio-635-15" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0184-Scott-Guthrie.mp3?_=15" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0184-Scott-Guthrie.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0184-Scott-Guthrie.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Scott talk: Building Real World Apps with Windows Azure
<ul>
<li>(00:18) Scott&#8217;s talk covered twelve patterns for building cloud apps using things like continuous delivery, transient fault handling, long term failures, etc. </li>
</ul>
</li>
<li>What&#8217;s new in Windows Azure
<ul>
<li>(01:02) Jon asks Scott to overview the highlights of what&#8217;s new in Windows Azure over the past year </li>
<li>(01:25) Scott says they generally ship a major release every three weeks </li>
<li>(01:40) Scott talks about how they&#8217;re using agile approaches to development, and some services update as often as ten times a day </li>
<li>(02:19) Scott overviews some of the main things that shipped over the past year
<ul>
<li>Virtual Machine and Virtual Networking </li>
<li>Windows Azure Web Sites </li>
<li>Auto-Scale support </li>
<li>Hadoop </li>
<li>Mobile Services </li>
<li>Push Notification </li>
<li>Media Services </li>
</ul>
</li>
</ul>
</li>
<li>(06:37) K. Scott asks how Auto-Scale came to be. Scott Guthrie tells the story about how it came from an acquisition of an Azure startup incubation project. The team joined at the end of March and the feature shipped in June. </li>
<li>(08:42) Scott talks about how Azure and Cloud Development help you move faster with illustrations of how quickly you can create and integrate services and infrastructure and support multiple regions. </li>
<li>(10:22) Scott talks about the advantages of being able to quickly scale both up and down. He talks about how Troy Hunt was able to scale up Azure instances to crunch through databases of breached passwords to make it easy to see if your password has been compromised, then scaled right back down and spent less than a dollar. </li>
<li>(14:09) K. Scott asks about Node.js support. Scott talks about how they&#8217;ve been supporting Node for a long time, and how cloud development lets you easily choose between tools for different applications. </li>
<li>(15:09)Jon asks Scott what books he&#8217;s been reading lately.
<ul>
<li>(15:45) He&#8217;s been reading a lot of work related books on things like supply chain management </li>
<li>(16:35) Scott mentions the new Web API book by Glenn Block and friends </li>
<li>(16:46) He went to Australia and read a book called Fatal Shore, a book about the founding of Australia </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Scott Guthrie (<a href="http://weblogs.asp.net/scottgu/">blog</a>, <a href="http://twitter.com/scottgu">@scottgu</a>) </li>
<li><a href="http://windowsazure.com">Windows Azure</a> </li>
<li>Video from Scott&#8217;s talk: <a href="http://http://vimeo.com/84676531">Build Real World Cloud Apps using Windows Azure Part I</a> and <a href="http://vimeo.com/84676530">Build Real World Cloud Apps using Windows Azure Part II</a> </li>
<li>E-Book version of Scott&#8217;s talk: <a href="http://www.asp.net/aspnet/overview/developing-apps-with-windows-azure/building-real-world-cloud-apps-with-windows-azure/introduction">Building Real-World Cloud Apps with Windows Azure</a> </li>
<li>Troy Hunt: <a href="http://www.troyhunt.com/2013/11/using-high-spec-azure-sql-server-for.html">Using high-spec Azure SQL Server for short term intensive data processing</a> </li>
<li>Book: <a title="http://www.amazon.com/gp/product/1449337716/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1449337716&amp;linkCode=as2&amp;tag=jongall-20" href="http://www.amazon.com/gp/product/1449337716/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1449337716&amp;linkCode=as2&amp;tag=jongall-20">Designing Evolvable Web APIs with ASP.NET</a> </li>
<li>Book: <a href="http://www.amazon.com/gp/product/B006NKL884/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B006NKL884&amp;linkCode=as2&amp;tag=jongall-20">The Fatal Shore</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/KR_bqY0S1wM" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-184-scott-guthrie-on-windows-azure/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/qCyDM4n8YCU/HerdingCode-0184-Scott-Guthrie.mp3" fileSize="12620951" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC Jon and K. Scott talk to Scott Guthrie about his talk Building Real World Apps with Windows Azure, what&amp;#8217;s new in Windows Azure, the advantage of provisioning and scaling up and down instantly, and more. Download / Listen: Herding Code 184: Sc</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC Jon and K. Scott talk to Scott Guthrie about his talk Building Real World Apps with Windows Azure, what&amp;#8217;s new in Windows Azure, the advantage of provisioning and scaling up and down instantly, and more. Download / Listen: Herding Code 184: Scott Guthrie on Windows Azure Show Notes: Scott talk: Building Real World [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-184-scott-guthrie-on-windows-azure/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/qCyDM4n8YCU/HerdingCode-0184-Scott-Guthrie.mp3" length="12620951" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0184-Scott-Guthrie.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 183: Semantic Merge with Pablo Santos</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/Y0eSEZgJRFY/</link>
		<comments>http://herdingcode.com/herding-code-183-semantic-merge-with-pablo-santos/#comments</comments>
		<pubDate>Mon, 06 Jan 2014 21:41:20 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=630</guid>
		<description><![CDATA[The guys talk to Pablo Santos about Semantic Merge, a merge tool that understands your code. Download / Listen: Herding Code 183: Semantic Merge with Pablo Santos Show Notes: Intro (00:18) Semantic Merge is a diff tool with a semantic understanding of your code. Language support (01:01) Jon asks about what languages Semantic Merge supports. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to Pablo Santos about Semantic Merge, a merge tool that understands your code.</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0183-Semantic-Merge.mp3">Herding Code 183: Semantic Merge with Pablo Santos</a></p>
<audio class="wp-audio-shortcode" id="audio-630-16" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0183-Semantic-Merge.mp3?_=16" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0183-Semantic-Merge.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0183-Semantic-Merge.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Intro</li>
<ul>
<li>(00:18) Semantic Merge is a diff tool with a semantic understanding of your code. </li>
</ul>
<li>Language support</li>
<ul>
<li>(01:01) Jon asks about what languages Semantic Merge supports. It currently supports C#, Visual Basic.NET and Java, and they&#8217;re currently working on adding support for C, then C++. </li>
<li>(02:00) Jon noticed that they&#8217;re using Roslyn and asks about that. Pablo says that it worked really well, handling the parsing to allow them to focus on the important things like diff calculation and semantic merge calculation </li>
<li>(03:02) Jon asks about support for JavaScript. Pablo says it&#8217;s still under development and there&#8217;s a lot of demand for it. Since JavaScript isn&#8217;t so tightly structured, they&#8217;re still working on figuring out how to come up with something really useful there. </li>
<li>(04:08) Jon asks about how they handle parsing outside of Roslyn and .NET. Pablo lists the different parsers they use for different languages. They&#8217;ve opened up the way that languages plug in, which allowed for a community contributed Delphi parser. </li>
<li>(5:33 Scott K. asks about support for Typescript, since it&#8217;s more strongly typed. Pablo says that&#8217;ll be easier, but they&#8217;re working through the language support list in order of demand. </li>
</ul>
<li>What kind of semantics can Semantic Merge understand?</li>
<ul>
<li>(06:28) K. Scott talks about what Semantic Merge does at a high level and asks about the different refactorings Semantic Merge can and can&#8217;t understand. Pablo explains a common scenario in which you&#8217;d be afraid to refactor code while adding or changing functionality if you know someone else is also working on it. Semantic Merge understands the refactorings so it&#8217;s easy to merge the actual changes. What Semantic Merge currently doesn&#8217;t handle is multi-file semantic merges, e.g. with code being refactored into another file. They&#8217;ve got a working prototype for that, but it&#8217;s harder to plug into different source control systems since they handle multi-file merges differently. </li>
<li>(08:52) Pablo points out that, while it&#8217;s called Semantic Merge, the diff functionality is really useful on its own. </li>
</ul>
<li>The importance of graphical representation of merge issues</li>
<ul>
<li>(09:17) Jon talks about how good the graphical representation is &#8211; both really easy to read and just generally nice looking. Pablo says they&#8217;ve put a lot of work into that and explains why they&#8217;ve designed it as they have. </li>
<li>(10:41) Scott K. says that developers are often stuck in a textual viewpoint for diff and merge, but a good graphical representation can be really useful. Pablo says that we&#8217;ve seen a recent revolution in source control tools, but we&#8217;re still using tools and technologies from twenty years ago. Jon says that the older ways of displaying diff and merge results with plus and minus lines was based on working with the old source control systems and mostly doing two-way merges. </li>
<li>(13:25) Pablo says it&#8217;s something that you really miss when it&#8217;s not there &#8211; big merges with lots of files look scary, but when you see that the actual changes are minimal it&#8217;s not such a big deal. Scott K. mentions a joke he saw on twitter about how a ten line code review finds ten issues, but a thousand line review passes easily. </li>
<li>(15:17) Jon asks how Semantic Merge has changed the way their team develops code, for instance by making them more ready to refactor code. Pablo gives an example with working on a year-old branch in which traditional diff gave him tons of merge conflicts but Semantic Merge only gave him one. </li>
<li>(17:19) Jon noticed that many of the samples were able to automatically merge everything and asks how Semantic Merge detects merge conflicts. Pablo explains how Semantic Merge not only is able to detect when changes don&#8217;t cause conflicts, but can also detect merge conflicts that other tools won&#8217;t find. </li>
</ul>
<li>Version control integration</li>
<ul>
<li>(19:36) Jon asks about which version control systems Semantic Merge integrates with. Pablo lists Git, Mercurial, TFS, Perforce, Sourcetree and Subversion and says that it&#8217;ll plug into just about anything because just about all version control systems use common conventions for diff / merge tool integration. </li>
</ul>
<li>Platform support</li>
<ul>
<li>(20:51) Jon asks about their recent Linux support and asks if that&#8217;s done using Xamarin and Mono. They use Mono for common backend code, but wrote native front-end code for Linux using Gtk#. They&#8217;re currently working on an OSX version using MonoMac, which gives it a true native front-end with a standard Mac look and feel. </li>
</ul>
<li>Pricing model and free licenses</li>
<ul>
<li>(22:52) Jon asks about the pricing model. There&#8217;s a 15 day free trial and a monthly subscription for $4/month. They wanted to experiment with pricing to make it so inexpensive that pricing wasn&#8217;t an issue. Jon asks if the subscription checking is complex. Pablo says it give you a lot of leeway so it won&#8217;t block you if you&#8217;re coding on a plane or something. They don&#8217;t obsess over security since it&#8217;s such an inexpensive application to begin with. </li>
<li>(25:36) Jon asks about their free licenses for open source developers. Pablo says they use Mono extensively and have been offering open source licenses for Plastic SCM for a while. Pablo mentions some of the open source projects using Semantic Merge, including F-Spot and a lot of other Mono projects. </li>
</ul>
<li>Semantic based insights</li>
<ul>
<li>(26:57) Jon asks they could use their information about semantic changes to source code over time to offer other insights to developers. Pablo says that this is something they&#8217;ve been doing with Plastic SCM with features like semantic method history, so you can track changes to a method over time across renames, refactoring to other files, etc. They also can offer richer metrics, so you don&#8217;t just see lines of code changed but can understand methods changed, refactorings, etc. Their goal for a long time has been to transform version control from a delivery mechanism to a productivity tool for developers. </li>
</ul>
<li>Plastic SCM</li>
<ul>
<li>(29:04) Jon asks how Plastic SCM compares to other version control systems. Pablo recommends going to PlasticSCM.com and look at the branch explorer. It&#8217;s as powerful as Git but very easy to use. It&#8217;s fully decentralized. It&#8217;s very graphical, and you can do almost everything from the branch explorer. It integrates well with enterprise security with support for things like ACL&#8217;s. It (of course) offers support for a lot advanced merge scenarios. It&#8217;s been under development since 2005, they&#8217;re in version 5 right now. It&#8217;s free for every team under 15 developers. </li>
<li>(31:25) Jon asks if there&#8217;s a way to test-drive Plastic SCM against an existing Git repository. Pablo explains how to do that without changing version control systems, since Plastic SCM can natively use the Git API. </li>
<li>(34:25) K. Scot asks about an old blog post about a small Windows Git application client; Pablo says that&#8217;s no longer required as it&#8217;s built into Plastic SCM. </li>
</ul>
<li>Wrap up</li>
<ul>
<li>(34:55) Jon asks about where listeners can find out more about Semantic Merge and Plastic SCM. </li>
<li>(35:50) Jon mentions that he really likes the team page on the Plastic SCM site &#8211; all the faces follow the mouse cursor as you move it around. He&#8217;s easily amused. </li>
</ul>
</ul>
<p>&#160;</p>
<p>Show Links:</p>
<ul>
<li><a href="http://www.semanticmerge.com/">Semantic Merge</a> (<a href="http://twitter.com/semanticmerge">@semanticmerge</a>) </li>
<li><a href="http://www.plasticscm.com">Plastic SCM</a> (<a title="https://twitter.com/plasticscm" href="https://twitter.com/plasticscm">@plasticscm</a>) </li>
<li><a href="http://codicesoftware.blogspot.com/">Plastic SCM blog</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/Y0eSEZgJRFY" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-183-semantic-merge-with-pablo-santos/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/wujIDAo-rPg/HerdingCode-0183-Semantic-Merge.mp3" fileSize="9271781" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to Pablo Santos about Semantic Merge, a merge tool that understands your code. Download / Listen: Herding Code 183: Semantic Merge with Pablo Santos Show Notes: Intro (00:18) Semantic Merge is a diff tool with a semantic understanding of you</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to Pablo Santos about Semantic Merge, a merge tool that understands your code. Download / Listen: Herding Code 183: Semantic Merge with Pablo Santos Show Notes: Intro (00:18) Semantic Merge is a diff tool with a semantic understanding of your code. Language support (01:01) Jon asks about what languages Semantic Merge supports. [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-183-semantic-merge-with-pablo-santos/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/wujIDAo-rPg/HerdingCode-0183-Semantic-Merge.mp3" length="9271781" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0183-Semantic-Merge.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 182: Durandal Kickstarter with Rob Eisenberg</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/qkRUa0sxA6A/</link>
		<comments>http://herdingcode.com/herding-code-182-durandal-kickstarter-with-rob-eisenberg/#comments</comments>
		<pubDate>Tue, 24 Dec 2013 23:55:39 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=626</guid>
		<description><![CDATA[The guys talk to Rob Eisenberg about the Durandal Kickstarter. This Kickstater ends on January 10, 2014, so go back it now! Download / Listen: Herding Code 182: Durandal Kickstarter with Rob Eisenberg Show Notes: Durandal overview Quick overview of what Durandal is How Durandal compares to other SPA frameworks Durandal updates to date Durandal [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to Rob Eisenberg about the Durandal Kickstarter. <a href="http://www.kickstarter.com/projects/eisenbergeffect/durandal-2014">This Kickstater ends on January 10, 2014, so go back it now!</a></p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3">Herding Code 182: Durandal Kickstarter with Rob Eisenberg</a><br />
<audio class="wp-audio-shortcode" id="audio-626-17" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3?_=17" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3</a></audio></p>
<p>Show Notes:</p>
<ul>
<li>Durandal overview
<ul>
<li>Quick overview of what Durandal is </li>
<li>How Durandal compares to other SPA frameworks </li>
<li>Durandal updates to date </li>
</ul>
</li>
<li>Durandal Kickstarter
<ul>
<li>Timeframe </li>
<li>Contribution amounts and benefits </li>
<li>List of Kickstarter goals </li>
<li>How Kickstarter benefits relate to OSS release </li>
</ul>
</li>
<li>Release goal </li>
<li>Tooling goal </li>
<li>Training goal </li>
<li>NextGen
<ul>
<li>Flexible modules </li>
<li>Web Components </li>
<li>Object.observe </li>
<li>Dependencies </li>
<li>Polyfills </li>
</ul>
</li>
<li>Backer benefits </li>
</ul>
<p>Show Links:</p>
<ul>
<li><a href="http://devlicio.us/blogs/rob_eisenberg/default.aspx">Rob Eisenberg</a> &#8211; <a href="http://twitter.com/eisenbergeffect">@EisenbergEffect</a> </li>
<li><a title="http://www.kickstarter.com/projects/eisenbergeffect/durandal-2014" href="http://www.kickstarter.com/projects/eisenbergeffect/durandal-2014">Durandal 2014 Kickstarter</a> </li>
<li><a href="http://durandaljs.com">DurandalJS.com</a> </li>
<li><a title="https://wiki.mozilla.org/Apps/x-tag" href="https://wiki.mozilla.org/Apps/x-tag">Mozilla x-tag</a> </li>
<li><a title="http://addyosmani.com/blog/the-future-of-data-binding-is-object-observe/" href="http://addyosmani.com/blog/the-future-of-data-binding-is-object-observe/">Addy Osmani &#8211; The future of data binding is object.observe</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/qkRUa0sxA6A" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-182-durandal-kickstarter-with-rob-eisenberg/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/nEOITKAfj8I/HerdingCode-0182-Durandal-Kickstarter.mp3" fileSize="20303638" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to Rob Eisenberg about the Durandal Kickstarter. This Kickstater ends on January 10, 2014, so go back it now! Download / Listen: Herding Code 182: Durandal Kickstarter with Rob Eisenberg Show Notes: Durandal overview Quick overview of what D</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to Rob Eisenberg about the Durandal Kickstarter. This Kickstater ends on January 10, 2014, so go back it now! Download / Listen: Herding Code 182: Durandal Kickstarter with Rob Eisenberg Show Notes: Durandal overview Quick overview of what Durandal is How Durandal compares to other SPA frameworks Durandal updates to date Durandal [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-182-durandal-kickstarter-with-rob-eisenberg/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/nEOITKAfj8I/HerdingCode-0182-Durandal-Kickstarter.mp3" length="20303638" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 181: CouchDb, Cloudant, MyCouch and SisoDb with Max Thayer and Daniel Wertheim</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/4XFcu4EqGsg/</link>
		<comments>http://herdingcode.com/herding-code-181-couchdb-cloudant-mycouch-and-sisodb-with-max-thayer-and-daniel-wertheim/#comments</comments>
		<pubDate>Thu, 19 Dec 2013 21:18:12 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=623</guid>
		<description><![CDATA[The guys talk to Max Thayer and Daniel Wertheim about document databases, especially focusing on CouchDb and Cloudant&#8217;s cloud-hosted CouchDb offering. Download / Listen: Herding Code 181: CouchDb, Cloudant, MyCouch and SisoDb with Max Thayer and Daniel Wertheim Show Notes: Intro (00:40) Jon says he heard about Daniel because of SisoDb, a document database running [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to Max Thayer and Daniel Wertheim about document databases, especially focusing on CouchDb and Cloudant&#8217;s cloud-hosted CouchDb offering.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0181-CouchDb.mp3">Herding Code 181: CouchDb, Cloudant, MyCouch and SisoDb with Max Thayer and Daniel Wertheim</a><a class="wp-embedded-audio" href="">&quot;http://herdingcode.com/wp-content/uploads/HerdingCode-0181-CouchDb.mp3&quot;</a></p>
<p>Show Notes:</p>
<ul>
<li>Intro
<ul>
<li>(00:40) Jon says he heard about Daniel because of SisoDb, a document database running on top of SQL Server. Jon and Daniel talk about what SisoDb does and why it could be useful in a &quot;SQL Server only&quot; shop. </li>
<li>(01:55) Daniel introduced Jon to Max, who works as a developer evangelist at Cloudant and hacks on Node.js and CouchDb. </li>
</ul>
</li>
<li>CouchDb and Cloudant basics, multi-master replication possibilities
<ul>
<li>(02:30) Jon asks Max what Cloudant does. Max says that Cloudant is a database as a service &#8211; a hosted, managed document database based on CouchDb. </li>
<li>(02:58) Max talks about multi-master replication and some of the implications, including PouchDb (which treats your browser as a CouchDb instance), and even running a node on your phone that you can replicate against. Jon&#8217;s mind is blown. </li>
<li>(04:30) Jon asks about the latency involved in using an HTTP database as a service. Max says that local caching helps, as well as having your database service physically close to your users (or app/web servers). Queries are always done against precomputed indexes, so query time is always logarithmic. Daniel says you can use replication to bring data as close as possible, and emphasizes the importance of in-application caching. </li>
<li>(06:38) Kevin says that there have been a lot of attempts at replication based systems over the years and asks what CouchDb does differently. Max says that the big difference is in the way CouchDb handles multi-version concurrency control by keeping revision trees. This lets them run a lockless system and investigate changes later. Daniel says that consistent hashing helps with this and explains the terms. Max talks about the use of revision numbers and conflict handling. </li>
<li>(09:08) Daniel says he likes that Cloudant adds clustering support, and he&#8217;s excited that Cloudant is contributing this back to CouchDb. Max says that they&#8217;ve also added a new administrative interface called Photon, which they&#8217;ll be contributing back. </li>
<li>(10:19) Daniel asks if this means that Big Couch is being deprecated. Max says yes, and Kevin asks for more information on what Big Couch is. </li>
</ul>
</li>
<li>Migrating to CouchDb
<ul>
<li>(10:57) Jon asks about the migration path for applications using traditional RDBMSs to Cloudant or CouchDb. Max explains two options: the do it yourself option (uploading data as CSV&#8217;s or similar) or using the WEAVE@cloud service from CloudBees. </li>
<li>(14:13) Daniel asks about task of moving from traditional queries to map &#8211; reduce queries. Max talks about some of the migrations he&#8217;s been a part of, and talks about the use of Lucene queries as a bridge. Daniel says that in moving to document databases you really need to think differently about how you&#8217;ll consume the data, e.g. . Max talks about design documents, which store indexes, list functions. </li>
<li>(16:06) Jon says that when he started looking at document databases, he found that it was also helpful to store additional data in a way that it&#8217;s easy to query. Max gives an example using medical data in which you can normalize data as part of the map reduce process, so you rarely have to worry about schema. Daniel says that it&#8217;s the result of the map that&#8217;s being indexed. Max says that unlike some other systems like Hadoop that do the mapping in a batch, CouchDb updates indexes incrementally. </li>
<li>(18:42) Jon asks how CouchDb compares to Mongo. Max says he found Mongo to be a good transitional system from relational databases because the querying was similar, but it broke down at scale. </li>
<li>(19:50) Jon puts K Scott on the spot and asks how this strikes him due to his recent work with medical data on Mongo. K Scott says it&#8217;s good to know CouchDb is an option if they hit scaling issues. </li>
<li>(20:43) Jon asks about the process of migrating from Mongo to CouchDb. Max says he&#8217;s written a script that dumps data from JSON in Mongo to be imported into CouchDb. He says that on the surface, Mongo and CouchDb store data similarly so migrating data isn&#8217;t that hard &#8211; the real differences are in querying and locking. </li>
</ul>
</li>
<li>Cloudant &#8211; features, pricing model, free account setup
<ul>
<li>(22:21) Jon asks how Cloudant compares to other database as a service offerings. Max lists some, and Daniel mentions Iris Couch. Daniel talks about how easy it is to get started with CouchDb on Windows, then migrate to Cloudant. </li>
<li>(24:12) Max talks about some of the features they&#8217;ve added recently, like Lucene queries and geographic querying. Max says that they contribute a lot to CouchDb. </li>
<li>(25:30) Jon asks how Cloudant integrates with the hosting providers they&#8217;ve got listed. Max says that they work to host Cloudant servers in the same datacenters as their hosting partners. </li>
<li>(27:05) Kevin asks how Cloudant charges. Max says that for dedicated clusters, it&#8217;s per-node and dependant on the hosting provider since they all charge differently. For multi-tenancy, it&#8217;s on a per-request and per-storage. Migrating between dedicated and multi-tenant is handled using the standard replication mechanism. </li>
<li>(27:39) Jon asks about the process of getting started with the free level. Max explains how it works and says they&#8217;ll only charge you if you exceed $5 per month, which is a good amount of use. Daniel says it takes less than 5 minutes to get started. </li>
</ul>
</li>
<li>Client libraries and MyCouch
<ul>
<li>(29:03) Kevin asks if there are client libraries for most libraries. Max says there are, but most are just adapted from the CouchDb libraries. </li>
<li>(29:43) Daniel built MyCouch as a purely async library that doesn&#8217;t hide the domain knowledge of CouchDb. Jon asks about the overall flow of using the MyCouch NuGet package to get started. Daniel says he&#8217;s use Portable Class Library support to cover the different the different platforms. </li>
<li>(31:53) Jon asks about the Query.Configure interface to build a query. </li>
<li>(32:44) Jon asks about the history of Daniel&#8217;s interest in CouchDb and MyCouch. </li>
</ul>
</li>
<li>Migrating from Cloudant to in-house CouchDb
<ul>
<li>(33:20) Kevin asks if Cloudant is a hosted version of CouchDb or a fork. Max says that currently it&#8217;s a fork, but they contribute a lot back. </li>
<li>(33:43) Kevin then asks about what would be required in bringing a Cloudant-hosted application back in-house to run under vanilla CouchDb. Max say that in addition to losing the managed / hosted value, you&#8217;d lose Lucene querying and (soon) the geo-indexing features. Daniel also points out Cloudant&#8217;s clustering support. </li>
</ul>
</li>
<li>Questions from Twitter
<ul>
<li>(34:55) Rob Sullivan asks Daniel how working with SisoDb and CouchDb affect the way he views document databases and RDBMSs. Daniel says that he doesn&#8217;t want to see an ORM anymore and he&#8217;s noticed that a lot of people are creating hierarchical document structures in SQL Server when a document database would be a better fit. He says that there&#8217;s a little less safety in distributed document databases, and you just have to get used to working with that. Kevin asks about some of the application strategies people use to deal with that. Max says that CouchDb provides ACIDity at the document level, so as long as you wrap your transactions into a single document you&#8217;re fine. This leads to event sourcing, in which all your transactions are handled as separate documents. </li>
<li>(39:23) Steve Strong asks about the offline story to synchronize change changes to a web client. Max talks about PouchDb and how it works in web clients with intermittent data access. </li>
<li>(41:31) Jon asks if PouchDb and CouchDb could be used in peer-to-peer systems. Max says this is something he&#8217;s profoundly interested in. He&#8217;s done some conference talks about it and has a project called Quilter which is aimed at feature parity with Dropbox but with full user control, security and privacy by eliminating centralized network infrastructure. Daniel asks if it&#8217;s NSA-safe, and Max talks about how you can protect things using HTTPS and friend / reputation systems </li>
</ul>
</li>
<li>Erlang
<ul>
<li>(46:13) Kevin asks what it&#8217;s like working with CouchDb&#8217;s code, since a lot of it&#8217;s written in Erlang. Max says that it&#8217;s built around building effective distributed systems since it incorporates fault handling. Daniel talks about the low memory footprint and Max talks about the ability to pass native Erlang messages over arbitrary protocols including HTTP. </li>
<li>(49:02) Jon asks where to learn more about Erlang. Max points out the book (available online) called Learn You Some Erlang For Great Good. </li>
<li>(49:44) Jon asks about what it&#8217;s like to integrate Erlang into parts of an application. </li>
</ul>
</li>
<li>CouchDb vs. Mongo
<ul>
<li>(50:51) Kevin asks why Mongo gets more press than CouchDb. Max says that Mongo has a similar interface to traditional RDBMSs, but a lot of it&#8217;s just been a marketing victory. He talks about some unappreciated CouchDb advantages, like the fact that it&#8217;s got a built-in REST interface. He also says that CouchDb scales better than Mongo due to technical differences such as multi-version concurrency control.&#160; </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Max Thayer (<a href="http://www.maxthayer.org/">blog</a>, <a href="https://github.com/garbados/">github</a>, <a href="https://twitter.com/garbados">twitter</a>) </li>
<li>Daniel Wertheim (<a href="http://danielwertheim.se/">blog</a>, <a href="https://github.com/danielwertheim">github</a>, <a href="https://twitter.com/danielwertheim">twitter</a>) </li>
<li><a href="https://cloudant.com/">Cloudant</a> </li>
<li><a href="http://pouchdb.com/">PouchDb</a> </li>
<li><a href="https://github.com/danielwertheim/mycouch">MyCouch on GitHub</a> / <a href="https://www.nuget.org/packages/MyCouch/">MyCouch on NuGet</a> </li>
<li><a href="http://www.cloudbees.com/platform/services/integrate">WEAVE@cloud</a> migration solution from CloudBees </li>
<li><a href="http://www.iriscouch.com/">Iris Couch</a> </li>
<li><a href="https://github.com/garbados/quilter">Quilter</a>&#160; </li>
<li><a href="http://sisodb.com/">SisoDb</a> </li>
<li><a href="http://learnyousomeerlang.com/">Learn You Some Erlang For Great Good</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/4XFcu4EqGsg" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-181-couchdb-cloudant-mycouch-and-sisodb-with-max-thayer-and-daniel-wertheim/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/WkkPcIH0WV4/HerdingCode-0181-CouchDb.mp3" fileSize="22384637" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to Max Thayer and Daniel Wertheim about document databases, especially focusing on CouchDb and Cloudant&amp;#8217;s cloud-hosted CouchDb offering. Download / Listen: Herding Code 181: CouchDb, Cloudant, MyCouch and SisoDb with Max Thayer and Dan</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to Max Thayer and Daniel Wertheim about document databases, especially focusing on CouchDb and Cloudant&amp;#8217;s cloud-hosted CouchDb offering. Download / Listen: Herding Code 181: CouchDb, Cloudant, MyCouch and SisoDb with Max Thayer and Daniel Wertheim Show Notes: Intro (00:40) Jon says he heard about Daniel because of SisoDb, a document database running [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-181-couchdb-cloudant-mycouch-and-sisodb-with-max-thayer-and-daniel-wertheim/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/WkkPcIH0WV4/HerdingCode-0181-CouchDb.mp3" length="22384637" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0181-CouchDb.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 180: Visual Studio 2013 Web Tools, Web Essentials and Side Waffle with Mads Kristensen</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/Q5YIlXgQes4/</link>
		<comments>http://herdingcode.com/herding-code-180-visual-studio-2013-web-tools-web-essentials-and-side-waffle-with-mads-kristensen/#comments</comments>
		<pubDate>Wed, 06 Nov 2013 23:04:33 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=620</guid>
		<description><![CDATA[The guys talk to Mads Kristensen about all the new web tools in Visual 2013, Web Essentials, Side Waffle and Web Dev Checklist. Download / Listen: Herding Code 180: Visual Studio 2013 Web Tools, Web Essentials and Side Waffle with Mads Kristensen Show Notes: Intro (00:34) Mads works on the ASP.NET team building tools for [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to Mads Kristensen about all the new web tools in Visual 2013, Web Essentials, Side Waffle and Web Dev Checklist.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0180-Mads-Kristensen.mp3">Herding Code 180: Visual Studio 2013 Web Tools, Web Essentials and Side Waffle with Mads Kristensen</a><audio class="wp-audio-shortcode" id="audio-620-19" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0180-Mads-Kristensen.mp3?_=19" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0180-Mads-Kristensen.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0180-Mads-Kristensen.mp3</a></audio></p>
<p>Show Notes:</p>
<ul>
<li>Intro
<ul>
<li>(00:34) Mads works on the ASP.NET team building tools for everything that has to do with web development. He&#8217;s also done a lot of open source development &#8211; BlogEngine.NET, Web Essentials and some other Visual Studio extensions.</li>
<li>(01:25) Jon asks Mads to overview what&#8217;s new in Visual Studio. Visual Studio 2012 included a new JavaScript and CSS Editor, Visual Studio 2013 added Browser Link.</li>
<li>(02:48) Visual Studio 2013 has Browser Link, which allows you to connect any browser with Visual Studio. Any extension in the browser or Visual Studio can talk to each other via a web socket connection. The refresh browser feature in Visual Studio 2013 is just a proof of concept, the real feature is the communications channel.</li>
<li>(04:07) Scott K Asks about the Page Inspector feature and whether that would be integrated with Browser Link. Mads says that Page Inspector was introduced with Visual Studio 2012. It includes browser tools and source mapping which allow you to trace the markup back to what generated it, including C# code and server controls. Mads took over the Page Inspector team almost a year ago, and they&#8217;re using the same underlying engine. Right now you don&#8217;t get live updates in Page Inspector with Visual Studio 2013, but with the Web Essentials extension you will.</li>
<li>(07:19 Jon asks about how the source mapping works. Mads explains that the ASP.NET runtime injects a script tag at the end of your page, and Visual Studio is listening for it to connect on a localhost endpoint. Mads explains that the Browser Link connection is only made under specific conditions &#8211; running locally, in debug, etc.</li>
<li>(09:10) Jon asks about some of the recent extensions Mads has demonstrated, especially the example which tracks unused CSS class names. Mads says this has been a long requested feature, but it&#8217;s only possible to do this right from inside the browser. They&#8217;re now able to add smart tags into the CSS editor to show unused CSS classes. It&#8217;s available now using Visual Studio 2013 and Web Essentials.</li>
<li>(12:24) Scott K asks if it&#8217;s possible to see which classes are overriding others. Mads said it&#8217;s not there yet, but on the way.</li>
<li>(13:08) Jon asks about the process for creating an extension, and what parts are open source. Mads says that the project and item templates are open sourced. He explains the steps to create a Browser Link extension. The project template contains a C# file and a JavaScript file which are able to talk to each other. The Browser Link JavaScript contains an isolated copy of jQuery. In both the C# and JavaScript, you can call directly into the other side using simple Call methods.</li>
<li>(17:23) Scott K asks if they can hook up the model binder to allow deserializing more complex types. Mads says it&#8217;s not available yet, but on the way.</li>
<li>(18:00) Scott K asks if they&#8217;ve done any prototyping for unit testing automation, to allow running JavaScript testing frameworks like Jasmine with Visual Studio integration. Mads says it was part of his initial pitch for the Browser Link feature, but it hasn&#8217;t been implemented yet.</li>
<li>(19:04) Jon says they could also test performance using testing automation, and Mads says that they could do quite a bit more with performance and browser testing by working with browser extensions &#8211; Page Speed, SEO, accessibility, etc. They can call off to any service anywhere on the internet.</li>
<li>(21:10) Jon asks about some of the extensions and prototypes he&#8217;s worked on. Mads says he&#8217;s wrote an extension for LESS and CSS editors which updates the page as you type &#8211; without even requiring you to save the CSS document.</li>
<li>(23:50) Mads talks about the inspect mode extension. When you hit ctrl-alt-I in the browser, you can hover over any DOM element and see the source in Visual Studio (including controls, views, Master Pages, partials, etc.).</li>
<li>(25:35) Mad talks about design mode (ctrl-alt-d) which turns any DOM element into a content editable field, which allows you to type in the browser and change the server-side code. He talks about some complexities due to changing the server-side code which throws off the source mapping, and how when they make some future changes to allow updating source maps on the fly they&#8217;ll be able to allow pretty complex browser-based design and editing.</li>
<li>(29:35) Scott K asks if they could use the shadow DOM to allow updating the source maps. Mads says that wouldn&#8217;t work with older browsers, and there&#8217;s some discussion of legacy browser support.</li>
<li>(31:17) Scott K talks about a feature he liked in Brackets, which allowed viewing styles applied to a code fragment when editing HTML. He asks if he could get something like Visual Studio 2013 Code Lens to view the styles and navigate to the CSS. Mads talks about some of the complexities there, explaining how they inject ID&#8217;s into all elements and include the mapping in a JSON blob. Given an element ID, your JavaScript can look up the source file and range that corresponds to it on the server.</li>
</ul>
</li>
<li>Web Essentials
<ul>
<li>(36:12) Mads talks about the history of Web Essentials. It started out in 2010, but the old Visual Studio HTML and CSS editors limited what he could do. He used Web Essentials as the test project to make sure that Visual Studio 2012 supported the extensibility API&#8217;s, then released a new version to correspond with Visual Studio 2013. He open sourced it at BUILD 2013 in June.</li>
<li>(37:36) Jon asks about how Mads migrates features from Web Essentials to Visual Studio. Mads says that he does this on every Visual Studio release (including updates) which allows him to delete a lot of code. There are some features which don&#8217;t get migrated &#8211; niche features, features for which they&#8217;re still testing out the user experience. He talks about some neat features in Web Essentials that he likes, but he doesn&#8217;t think enough people use to justify migrating.</li>
<li>(39:57) Jon asks about the language Web Essentials supports. Mads lists Markdown, LESS and Coffeescript. Mads talks about how they were able to include LESS and Coffeescript support from Web Essentials while waiting on the Visual Studio 2012.2 release, then removed it when that update shipped. He talks about the problems they hit due to the editor overlap. Mads said that situation caused him to change his philosophy on features to add in Web Essentials &#8211; he&#8217;ll no longer include features in Web Essentials which could cause a conflict with Visual Studio, especially compiler related features; that&#8217;s why he removed TypeScript support from Web Essentials.</li>
<li>(44:14) Jon mentions robots.txt support in Web Essentials. Mads explains that this is a great example of how his personal web development frustrations turn into Web Essentials features. He&#8217;s hoping that open sourcing Web Essentials will lead other developers to contribute as well.</li>
</ul>
</li>
<li>Web Dev Checklist
<ul>
<li>(46:35) Jon asks about Web Dev Checklist. Mads and Sayed were both working on building out some sites last year, and they came up with a list of important checks for any website &#8211; performance, accessibility, SEO, etc. They got on Hacker News and were happy that their site held up well under the traffic.</li>
</ul>
</li>
<li>Side Waffle
<ul>
<li>(49:16) Side Waffle is a Visual Studio extension which gives you a lot of templates so you can add things to your projects which were written the write way, by experts. They&#8217;ve got Angular controllers, Durandel, robots.txt, etc. They&#8217;re hoping for other developers to add new templates.</li>
<li>(51:36) Mads says that the teams at Visual Studio can&#8217;t create and maintain all the templates over time. Jon says he&#8217;s seen this again and again &#8211; new things get released but don&#8217;t always get maintained over the years. Mads says this makes it easy for developers to add and update templates.</li>
<li>(53:28) Mads says Sayed came up with the name from ordering a side order of waffles in a restaurant.</li>
<li>(54:24) Mads explains some of the technical complexities that he and Sayed had to deal with to allow adding new item templates to Visual Studio. Due to the strange ways they worked with MSBuild, Side Waffle isn&#8217;t allowed into the Visual Studio Gallery. They register Side Waffle as a Visual Studio gallery provider so when new templates are added, it will show up in the Visual Studio updates list. Jon&#8217;s confused, and Mads explains more about what&#8217;s going on.</li>
</ul>
</li>
<li>Lightning Round questions from Twitter
<ul>
<li>(58:31) Barry Dorrans asks why Mads is pushing the #region agenda on unsuspecting HTML files.</li>
<li>(59:08) Warren Buckly asks &#8220;There is support for LESS, will there ever be support for SASS?&#8221;</li>
<li>(59:34) Jonas Eriksson asks Is it possible to extend the new HTML editor IntelliSense?&#8221;</li>
<li>(51:52) Jonas Eriksson asks if it&#8217;s possible to start a Grunt task and monitor its output.</li>
<li>(1:00:09) Saul asks how to create a static website in Visual Studio.</li>
<li>(1:01:07) Bret Ferrier asks about getting Angular IntelliSense with TypeScript.</li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Mads Kristensen (<a href="http://madskristensen.net/">blog</a>, <a href="https://twitter.com/mkristensen">@mkristensen</a>)</li>
<li><a href="http://VSWebEssentials.com">VSWebEssentials.com</a></li>
<li><a href="http://SideWaffle.com">SideWaffle.com</a></li>
<li><a href="http://webdevchecklist.com/">Web Dev Checklist</a></li>
<li><a href="http://madskristensen.net/post/angularjs-intellisense-in-visual-studio-2012">AngularJS Intellisense in Visual Studio 2012</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/Q5YIlXgQes4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-180-visual-studio-2013-web-tools-web-essentials-and-side-waffle-with-mads-kristensen/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/Q-dbXG6EXSc/HerdingCode-0180-Mads-Kristensen.mp3" fileSize="16248497" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to Mads Kristensen about all the new web tools in Visual 2013, Web Essentials, Side Waffle and Web Dev Checklist. Download / Listen: Herding Code 180: Visual Studio 2013 Web Tools, Web Essentials and Side Waffle with Mads Kristensen Show Not</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to Mads Kristensen about all the new web tools in Visual 2013, Web Essentials, Side Waffle and Web Dev Checklist. Download / Listen: Herding Code 180: Visual Studio 2013 Web Tools, Web Essentials and Side Waffle with Mads Kristensen Show Notes: Intro (00:34) Mads works on the ASP.NET team building tools for [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-180-visual-studio-2013-web-tools-web-essentials-and-side-waffle-with-mads-kristensen/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/Q-dbXG6EXSc/HerdingCode-0180-Mads-Kristensen.mp3" length="16248497" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0180-Mads-Kristensen.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 179: xSockets with Uffe Bjorklund and Magnus Thor</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/Pyb9wl9p7Nc/</link>
		<comments>http://herdingcode.com/herding-code-179-xsockets-with-uffe-bjorklund-and-magnus-thor/#comments</comments>
		<pubDate>Tue, 15 Oct 2013 23:55:10 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=615</guid>
		<description><![CDATA[K Scott and and Jon talk to&#160; about Uffe Bjorklund and Magnus Thor about xSockets, a free framework for Web Socket and WebRTC communications. Download / Listen: Herding Code 179: xSockets with Uffe Bjorklund and Magnus Thor Show Notes: Intro (00:30) Uffe and Magnus introduce themselves. (00:50) K Scott asks about how xSockets got started, [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>K Scott and and Jon talk to&#160; about Uffe Bjorklund and Magnus Thor about xSockets, a free framework for Web Socket and WebRTC communications.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0179-xSockets.mp3">Herding Code 179: xSockets with Uffe Bjorklund and Magnus Thor</a><audio class="wp-audio-shortcode" id="audio-615-20" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0179-xSockets.mp3?_=20" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0179-xSockets.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0179-xSockets.mp3</a></audio></p>
<p>Show Notes:</p>
<ul>
<li>Intro
<ul>
<li>(00:30) Uffe and Magnus introduce themselves. </li>
<li>(00:50) K Scott asks about how xSockets got started, and what problem it solves. </li>
<li>(02:05) Jon asks if xSockets is a business or a project. Magnus says it&#8217;s now a full-time business &#8211; they&#8217;ve been working on xSockets for four years, but they&#8217;ve gone full-time earlier this year. Uffe points out that while it&#8217;s supported by a full time business, xSockets is free to use. </li>
</ul>
</li>
<li>xSockets compared to SignalR, unique xSockets features
<ul>
<li>(02:57) K Scott asks how xSockets compares with SignalR. Magnus says they&#8217;ve been working on this for 4 years and mentions some differences. Uffe compliments the SignalR project and community, then points out that one important difference is that xSockets is stateful, whereas SignalR isn&#8217;t. </li>
<li>(04:54) Jon talks about the different approaches towards stateful controllers, and that it seems that stateful controllers could simplify things. Uffe describes some advantages, like filtering where you send messages dynamically with lambda expressions (a lot more control than groups in SignalR). </li>
<li>(06:10) Magnus talks about the JavaScript proxy in the xSockets which also is able to interact with state on the server. </li>
<li>(07:09) K Scott asks about other differences. Uffe says that xSockets is very portable &#8211; running on IIS, OWIN, Azure, Amazon, a Raspberry Pi, even your cellphone if you want. It runs on anything that runs .NET 4 or Mono, and they&#8217;ve had reports on it running a wide variety of hardware. </li>
<li>(07:52) Jon says he&#8217;s heard of people using local servers for desktop applications. Uffe says they have people in Russia doing that with xSockets. </li>
<li>(08:20) Magnus says that they have support for long-running controllers. </li>
<li>(08:50) Uffe says they&#8217;ve got a plugin framework. It was originally built on MEF, but they&#8217;ve recently rewritten it to remove the MEF dependency. You can drop an assembly in the xSockets&#160; folder and it will be picked up. Jon says it looks pretty similar to MEF; Uffe says he loves MEF and kept it pretty similar. </li>
<li>(09:55) K Scott says it feels very similar to ASP.NET MVC, in that there&#8217;s a controller base class that you extend. </li>
<li>(11:00) K Scott asks if there&#8217;s a routing mechanism. Uffe describes the extension methods that allow sending messages as well as using the routing system. </li>
<li>11:52 Jon says he noticed the generic controller which works as a message dispatcher. Uffe describes how it works as a smart dispatcher, which will only dispatch messages to people who are subscribed. This is useful to people who are familiar with JavaScript; they can do pretty advanced stuff without needing to write any server-side code. </li>
<li>(12:56) Magnus describes the channel system, which allows for some complex, private communications without requiring server-side code. </li>
</ul>
</li>
<li>Web Sockets protocol
<ul>
<li>(14:02) K Scott remarks that the Web Sockets protocol has changed quite a bit over the years. Magnus says that it was very difficult earlier, but has stablilized. </li>
<li>(15:02) K Scott asks if there&#8217;s a test suite for Web Sockets available. Uffe says there are some, but all have problems. The xSockets team uses their own testing system. </li>
<li>(16:00) Jon asks if the Web Sockets API is difficult to use. Magnus says the two first versions were pretty easy, but the RFC introduced some more difficult concepts like control frames and continuous frames.&#160; There are a lot of solutions on GitHub and CodePlex for dealing with protocol stuff. </li>
</ul>
</li>
<li>Web RTC
<ul>
<li>(16:40) Jon asks about Web RTC support. Magnus says Web RTC enables realtime communications in the browser using peer-to-peer communication without requiring a server or middleman once the communications are established. </li>
<li>(18:47) K Scott asks if the Web RTC communications are TCP or UDP. Magnus says it&#8217;s UDP so it can be unreliable. There&#8217;s a NuGet package with a full sample showing how it works. </li>
<li>(20:00) K Scott asks about the processing pipeline. Uffe describes the Rewritable attribute &#8211; you can use that to override anything in the pipeline. </li>
</ul>
</li>
<li>Fallback and pipeline
<ul>
<li>(21:05) Jon asks about fallback support for older browsers. Magnus says there&#8217;s long-polling support based on MVC; they&#8217;re going to replace that with a Web API based solution. Uffe says it&#8217;s easy to implement; just add a JavaScript reference. He also says there&#8217;s no MVC dependency in xSockets, so you can use it without MVC if you want. </li>
</ul>
</li>
<li>External API
<ul>
<li>(22:25) K Scott asks about the external API. Uffe says it should probably called something clearer &#8211; it&#8217;s a client that can be used in any C# code, as well as PowerShell and even compiled stored procedures in SQL Server. Uffe describes some of the ways he&#8217;s seen it used. </li>
</ul>
</li>
<li>Crazy things people have been doing with xSockets
<ul>
<li>(24:24) K Scott asks if there&#8217;s anything crazy they&#8217;ve seen people do with xSockets. Magnus talks about a microscope control system used in Jamaica. Uffe talks about a realtime water monitoring system in Dubai running in C# 2.0 on Windows CE. They&#8217;re now able to control the water system via a web page, which replaced the need for an entire water monitoring facility. </li>
<li>(27:32) Magnus talks about a Fruit Ninja like game using xSockets, HTML5 canvas and Kinect. That lead to a job building a virtual lobby, which they completed in 10 days. </li>
<li>(28:18) K Scott asks about authentication and authorization with xSockets. </li>
</ul>
</li>
<li>Final questions, Samples and Videos
<ul>
<li>(29:08) K Scott takes a question from Twitter about what they think about OWIN. Magnus says they support it and it seems like a good idea, but he can&#8217;t </li>
<li>(29:42) K Scott asks about the While You Were Gone example. Uffe says this is a queue system that handles offline messages, so if you&#8217;re disconnected for a period of time it will deliver the messages when you reconnect. </li>
<li>(31:12) K Scott asks if there&#8217;s anything that may have been missed. Uffe talks about clustered servers &#8211; they&#8217;re all siblings which communicate peer-to-peer. </li>
<li>(32:48) Uffe talks about some upcoming travel they&#8217;ve got later this year for Desert Code Camp in November and possibly NDC London in December. </li>
<li>(33:22) Jon talks about the best way for people to get started. Magnus recommends the videos on xSockets.net. </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li><a href="http://twitter.com/dathor">Magnus Thor</a> &amp; <a href="http://twitter.com/ulfbjo">Uffe Bjorklund</a> on Twitter </li>
<li><a href="https://twitter.com/xsockets">xSockets</a> on Twitter </li>
<li>Paul Stack (<a href="http://paulstack.co.uk/blog/">blog</a>, <a href="https://twitter.com/#!/stack72">@stack72</a>) </li>
<li><a href="https://groups.google.com/forum/?hl=en#!forum/xsocketsgroup">xSockets Developer Forum</a> </li>
<li><a href="http://xsockets.net/xsockets-vs-signalr">Comparison of xSockets and SignalR</a> </li>
<li><a href="http://xsockets.net/video-tutorials">xSockets video tutorials</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/Pyb9wl9p7Nc" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-179-xsockets-with-uffe-bjorklund-and-magnus-thor/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/jXR2bd3OlDc/HerdingCode-0179-xSockets.mp3" fileSize="7945720" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>K Scott and and Jon talk to&amp;#160; about Uffe Bjorklund and Magnus Thor about xSockets, a free framework for Web Socket and WebRTC communications. Download / Listen: Herding Code 179: xSockets with Uffe Bjorklund and Magnus Thor Show Notes: Intro (00:30) U</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>K Scott and and Jon talk to&amp;#160; about Uffe Bjorklund and Magnus Thor about xSockets, a free framework for Web Socket and WebRTC communications. Download / Listen: Herding Code 179: xSockets with Uffe Bjorklund and Magnus Thor Show Notes: Intro (00:30) Uffe and Magnus introduce themselves. (00:50) K Scott asks about how xSockets got started, [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-179-xsockets-with-uffe-bjorklund-and-magnus-thor/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/jXR2bd3OlDc/HerdingCode-0179-xSockets.mp3" length="7945720" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0179-xSockets.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 178: Async, C# Syntax, AngularJS, Document Databases, Podcast Hosting, A New Job and Summer Vacations</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/hE4k7PXdAU8/</link>
		<comments>http://herdingcode.com/herding-code-178-async-c-syntax-angularjs-document-databases-podcast-hosting-a-new-job-and-summer-vacations/#comments</comments>
		<pubDate>Mon, 09 Sep 2013 23:49:49 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=610</guid>
		<description><![CDATA[The guys chat about Async, . Download / Listen: Herding Code 178: Async, C# Syntax, AngularJS, Document Databases, Podcast Hosting, A New Job and Summer Vacations Show Notes: Async: Our Generation&#8217;s Goto Statement? (00:19) Jon introduces a listener question referring to . (00:52) Kevin says he thinks the Callback Hell problem is overblown. In the [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys chat about Async, .</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0178-Discussion.mp3">Herding Code 178: Async, C# Syntax, AngularJS, Document Databases, Podcast Hosting, A New Job and Summer Vacations</a></p>
<audio class="wp-audio-shortcode" id="audio-610-21" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0178-Discussion.mp3?_=21" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0178-Discussion.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0178-Discussion.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Async: Our Generation&#8217;s Goto Statement?</li>
<ul>
<li>(00:19) Jon introduces a listener question referring to . </li>
<li>(00:52) Kevin says he thinks the Callback Hell problem is overblown. In the Node world, there are flow control libraries like Async and good practices. </li>
<li>(01:51) Scott K agrees &#8211; using named rather than anonymous functions solves a lot of problems he sees. He asks if things would be better if everything was Async by default. Jon says he thinks Async-creep and Async by default push you down a better path most of the time. Kevin says since Node&#8217;s always forced that pattern it&#8217;s been simpler.</li>
<li>(04:40) Kevin says he Async / Await only address simple cases where you want a series of steps. Flow control libraries allow for more complex flow, parallel operations, etc. Jon talks about how multiple async operations can get complex pretty quickly &#8211; dealing with error conditions, timeouts, etc. and Scott K points out the difference between parallel processing and async.</li>
</ul>
<li>C# Syntax and Xamarin Speculation</li>
<ul>
<li>(07:42) Jon says there&#8217;s room for a lot more syntactic sugar in C# &#8211; not just async, but dynamics, chained null checking, etc. Jon and Scott K talk about the benefits and limitations of the null coalescing operator (??).</li>
<li>(10:50) Scott K says async may be the next TDD in terms of driving good design.</li>
<li>(11:47) Kevin wonders when Xamarin will cut the cord and begin innovating on C# separately from Microsoft. The guys discuss some of the things they&#8217;ve been doing &#8211; repl, SIMD support, etc., but Jon points out that it&#8217;s all innovation at the compiler level, not on the language. Scott K talks about how our recent interview with Jon McCoy talked about modifying IL, and wonders if Xamarin will get into doing that kind of thing. Kevin asks what benefit Xamarin gets from keeping compatibility with Microsoft. Jon doesn&#8217;t buy it.</li>
<li>(15:01) Scott K wonders if the C# spec or compiler were open enough that people could innovate on it. Jon thinks Roslyn could do that, but he&#8217;s just making stuff up.</li>
</ul>
<li>AngularJS &#8211; K Scott&#8217;s impressions</li>
<ul>
<li>(16:36) Jon asks K Scott about his recent experiences with Angular. K Scott says that most things are easy, but hard things get complex, so he&#8217;s been reading the source code. He says the source code is mind bending. There are a lot of different ways to accomplish something &#8211; binding, watching, raising events, etc. &#8211; and it&#8217;s hard to know what&#8217;s going to work.</li>
<li>(18:33) Jon refers to the Ember / Angular Cage Match at NDC and how Angular worked great until it was time for a directive, and that got trickier. K Scott says there&#8217;s room for some polish on the Angular API. For instance, there are 3 or 4 ways to register a service. </li>
<li>(19:40) Jon asks K Scott if he&#8217;s used Ember and how he&#8217;d compare them. K Scott says he&#8217;s invested Angular and hasn&#8217;t had time to dig into Ember. He says Ember seems to provide more of a path for users, whereas Angular seems more tacked together.</li>
<li>(21:02) Kevin asks how much people become locked into a front end framework. K Scott say</li>
<li>(22:00) Scott K says most of the complaints about Angular are around changes to the API and documentation over time. </li>
<li>(22:48) Scott K says it seems like Ember examples generally require more code. The guys discuss the balance of declarative code vs. magic that sometimes goes off the rails. </li>
<li>K Scott says he sometimes gets flashbacks to ASP.NET Web Forms controls. Kevin mentions HTCs in Internet Explorer and Jon says it seems like things are coming back around to that kind of thing with web components. K Scott says there are pretty good separation of concerns to directives, but directives can be really hard to extend &#8211; you want to tweak one thing and pretty soon you&#8217;re reimplementing a lot more than you wanted to. </li>
</ul>
<li>Document Databases</li>
<ul>
<li>(26:36) Jon says he got to use Redis on a project and talks about his experiences. K Scott&#8217;s been using Mongo for a hospital system. Kevin says he hears people complain about Mongo, K Scott says performance and diagnostics can be frustrating. </li>
<li>(28:53) Kevin&#8217;s used it for Greater Than Parts and at his new job. He says the biggest mind shift is in how you model things. Jon says that was the biggest thing he learned &#8211; it&#8217;s not just a pile of documents, you still need to model things. K Scott says migrations and configuration management are important.</li>
<li>(31:39) Kevin asks K Scott how they&#8217;re working with lack of transactional integrity. K Scott says fortunately not, everything&#8217;s bulk loaded in this application.</li>
</ul>
<li>Kevin&#8217;s new job at Brandcast</li>
<ul>
<li>(32:26) Jon asks Kevin about the new job. Kevin&#8217;s working at Brandcast. Their mission is to make it really easy for people to set up a web presence that works well on multiple devices without any technical background. It&#8217;s a small shop running Node and Backbone. Kevin&#8217;s gone from being the young guy at his old company to the old guy at the new job.</li>
<li>(33:47) Jon asks Kevin about the process and structure there. Kevin says there&#8217;s a test server, but they&#8217;re pretty aggressive with continuous deployment.</li>
<li>(34:39) Jon asks if they&#8217;re using frameworks on top of Backbone. Kevin&#8217;s used Marionette, They&#8217;re using Backbone Layout Manager and Supermodel.</li>
</ul>
<li>HerdingCode.com Operations Report</li>
<ul>
<li>(35:36) Jon gives an update on the Herding Code website and hosting setup. We&#8217;ve been running for over five years on an el cheapo WordPress account.</li>
<li>(37:00) Jon&#8217;s been using CloudFlare to do some front-end caching and security blocking.</li>
<li>(37:50) Jon talks about some of the security things he&#8217;s set up, including a plugin to lockout IPs after incorrect logins, long password and OpenID login.</li>
<li>(38:33) The new release of WordPress uses MediaElement.js to use HTML5 audio with Flash / Silverlight fallback, and Jon extended that using some JavaScirpt to show a play indicator in the browser tab when audio elements are playing.</li>
<li>(39:51) There&#8217;s a WordPress plugin to show a mobile friendly theme.</li>
<li>(40:50) Kevin says the times we&#8217;ve run into trouble have been CPU related. Jon talks about the different layers of caching &#8211; Cloudflare on the front end, W3 Total Cache on the backend.</li>
<li>(44:12) Scott K asks about what kind of value adds a podcast app could add, beyond just an audio player.</li>
<li>(45:58) Jon says that the only thing that does change on the site is comments, so he&#8217;s outsourced that to Disqus. Scott K and Kevin talk about how Disqus has been heading downhill by inserting stupid ads, or &quot;climbing douchebag mountain&quot; in Kevin&#8217;s words.</li>
</ul>
<li>Summer Report</li>
<ul>
<li>(49:30) Kevin asks what everyone&#8217;s done with their summers.</li>
<li>(49:37) Scott K had to update a Monorails site using the Brails engine. The biggest frustration was that in the latest rewrite, they pulled all the documentation and source for old versions &#8211; even the NuGet packages. Kevin says that&#8217;s why he&#8217;s not a fan of including package managers in deployment &#8211; things can disappear from the feed and you&#8217;re screwed. Jon tells an old story about a stored procedure that called a COM object to split comma delimited strings.</li>
<li>(53:42) Kevin got a new job and travelled to Paris and Switzerland and San Diego.</li>
<li>(54:02) Jon went to NDC, then worked on Scott Hanselman&#8217;s keynote demo at BUILD, then went on some family vacation time in New Jersey.</li>
<li>(55:21) K Scott worked a lot but says he&#8217;ll have exciting stories later. The guys congratulate him on all the press about his Pluralsight courses.</li>
</ul>
</ul>
<p>Show Links:</p>
<ul>
<li><a href="http://tirania.org/blog/archive/2013/Aug-15.html">Callbacks as our Generations&#8217; Go To Statement</a> (Miguel de Icaza)</li>
<li><a href="https://github.com/caolan/async">Async.js</a></li>
<li><a href="http://herdingcode.com/herding-code-169-tom-dale-and-rob-conery-on-the-emberjs-angularjs-cage-match-at-ndc/">Herding Code 169: Tom Dale and Rob Conery on the Ember.js / AngularJS Cage Match at NDC</a></li>
<li><a href="http://brandcast.com/">Brandcast</a></li>
<li><a href="http://www.site5.com/in.php?id=56754">Site5 hosting</a></li>
<li><a href="http://weblogs.asp.net/jgalloway/archive/2013/08/22/adding-an-audio-play-indicator-to-your-page-s-tab-with-a-few-lines-of-javascript.aspx">Adding an audio play indicator to your page&#8217;s tab with a few lines of Javascript</a></li>
<li><a href="https://www.cloudflare.com/">CloudFlare</a></li>
<li>WordPress plugin: <a href="http://wordpress.org/plugins/limit-login-attempts/">Limit Login Attempts</a></li>
<li>WordPress plugin: <a href="http://wordpress.org/plugins/w3-total-cache/">W3 Total Cache</a></li>
<li><a href="http://disqus.com/">Disqus</a></li>
<li><a href="http://blog.pluralsight.com/2013/07/09/online-educations-millionaire-teacher/">Online Education&#8217;s Millionaire Teacher</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/hE4k7PXdAU8" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-178-async-c-syntax-angularjs-document-databases-podcast-hosting-a-new-job-and-summer-vacations/feed/</wfw:commentRss>
		<slash:comments>14</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/tLAzmvHduXo/HerdingCode-0178-Discussion.mp3" fileSize="14130271" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys chat about Async, . Download / Listen: Herding Code 178: Async, C# Syntax, AngularJS, Document Databases, Podcast Hosting, A New Job and Summer Vacations Show Notes: Async: Our Generation&amp;#8217;s Goto Statement? (00:19) Jon introduces a listener </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys chat about Async, . Download / Listen: Herding Code 178: Async, C# Syntax, AngularJS, Document Databases, Podcast Hosting, A New Job and Summer Vacations Show Notes: Async: Our Generation&amp;#8217;s Goto Statement? (00:19) Jon introduces a listener question referring to . (00:52) Kevin says he thinks the Callback Hell problem is overblown. In the [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-178-async-c-syntax-angularjs-document-databases-podcast-hosting-a-new-job-and-summer-vacations/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/tLAzmvHduXo/HerdingCode-0178-Discussion.mp3" length="14130271" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0178-Discussion.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 177: Anthony vander Hoorn on Glimpse Internals</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/DNaEQf_wWqE/</link>
		<comments>http://herdingcode.com/herding-code-177-anthony-vander-hoorn-on-glimpse-internals/#comments</comments>
		<pubDate>Wed, 21 Aug 2013 22:40:19 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=604</guid>
		<description><![CDATA[At NDC, K Scott and and Jon talked to Anthony vander Hoorn about the how he and Nik built Glimpse and how it&#8217;s evolved over time. Download / Listen: Herding Code 177: Anthony vander Hoorn on Glimpse Internals Show Notes: Glimpse internals (00:50) Jon asks Anthony about the JavaScript work they&#8217;ve done to enable Glimpse. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC, K Scott and and Jon talked to Anthony vander Hoorn about the how he and Nik built Glimpse and how it&#8217;s evolved over time.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0177-NDC-Anthony-VDH.mp3">Herding Code 177: Anthony vander Hoorn on Glimpse Internals</a></p>
<audio class="wp-audio-shortcode" id="audio-604-22" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0177-NDC-Anthony-VDH.mp3?_=22" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0177-NDC-Anthony-VDH.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0177-NDC-Anthony-VDH.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Glimpse internals
<ul>
<li>(00:50) Jon asks Anthony about the JavaScript work they&#8217;ve done to enable Glimpse. Anthony starts with their initial implementation &#8211; just injecting a div into a page. He then talks about some of the issues they ran into over time with a large JavaScript download and a complex codebase to maintain.</li>
<li>(02:39) Jon asks if it&#8217;s still jQuery based. Anthony says it is, though they&#8217;ve thought of removing that dependency. It&#8217;s mostly used for click event handling. They include a scoped, local copy of jQuery to prevent any conflicts with the host page&#8217;s use of jQuery.</li>
<li>(03:50) K Scott asks about some of the impacts of injecting their Glimpse content into the DOM. Anthony discusses issues with CSS, since the host page&#8217;s resets and selectors can affect Glimpse&#8217;s display. Glimpse includes a custom CSS reset and they scope their CSS rules.</li>
<li>(05:50) K Scott asks if the shadow DOM and HTML5 specifications for widgets would help. Anthony says yes and talks about how people are doing things now using iframes and how things would be improved. Anthony compares it to the XAML concepts of the visual and logical trees.</li>
<li>(07:45) Jon asks how things have changed from just injecting a div. Anthony explains how they use another div to reserve space at the bottom of the page and introduced a message bus to allow publishing and subscribing rather than handling events and callbacks.</li>
<li>(10:33) K Scott asks about patterns used to allow for extensibility and plugins. Anthony talks about how they&#8217;ve refactored, first to separate files and then to modules.</li>
<li>(12:40) Jon asks if they&#8217;ve looked at using some common single page application frameworks or other JavaScript frameworks. Anthony says they looked at require.js, but it didn&#8217;t really buy them anything. They also looked at backbone, but again it wasn&#8217;t worth the tradeoff of download size and complexity.</li>
<li>(15:39) K Scott asks what unit testing frameworks they use. Anthony says they&#8217;ve just got a test harness at this point, but a lot of the testing is manual. They&#8217;re looking at using TestSwarm and BrowserStack to do browser testing.</li>
<li>(18:06) Jon asks about mobile browsers. Anthony explains the current mobile support that&#8217;s been in Glimpse for a while. He discusses some other features they&#8217;ve looked at in the future.</li>
</ul>
</li>
<li>Hobbies
<ul>
<li>(20:30) K Scott asks Anthony about his hobbies. Anthony talks about his new interest in growing his own food and a renewed interest in woodworking.</li>
<li>(21:55) K Scott asks Anthony about what he&#8217;s got coming up. Anthony talks about his summer conference schedule and that he&#8217;s moving to New York to keep a closer eye on Nik.</li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Anthony vander Hoorn (<a href="http://blog.anthonyvanderhoorn.com/">blog</a>, <a href="https://twitter.com/anthony_vdh">@anthony_vdh</a>)</li>
<li>NDC Session video: <a href="http://vimeo.com/68383351">Web diagnostics with a Glimpse in ASP.NET</a></li>
<li><a title="http://getglimpse.com/" href="http://getglimpse.com/">Glimpse</a></li>
<li><a href="https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html">Shadow DOM spec</a></li>
<li><a href="https://github.com/jquery/testswarm">TestSwarm</a></li>
<li><a href="http://www.browserstack.com/">BrowserStack</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/DNaEQf_wWqE" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-177-anthony-vander-hoorn-on-glimpse-internals/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/IHNgkXD9kAc/HerdingCode-0177-NDC-Anthony-VDH.mp3" fileSize="8476044" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC, K Scott and and Jon talked to Anthony vander Hoorn about the how he and Nik built Glimpse and how it&amp;#8217;s evolved over time. Download / Listen: Herding Code 177: Anthony vander Hoorn on Glimpse Internals Show Notes: Glimpse internals (00:50) Jo</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC, K Scott and and Jon talked to Anthony vander Hoorn about the how he and Nik built Glimpse and how it&amp;#8217;s evolved over time. Download / Listen: Herding Code 177: Anthony vander Hoorn on Glimpse Internals Show Notes: Glimpse internals (00:50) Jon asks Anthony about the JavaScript work they&amp;#8217;ve done to enable Glimpse. [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-177-anthony-vander-hoorn-on-glimpse-internals/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/IHNgkXD9kAc/HerdingCode-0177-NDC-Anthony-VDH.mp3" length="8476044" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0177-NDC-Anthony-VDH.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 176: Jon McCoy on Hacking .NET</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/t9y_TCDBG4w/</link>
		<comments>http://herdingcode.com/herding-code-176-jon-mccoy-on-hacking-net/#comments</comments>
		<pubDate>Wed, 07 Aug 2013 20:40:44 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=584</guid>
		<description><![CDATA[At NDC, Jon and K Scott talked to Jon  McCoy about hacking .NET and .NET developer security. Download: Herding Code 176: Jon McCoy on Hacking .NET Show Notes: Intro and NDC talks (00:30) Jon McCoy overviews his NDC talks, explaining how he got into security and some of the amazing things he&#8217;s found out about [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC, Jon and K Scott talked to Jon  McCoy about hacking .NET and .NET developer security.</p>
<p>Download: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0176-NDC-Jon-McCoy.mp3">Herding Code 176: Jon McCoy on Hacking .NET</a></p>
<audio class="wp-audio-shortcode" id="audio-584-23" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0176-NDC-Jon-McCoy.mp3?_=23" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0176-NDC-Jon-McCoy.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0176-NDC-Jon-McCoy.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Intro and NDC talks
<ul>
<li>(00:30) Jon McCoy overviews his NDC talks, explaining how he got into security and some of the amazing things he&#8217;s found out about .NET about along the way, like using Java JARs inside .NET applications.</li>
<li>(02:55) Jon McCoy says that understanding IL and how the JIT works allows him to directly use assembly code and C++ from within .NET applications.</li>
<li>(03:45) K Scott asks Jon McCoy about some of the tools he showed during his talks. Gray Dragon is a memory injection program which allows injecting code and remapping while an application&#8217;s running. Gray Wolf allows editing an application&#8217;s IL code. In his talk, he demonstrates extracting his admin password from biometrics password with six clicks.</li>
</ul>
</li>
<li>Developer security practices: obfuscation, unit tests, monitoring
<ul>
<li>(05:20) Jon G asks if obfuscation helps hide his code. Jon McCoy says it&#8217;s always reversible and there&#8217;s about a three month lag between obfuscator releases and workarounds. Just about anything that can be automated can be reversed.</li>
<li>(06:44) Jon McCoy recommends security unit tests for practices like SQL cleaning and throwing security exceptions. Monitoring for security exceptions will let you know someone&#8217;s attacking you &#8211; if someone has two years to attack you without you knowing, they&#8217;re going to get in.</li>
<li>(07:42) Attackers can target update mechanisms in desktop programs to target users throughout your enterprise. Also, the nature of .NET code makes it very difficult for antivirus software to detect when it&#8217;s doing something bad.</li>
<li>(08:30) Jon McCoy says there&#8217;s a security issue with Visual Studio in that it executes constructor code for controls as they&#8217;re loaded in the designer, so a malicious user can run code which runs under your user permissions.</li>
</ul>
</li>
<li>Securing information on your computer: crypto and passwords
<ul>
<li>(09:40) Jon McCoy talks about some of the security practices he recommends: full disk crypto with TrueCrypt, using a hardware solution like YubiKey for long passwords, and using encrypted VMs as secure containers.</li>
<li>(11:12) Jon G asks Jon McCoy what he thinks of solutions like Keepass and LastPass. K Scott asks whether OpenID and OAuth help. Jon G laments that CardSpace never took off.</li>
<li>(12:47) Jon G asks if signed code helps secure code at all. Jon McCoy says it doesn&#8217;t really, since it&#8217;s not validated.</li>
</ul>
</li>
<li>Businesses and security
<ul>
<li>(13:27) Jon G asks if Jon McCoy gets involved with forensics. Jon McCoy says he mostly works with small businesses who are being attacked or want to fix security issues.</li>
<li>(14:31) K Scott asks Jon McCoy if he deals with mobile device security. Jon McCoy discusses the security blind spots desktop and mobile developers have.</li>
<li>(15:23) Jon G asks what Jon McCoy thinks about two factor auth.</li>
<li>(16:22) Jon McCoy explains how his background as a developer helps him understand issues in a way that IT focused security experts don&#8217;t.</li>
</ul>
</li>
<li>Defending against cracks
<ul>
<li>(17:20) Jon asks about defense against cracks. Jon McCoy says the motivation behind cracks and malware shifts &#8211; sometimes the bad guys are just after a proxy network, password cracking machines, or even free cloud storage. Malware distributors can really strike it rich by owning a computer that happens to be inside a big company; they can sell that access for a lot of money. Part of fighting an attack is understanding what&#8217;s motivating the attacker.</li>
<li>(19:07) Jon G talks about targeted attacks against employees using fake, infected PDF business documents &#8211; send to enough people and a few will open it. Jon McCoy says that&#8217;s why he advocates using a hardened VM for browsing the internet as well as using different e-mail addresses so you know unsolicited e-mails to an admin e-mail can&#8217;t be valid.</li>
</ul>
</li>
<li>Resources: tools and papers
<ul>
<li>(20:13) Jon G asks for a little more information about the security tools Jon McCoy distributes on his site.</li>
<li>(20:47) Jon G asks about how Jon McCoy&#8217;s security disclosure policies. Jon McCoy says he generally keeps things secret long enough to give his clients a security advantage. He talks about a technique he used which phones home when obfuscated code is decompiled.</li>
<li>(21:51) Jon G asks Jon McCoy how he keeps up with things. Jon McCoy says things are pretty lonely, he&#8217;s off on his own most of the time. Jon G says it&#8217;s easy to forget that a lot of .NET runs on top of Win32 and COM.</li>
<li>(23:10) Jon G asks Jon McCoy for some reference for developers who are interested in learning more. Jon McCoy lists a few (referenced in the show links).</li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Jon McCoy (<a title="http://digitalbodyguard.com/" href="http://digitalbodyguard.com/">http://digitalbodyguard.com/</a>)</li>
<li>NDC Session video: <a href="http://ndcoslo.oktaset.com/t-8059">Hacking .NET(C#) Application: An Unfriendly Territory</a></li>
<li>NDC Session video: <a href="http://ndcoslo.oktaset.com/t-8058">Hacking .NET(C#) Application: Code of the Hacker</a></li>
<li><a href="http://www.yubico.com/products/yubikey-hardware/">YubiKey</a></li>
<li>Jon McCoy&#8217;s <a href="http://digitalbodyguard.com/papers.html">white papers</a>: Attack .NET at Runtime and Reflection&#8217;s Hidden Power</li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/t9y_TCDBG4w" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-176-jon-mccoy-on-hacking-net/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/7wqkRPv1mGQ/HerdingCode-0176-NDC-Jon-McCoy.mp3" fileSize="9220773" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC, Jon and K Scott talked to Jon  McCoy about hacking .NET and .NET developer security. Download: Herding Code 176: Jon McCoy on Hacking .NET Show Notes: Intro and NDC talks (00:30) Jon McCoy overviews his NDC talks, explaining how he got into securi</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC, Jon and K Scott talked to Jon  McCoy about hacking .NET and .NET developer security. Download: Herding Code 176: Jon McCoy on Hacking .NET Show Notes: Intro and NDC talks (00:30) Jon McCoy overviews his NDC talks, explaining how he got into security and some of the amazing things he&amp;#8217;s found out about [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-176-jon-mccoy-on-hacking-net/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/7wqkRPv1mGQ/HerdingCode-0176-NDC-Jon-McCoy.mp3" length="9220773" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0176-NDC-Jon-McCoy.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 175: Dominick Baier on Securing ASP.NET Web APIs and HTTP Services</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/7TrfCfKoFDM/</link>
		<comments>http://herdingcode.com/herding-code-175-dominick-baier-on-securing-asp-net-web-apis-and-http-services/#comments</comments>
		<pubDate>Mon, 29 Jul 2013 20:38:21 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=578</guid>
		<description><![CDATA[At NDC, Jon, K Scott and Rob Conery talked to Dominick Baier about HTTP API security: CORS, token based authentication and more. Download: Herding Code 175: Dominick Baier on Securing ASP.NET Web APIs and HTTP Services Show Notes: Overview of CORS and Token Based Authentication (00:17) K Scott asks Dominick about the subject of his [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC, Jon, K Scott and Rob Conery talked to Dominick Baier about HTTP API security: CORS, token based authentication and more.</p>
<p>Download: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0175-NDC-Dominick-Baier.mp3">Herding Code 175: Dominick Baier on Securing ASP.NET Web APIs and HTTP Services</a></p>
<audio class="wp-audio-shortcode" id="audio-578-24" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0175-NDC-Dominick-Baier.mp3?_=24" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0175-NDC-Dominick-Baier.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0175-NDC-Dominick-Baier.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Overview of CORS and Token Based Authentication
<ul>
<li>(00:17) K Scott asks Dominick about the subject of his talk at NDC. Dominick runs through the upcoming changes in Web API authentication, including an overview of CORS and token based authentication.</li>
<li>(03:49) Dominick explains the ability to support a separate token server in Web API and announces Authentication Server, his new open source project which provides</li>
<li>(05:13) Rob describes how he&#8217;s seen people breaking their sites and services across multiple domains and subdomains. He explains a problem he&#8217;s currently running into with older releases of Internet Explorer. Dominick explains more about how CORS works and talks about options for working with older browsers &#8211; either sticking with JSONP or putting services in the same domain.</li>
</ul>
</li>
<li>OAuth
<ul>
<li>(08:15) Jon asks how security token service relates to more well-known terms like OpenID and OAuth. Dominick explains some of the history and challenges OAuth has encountered. As a result, the OAuth spec is really just a collection of patterns rather than a strict specification.</li>
<li>(11:19) Jon asks Dominick how he implemented the OAuth spec in his Authentication Server implementation. Dominick gives examples of how the spec is very open &#8211; for instance, there are 69 occurrences of the word MAY in the spec. He says he&#8217;s been advocating for a minimum profile.</li>
<li>(12:56) K Scott asks what sort of authentication should be used with Dominick&#8217;s security token server, since OAuth isn&#8217;t an authentication mechanism. Dominick explains the interaction with security tokens.</li>
</ul>
</li>
<li>Token based security and JWT
<ul>
<li>(14:49) Jon comments on the difference in security implications between a compromised token vs. a compromised account password. Dominick says that a token binds five things together: the client, a human, an application, permissions and time. He mentions that with token based authentication you can outsource the security mechanism &#8211; passwords, certificates, etc. &#8211; and talks about the newly released JSON Web Token (JWT) handler.</li>
<li>(15:50) K Scott asks for some specifics about the JWT handler.</li>
<li>(16:27) K Scott asks for more information about Dominick&#8217;s talk.</li>
</ul>
</li>
<li>Roles vs. Claims
<ul>
<li>(17:14) Jon asks about the difference between roles and claims. Dominick explains that a role is just a very simple claim: are you in a role or not? Claims move from a simple boolean to more of a name / value pair</li>
<li>(18:31) Jon asks what the average developer needs to know about Windows Identity Foundation.</li>
</ul>
</li>
<li>Photography and wrap-up
<ul>
<li>(19:02) K Scott asks Dominick about the photos section on his site and comments on how they&#8217;re just about all black and white. Dominick</li>
<li>(20:52) K Scott asks Dominick what he&#8217;s got coming up. Dominick says he&#8217;s been heads down on the Authentication Server release.</li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Dominick Baier (<a title="http://leastprivilege.com/" href="http://leastprivilege.com/">http://leastprivilege.com/</a>, <a title="https://twitter.com/leastprivilege" href="https://twitter.com/leastprivilege">@leastprivilege</a>)</li>
<li>NDC Session video: <a href="http://ndcoslo.oktaset.com/t-8057">Securing ASP.NET Web APIs and HTTP Services</a></li>
<li><a href="http://thinktecture.github.io/">Thinktecture IdentityServer</a></li>
<li>Eran Hammer: <a href="http://hueniverse.com/2012/07/oauth-2-0-and-the-road-to-hell/">OAuth 2.0 and the Road to Hell</a></li>
<li>Dominick&#8217;s photo blog: <a title="http://photos.leastprivilege.com/" href="http://photos.leastprivilege.com/">http://photos.leastprivilege.com/</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/7TrfCfKoFDM" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-175-dominick-baier-on-securing-asp-net-web-apis-and-http-services/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/DPapvRKawQo/HerdingCode-0175-NDC-Dominick-Baier.mp3" fileSize="7795719" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC, Jon, K Scott and Rob Conery talked to Dominick Baier about HTTP API security: CORS, token based authentication and more. Download: Herding Code 175: Dominick Baier on Securing ASP.NET Web APIs and HTTP Services Show Notes: Overview of CORS and Tok</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC, Jon, K Scott and Rob Conery talked to Dominick Baier about HTTP API security: CORS, token based authentication and more. Download: Herding Code 175: Dominick Baier on Securing ASP.NET Web APIs and HTTP Services Show Notes: Overview of CORS and Token Based Authentication (00:17) K Scott asks Dominick about the subject of his [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-175-dominick-baier-on-securing-asp-net-web-apis-and-http-services/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/DPapvRKawQo/HerdingCode-0175-NDC-Dominick-Baier.mp3" length="7795719" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0175-NDC-Dominick-Baier.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 174: Paul Stack on automating Windows configuration management with Puppet and PowerShell</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/fFnsYAE3E1Q/</link>
		<comments>http://herdingcode.com/herding-code-174-paul-stack-on-automating-windows-configuration-management-with-puppet-and-powershell/#comments</comments>
		<pubDate>Wed, 24 Jul 2013 19:20:42 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=576</guid>
		<description><![CDATA[At NDC, K Scott and and Jon talked to Paul Stack about automating server configuration management with Puppet and PowerShell. Download: Herding Code 174: Paul Stack on automating Windows configuration managment with Puppet and PowerShell Show Notes: Intro (00:32) Paul gave a talk on Windows infrastructure management with Puppet and PowerShell. Puppet is a configuration [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC, K Scott and and Jon talked to Paul Stack about automating server configuration management with Puppet and PowerShell.</p>
<p>Download: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0174-NDC-Paul-Stack.mp3">Herding Code 174: Paul Stack on automating Windows configuration managment with Puppet and PowerShell</a></p>
<audio class="wp-audio-shortcode" id="audio-576-25" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0174-NDC-Paul-Stack.mp3?_=25" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0174-NDC-Paul-Stack.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0174-NDC-Paul-Stack.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Intro
<ul>
<li>(00:32) Paul gave a talk on Windows infrastructure management with Puppet and PowerShell. Puppet is a configuration management tool. It allows you to define a configuration management level, and Puppet will bring it to that level and keep it there.</li>
<li>(01:05) K Scott asks Paul how this relates to his continuous deployment emphasis. Paul explains how this has been part of the maturity model they&#8217;ve been using at his employer, Open Table.</li>
<li>(01:50) Paul explains how they started using Puppet in their pre-production environment of 19 VMs. Their production environment is four times that large.</li>
</ul>
</li>
<li>Some more questions about Puppet
<ul>
<li>(03:00) Jon asks how Vagrant and Chef fit in. Paul explains how Puppet, Chef and CFEngine relate.</li>
<li>(04:07) K Scott asks if it&#8217;s worthwhile to look at Puppet in a small environment with 2-3 servers. Paul says there&#8217;s an investment, so you really start seeing the rewards as things start getting more complex.</li>
<li>(05:01) K Scott asks how you define a state.</li>
<li>(06:30) K Scott asks about the client running on the target servers.</li>
<li>(06:51) Jon asks how the verification works.</li>
<li>(07:32) Jon asks if it&#8217;s possible to use Puppet in cloud environments.</li>
<li>(07:56) K Scot asks if you can use Puppet to configure developer workstations. Paul talks about GitHub&#8217;s Boxen system. Jon talks about his experiences looking at Boxen before settling on sprout-wrap.</li>
<li>(09:21) Paul mentions that Open Table just open sourced their Puppet IIS implementations.</li>
</ul>
</li>
<li>How Puppet relates to PowerShell and Chocolatey
<ul>
<li>(09:36) Jon asks what the PowerShell tie-in is, since Puppet is all Ruby based. Paul talks about the PowerShell scripts they exec from Puppet and how they use them to do things like turn Windows features on and off.</li>
<li>(11:01) K Scott asks if you could use Chocolatey with Puppet, and Paul says they&#8217;re using Chocolatey via PowerShell. Jon says that sounds useful since Chocolatey can now integrate with the Web Platform Installer, and Paul says they&#8217;re doing just that to install .NET 4 on their servers.</li>
</ul>
</li>
<li>More questions about Puppet
<ul>
<li>(11:47) Paul talks about how traditional infrastructure management runs on documentation, and how they can replace all of that using Puppet.</li>
<li>(12:58) K Scott asks if this is also useful for deployments. Paul says a deployment is just a different configuration state, so Puppet can handle that just fine.</li>
<li>(14:09) Jon asks if Puppet can handle database state.</li>
<li>(14:50) Jon asks how you handle licenses with Puppets.</li>
<li>(15:20) Jon asks how Puppet relates to Windows configuration management options. Paul says that at Open Table they&#8217;ve moved to using multiple platforms, so they need infrastructure management options that can work across all of those environments.</li>
<li>(16:30) K Scott asks what is was about Puppet that caused him to lose some hair. Paul says it&#8217;s scary to be able to write a module that makes changes to 90 servers.</li>
</ul>
</li>
<li>And some more Puppet stuff
<ul>
<li>(17:30) Jon asks if it&#8217;s possible to do automated testing with Puppet configuration and modules.</li>
<li>(18:27) K Scott asks if there&#8217;s any kind of rollback plan for Puppet.</li>
<li>(18:40) K Scott tries to ask Paul about what he does in his free time, but Paul says in his free time he writes code and changes the subject back to Puppet.</li>
<li>(19:21) Paul says he&#8217;s going to be speaking at Puppet Conf, so he&#8217;ll be speaking at a Linux administrator&#8217;s conference.</li>
<li>(20:00) K Scott asks if there&#8217;s political fallout from systems administrators who are concerned he&#8217;s trying to replace their jobs. Paul says he&#8217;s trying to free them up from repetitive tasks in their jobs so they can get more done.</li>
<li>(20:56) K Scott asks Paul about upcoming conferences he&#8217;s going to be speaking at.</li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Paul Stack (<a href="http://paulstack.co.uk/blog/">blog</a>, <a href="https://twitter.com/#!/stack72">@stack72</a>)</li>
<li>NDC Session video: <a title="http://ndcoslo.oktaset.com/t-8007" href="http://ndcoslo.oktaset.com/t-8007">Windows &#8211; Having its ass kicked by Puppet and PowerShell since 2012</a></li>
<li><a href="https://puppetlabs.com/">Puppet Labs</a></li>
<li><a href="http://boxen.github.com/">GitHub&#8217;s Boxen</a></li>
<li><a href="https://github.com/opentable/puppet-iis">Puppet-IIS</a></li>
<li><a href="http://herdingcode.com/herding-code-143-paul-stack-on-continuous-delivery/">Herding Code 143 &#8211; Paul Stack on Continuous Delivery</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/fFnsYAE3E1Q" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-174-paul-stack-on-automating-windows-configuration-management-with-puppet-and-powershell/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/OKXrJqieT-U/HerdingCode-0174-NDC-Paul-Stack.mp3" fileSize="8144645" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC, K Scott and and Jon talked to Paul Stack about automating server configuration management with Puppet and PowerShell. Download: Herding Code 174: Paul Stack on automating Windows configuration managment with Puppet and PowerShell Show Notes: Intro</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC, K Scott and and Jon talked to Paul Stack about automating server configuration management with Puppet and PowerShell. Download: Herding Code 174: Paul Stack on automating Windows configuration managment with Puppet and PowerShell Show Notes: Intro (00:32) Paul gave a talk on Windows infrastructure management with Puppet and PowerShell. Puppet is a configuration [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-174-paul-stack-on-automating-windows-configuration-management-with-puppet-and-powershell/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/OKXrJqieT-U/HerdingCode-0174-NDC-Paul-Stack.mp3" length="8144645" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0174-NDC-Paul-Stack.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 173: Laurent Bugnion on sharing code with MVVM Light in Windows 8 and Windows Phone</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/-8ZmQXoTsuo/</link>
		<comments>http://herdingcode.com/herding-code-173-laurent-bugnion-on-sharing-code-with-mvvm-light-in-windows-8-and-windows-phone/#comments</comments>
		<pubDate>Mon, 22 Jul 2013 20:16:07 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=572</guid>
		<description><![CDATA[At NDC, Jon, K Scott and and Rob Conery talked to Laurent Bugnion about XAML development, sharing code between Windows 8 and Windows Phone, and modern design. Download / Listen: Herding Code 173: Laurent Bugnion on sharing code with MVVM Light in Windows 8 and Windows Phone Show Notes: XAML vs. HTML for Windows Store [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC, Jon, K Scott and and Rob Conery talked to Laurent Bugnion about XAML development, sharing code between Windows 8 and Windows Phone, and modern design.</p>
<p>Download / Listen: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0173-NDC-Laurent-Bugnion.mp3">Herding Code 173: Laurent Bugnion on sharing code with MVVM Light in Windows 8 and Windows Phone</a></p>
<audio class="wp-audio-shortcode" id="audio-572-26" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0173-NDC-Laurent-Bugnion.mp3?_=26" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0173-NDC-Laurent-Bugnion.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0173-NDC-Laurent-Bugnion.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>XAML vs. HTML for Windows Store development
<ul>
<li>(00:40) Rob asks Laurent how often customers ask for HTML/JS based Windows Store application rather than XAML based. Laurent lists a few of the cases where people ask for HTML based work, but says the cases are very rare. Generally they&#8217;re much more productive with XAML and C#.</li>
<li>(02:49) Rob asks Laurent if he thinks this will change over time. Laurent says IDE support may affect things a little, but generally he thinks web developers don&#8217;t do desktop development because they don&#8217;t want to do desktop development &#8211; they went into web development because they wanted to develop for the web.</li>
<li>(04:09) Jon asks if Laurent sees things changing over time in XAML based development. Laurent says he sees some big changes in performance &#8211; you can get good performance out of the native controls with full designer support now. In terms of Windows 8, he&#8217;s hoping for more controls to cover some Windows 8 UI elements so they don&#8217;t require custom controls. In terms of design, he sees some cases where people are breaking some of the general Windows Store design guidelines in cases where they aren&#8217;t as user friendly. Jon says he&#8217;s seen one example of this &#8211; adding a print app bar button to applications where printing is a regular activity, even though technically the print is supposed to be accessed via the share charm. Laurent says he also sees this in search-heavy apps.</li>
</ul>
</li>
<li>Cross-platform code sharing and Portable Class Libraries
<ul>
<li>(07:46) Jon asks about Laurent&#8217;s talk on sharing code between platforms &#8211; does it work? Laurent says he&#8217;s focusing on portable class libraries &#8211; writing logic that works on Windows Phone and Windows Store, then building a UI on top of those libraries. That&#8217;s working well for him and he&#8217;s using it in production. It&#8217;s still XAML and C#, so you can also share code, too.</li>
<li>(09:26) K Scott asks about MVVM Light &#8211; is that working with Portable Class Libraries? Laurent says someone at Microsoft use a PCL port of MVVM Light as a test case, and it&#8217;s working very well. They still maintain platform specific versions of MVVM Light for people who only work on a specific platform.</li>
<li>(10:38) K Scott asks for a quick summary of what MVVM Light does.</li>
<li>(12:45) K Scott asks about some of the challenges in converting MVVM Light to a PCL. Laurent talks about some UI and platform differences.</li>
</ul>
</li>
<li>Metro and modern design
<ul>
<li>(14:21) Rob asks how you make different design decisions around &#8220;Metro&#8221; design or other alternatives. Laurent discusses the design process.</li>
<li>(16:29) Rob asks about some of the design considerations, and how you&#8217;d decide on platforms. Laurent says a default XAML application uses themes which will fit in with the host platform and operating systems, but might look at bit boring, which is why you work with a designer.</li>
<li>(18:25) Jon says the Windows Store design principles don&#8217;t prescribe a boring look, referencing the &#8220;alive with color&#8221; thing and Kelly Sommers&#8217; post about how Metro Doesn&#8217;t Have To Be Boring. Laurent says he doesn&#8217;t like the &#8220;flat design&#8221; term, preferring modern &#8211; and modern came from Bauhaus in the 1920&#8217;s, Swiss design in the 1950&#8217;s, etc. He says it&#8217;s important to go the design principles, then use your skill as a designer to apply that. There are enough apps on the Windows Phone store that getting noticed takes a good design.</li>
</ul>
</li>
<li>Hobbies
<ul>
<li>(22:09) Rob asks Laurent what he does for hobbies. Laurent lists some things that keep him busy, then talks about his fish pond. Rob tells probably the worst newt joke of all time.</li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Laruent Bugnion (<a href="http://galasoft.ch">http://galasoft.ch</a>, <a title="https://twitter.com/nikmd23" href="https://twitter.com/lbugnion">@lbugnion</a>)</li>
<li>NDC Session video: <a href="http://ndcoslo.oktaset.com/t-8158">Sharing code with MVVM Light in Windows and and Windows Phone</a></li>
<li><a href="http://mvvmlight.codeplex.com/">MVVM Light Toolkit</a></li>
<li><a href="http://msdn.microsoft.com/en-US/library/windows/apps/hh781237">Microsoft Design Principles</a></li>
<li>Kelly Sommers: <a href="http://kellabyte.com/2011/12/19/when-metro-design-falls-off-the-tracks/">When Metro Design Falls Off The Tracks</a></li>
<li><a href="http://herdingcode.com/episode-26-laurent-bugnion-on-wpf-and-silverlight/">Herding Code 26: Laurent Bugnion on WPF and Silverlight</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/-8ZmQXoTsuo" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-173-laurent-bugnion-on-sharing-code-with-mvvm-light-in-windows-8-and-windows-phone/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/lEStZiqz49c/HerdingCode-0173-NDC-Laurent-Bugnion.mp3" fileSize="8903160" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC, Jon, K Scott and and Rob Conery talked to Laurent Bugnion about XAML development, sharing code between Windows 8 and Windows Phone, and modern design. Download / Listen: Herding Code 173: Laurent Bugnion on sharing code with MVVM Light in Windows </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC, Jon, K Scott and and Rob Conery talked to Laurent Bugnion about XAML development, sharing code between Windows 8 and Windows Phone, and modern design. Download / Listen: Herding Code 173: Laurent Bugnion on sharing code with MVVM Light in Windows 8 and Windows Phone Show Notes: XAML vs. HTML for Windows Store [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-173-laurent-bugnion-on-sharing-code-with-mvvm-light-in-windows-8-and-windows-phone/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/lEStZiqz49c/HerdingCode-0173-NDC-Laurent-Bugnion.mp3" length="8903160" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0173-NDC-Laurent-Bugnion.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 172: Nik Molnar on Running an Open Source Project</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/JPqnrsjsInk/</link>
		<comments>http://herdingcode.com/herding-code-172-nik-molnar-on-running-an-open-source-project/#comments</comments>
		<pubDate>Wed, 17 Jul 2013 23:58:13 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=567</guid>
		<description><![CDATA[At NDC, Jon and K Scott talked to Nik Molnar about what he&#8217;s learned about running an open source project from his experiences with Glimpse. Download: Herding Code 172: Nik Molnar on Running an Open Source Project Show Notes: Running an open source project (00:35) Nik says he&#8217;s writing the guide he wishes he&#8217;d had [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC, Jon and K Scott talked to Nik Molnar about what he&#8217;s learned about running an open source project from his experiences with Glimpse.</p>
<p>Download: <a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0172-NDC-Nik-Molnar-on-running-an-open-source-project-and-cooking.mp3">Herding Code 172: Nik Molnar on Running an Open Source Project</a></p>
<audio class="wp-audio-shortcode" id="audio-567-27" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0172-NDC-Nik-Molnar-on-running-an-open-source-project-and-cooking.mp3?_=27" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0172-NDC-Nik-Molnar-on-running-an-open-source-project-and-cooking.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0172-NDC-Nik-Molnar-on-running-an-open-source-project-and-cooking.mp3</a></audio>
<p>Show Notes:</p>
<ul>
<li>Running an open source project
<ul>
<li>(00:35) Nik says he&#8217;s writing the guide he wishes he&#8217;d had a few years ago.</li>
<li>(01:06) K Scott asks him for one big thing he&#8217;s learned. Nik talks about the importance of public communication.</li>
<li>(01:36) Jon mentions the difference between open source code and open source projects, and Nik mentions some of the different documented governance models for open source projects, citing OSS Watch and YUI. This helps</li>
<li>(03:15) K Scott asks if Glimpse presents unique challenges because there&#8217;s a plugin ecosystem. Nik says they used to just see code contributors and plugin authors, but now he sees contributors with a much broader perspective, citing Peter Hahndorf&#8217;s documentation contributions.</li>
<li>(4:54) Jon asks Nik how he defines success for an open source project. Nik says it depends on the project founder&#8217;s goals. He says project popularity isn&#8217;t important to him personally, it&#8217;s helping users.</li>
<li>(5:50) K Scott asks Nik about his slide that says Avoid Bikeshedding. Nik explains Parkinson&#8217;s law of triviality and how it affects open source.</li>
<li>(08:58) Jon asks Nik if he thinks roadmaps are important. Nik says this an important part of the public communication he mentioned earlier. Jon says he&#8217;s found that involving people in decisions that will affect them early really important for any kind of project, open source or not. Nik explains how this is handled in the meritocratic model.</li>
</ul>
</li>
<li>Cooking&#8217;s like programming
<ul>
<li>(11:12) K Scott asks Nik about the latest big dish he&#8217;s prepared.</li>
<li>(12:45) Nik talks about the parallels between programming and cooking &#8211; both have rules that must be followed, but a lot of room for creativity.</li>
<li>(13:35) Jon talks about a professional chef textbook he got from the library (Nik tells him it&#8217;s from the Culinary Institute of America). Jon says he saw some parallels between things like food sanitation and source control &#8211; you need to start with fundamentals, but then you can apply them in creative ways. Nik describes some further parallels: cooking math and resourcing, the kitchen brigade system and project management.</li>
<li>(15:12) Nik talks about the ALT.NET of cooking and the focus on basic, classic skills.</li>
</ul>
</li>
<li>What&#8217;s next
<ul>
<li>(16:08) K Scott asks Nik about what&#8217;s next for him. Nik talks about their latest release and the Heads Up Display. He talks about how simplified web publishing has led to a big increase in documentation contributions. K Scott raves about the UI design.</li>
<li>(18:45) Jon asks what&#8217;s new with semantic versioning since they last talked.</li>
<li>(19:18) Jon asks what&#8217;s next for Glimpse. Nik says it&#8217;ll be decided by the community, but he&#8217;s expecting they&#8217;ll want Web API support.</li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Nik Molnar (<a href="http://nikcodes.com/">nikcodes.com</a>, <a title="https://twitter.com/nikmd23" href="https://twitter.com/nikmd23">nikmd23</a><a href="https://twitter.com/nikmd23">@nikmd23</a>)</li>
<li>NDC Session video: <a href="http://vimeo.com/68390481">Running OSS Projects: From Zero to Sixty</a></li>
<li><a href="http://getglimpse.com/">Glimpse</a></li>
<li><a href="http://www.oss-watch.ac.uk/resources/governanceModels">OSS Watch Governance Models</a></li>
<li><a href="http://www.oss-watch.ac.uk/resources/meritocraticGovernanceModel">Meritocratic Governance Model</a></li>
<li><a href="https://github.com/yui/yui3/wiki/Contributor-Model">YUI Contributor Model</a></li>
<li><a href="https://github.com/hahndorf/GlimpseDocs2">Peter Hahndorf&#8217;s Glimpse document contributions</a></li>
<li><a href="http://en.wikipedia.org/wiki/Parkinson%27s_Law_of_Triviality">Parkinson&#8217;s law of triviality (bikeshedding)</a></li>
<li><a href="http://bikeshed.com/">Bikeshed.com</a></li>
<li><a href="http://www.amazon.com/gp/product/0470421355?ie=UTF8&amp;camp=213733&amp;creative=393185&amp;creativeASIN=0470421355&amp;linkCode=shr&amp;tag=jongall-20&amp;=books&amp;qid=1374104548&amp;sr=1-1">The Professional Chef</a> (Culinary Institute)</li>
<li><a href="http://herdingcode.com/herding-code-160-glimpse-1-0-release-and-semantic-release-notes-with-nik-molnar-and-anthony-vander-hoorn/">Herding Code 160: Glimpse 1.0 release and Semantic Release Notes</a><a href="http://herdingcode.com/herding-code-160-glimpse-1-0-release-and-semantic-release-notes-with-nik-molnar-and-anthony-vander-hoorn/">Herding Code 160: Glimpse 1.0 release and Semantic Release <b>&#8230;</b></a></li>
<li><a href="http://herdingcode.com/herding-code-124-anthony-van-der-hoorn-and-nik-molnar-on-glimpse/">Herding Code 124: Anthony van der Hoorn and Nik Molnar on Glimpse</a><b></b></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/JPqnrsjsInk" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-172-nik-molnar-on-running-an-open-source-project/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/Cp3qQiDpD-s/HerdingCode-0172-NDC-Nik-Molnar-on-running-an-open-source-project-and-cooking.mp3" fileSize="7726985" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC, Jon and K Scott talked to Nik Molnar about what he&amp;#8217;s learned about running an open source project from his experiences with Glimpse. Download: Herding Code 172: Nik Molnar on Running an Open Source Project Show Notes: Running an open source </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC, Jon and K Scott talked to Nik Molnar about what he&amp;#8217;s learned about running an open source project from his experiences with Glimpse. Download: Herding Code 172: Nik Molnar on Running an Open Source Project Show Notes: Running an open source project (00:35) Nik says he&amp;#8217;s writing the guide he wishes he&amp;#8217;d had [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-172-nik-molnar-on-running-an-open-source-project/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/Cp3qQiDpD-s/HerdingCode-0172-NDC-Nik-Molnar-on-running-an-open-source-project-and-cooking.mp3" length="7726985" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0172-NDC-Nik-Molnar-on-running-an-open-source-project-and-cooking.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 171: Magnus Martensson talks Continuous Delivery on Windows Azure and the Global Windows Azure Bootcamp</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/0U09AgKeUsw/</link>
		<comments>http://herdingcode.com/herding-code-171-magnus-martensson-talks-continuous-delivery-on-windows-azure-and-the-global-windows-azure-bootcamp/#comments</comments>
		<pubDate>Mon, 08 Jul 2013 23:14:15 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=563</guid>
		<description><![CDATA[At NDC, Jon and K Scott talked to Magnus Martensson about continuous delivery on the Windows Azure platform and the Global Windows Azure Bootcamp he helped run. Download / Listen: Herding Code 171: Magnus Martensson talks Continuous Deliverery on Windows Azure and the Global Windows Azure Bootcamp Show Notes: Continuous Delivery on Windows Azure (00:20) [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC, Jon and K Scott talked to Magnus Martensson about continuous delivery on the Windows Azure platform and the Global Windows Azure Bootcamp he helped run.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0171-NDC-Magnus-Martensson-on-Azure.mp3">Herding Code 171: Magnus Martensson talks Continuous Deliverery on Windows Azure and the Global Windows Azure Bootcamp</a>
<p>Show Notes:</p>
<ul>
<li>Continuous Delivery on Windows Azure
<ul>
<li>(00:20) Jon asks Magnus about what he&#8217;ll be speaking about at NDC. </li>
</ul>
<ul>
<li>(00:45) Jon asks about the difference between continuous integration and continuous delivery. Magnus says continuous integration just runs tests and builds, but it doesn&#8217;t go anywhere; continuous delivery actually deploys the code to an environment &#8211; staging, possibly production. </li>
<li>(02:06) K Scott asks about Azure support for continuous delivery. Magnus says you can do it with cloud services, but there&#8217;s a delay; with Windows Azure Web Sites the deployment is extremely fast and easy. </li>
<li>(03:00) K Scott asks about the steps of setting up continuous delivery for a web application for deployment including non-git source control. Magnus talks about the setup, new offerings for dev / test scenarios, and asks why anyone wouldn&#8217;t integrate this into their development process. </li>
<li>(05:02) Jon asks what recent Azure changes were announced. Magnus discusses both pricing and policy changes for MDSN subscriptions. </li>
<li>(05:47) Jon asks what some of Magnus&#8217; demos include. Magnus talks about using your own TFS service, other git repos, etc. He talks about a his secret demo &#8211; the non-Microsoft demo that uses TeamCity, NUnit, and GitHub. </li>
<li>(07:45) K Scott mentions all the new Azure SDK language support. </li>
</ul>
</li>
<li>Migrating to the cloud and surprise business transformations
<ul>
<li>(07:54) Jon asks how this relates to Magnus&#8217; work. Magnus works at Active Solution, which employs both of Sweden&#8217;s Azure MVP&#8217;s. Cloud development is really a hot field in Sweden right now. </li>
<li>(08:45) Jon asks about some common challenges. Magnus says the biggest thing is learning the platforms &#8211; there are a lot of architectural and strategic things they haven&#8217;t even considered. </li>
<li>(10:23) K Scott asks if businesses think they can&#8217;t move to the cloud because they have custom processes or protocols. </li>
<li>(10:59) Jon asks if they often do hybrid solutions. Magnus says that multitenant solutions are common, and the process allows companies to transform themselves from product to service companies. </li>
</ul>
</li>
<li>Global Windows Azure Bootcamp
<ul>
<li>12:21 Jon asks about the Global Windows Azure Bootcamp that Magnus helped organize. Magnus tells the story of how they started talking to a few MVPs and things spiraled out of control. In the end they had all timezones, 92 locations, over 5000 attendees. They had some big turnout in some unexpected locations: Nepal, Brazil, Africa. </li>
<li>14:08 Jon asks what happened at the event. Magnus talks about the content in the Windows Azure Training Kit and a shared demo with nearly 5000 coordinated worker roles in a giant render farm passed the rendering power of some Pixar films. </li>
<li>(16:13) Jon asks about the relationship with Microsoft for the event. It was community run, but Microsoft helped out with things like attendee giveaways. </li>
<li>(16:52) Jon asks if they&#8217;ll do this again. Magnus says yes and talks about some of the scaling challenges. He calls out the sponsors, who gave away $18 million in license giveaways. It scales because each location is independent, so each location just needs to run one event.&#160; </li>
<li>(18:36) Jon says this reminds him of Corey Haines&#8217; Global Day of Code Retreat. </li>
<li>(18:52) Jon asks what Magnus is up to next. Magnus says he&#8217;s moving and calls out the upcoming CloudBurst conference &#8211; in Sweden and live streamed. </li>
</ul>
</li>
</ul>
<p>Show Links: </p>
<ul>
<li>Magnus Martensson (<a href="http://magnusmartensson.com/">http:??magnusmartensson.com?</a>, <a href="https://twitter.com/noopman">@noopman</a>) </li>
<li>NDC Session video: <a href="http://ndcoslo.oktaset.com/t-8167">Continuous Delivery Zen on Windows Azure</a> </li>
<li><a href="http://activesolution.se/">Active Solution</a> </li>
<li><a href="http://globalwindowsazure.azurewebsites.net/">Global Windows Azure Bootcamp</a></li>
<li><a href="http://geekswithblogs.net/asmith/archive/2012/10/22/151043.aspx">256 Worker Role 3D Rendering Demo is now a Lab on my Azure Course</a> </li>
<li><a href="http://globalday.coderetreat.org/">Global Day of Coderetreat</a> </li>
<li><a href="http://www.azureug.se/CloudBurst2013">CloudBurst 2013</a> </li>
<li><a href="http://herdingcode.com/herding-code-128-corey-haines-on-global-day-of-coderetreat-december-3/">Herding Code 128 &#8211; Corey Haines on Global Day of Coderetreat</a> </li>
<li><a href="http://herdingcode.com/herding-code-143-paul-stack-on-continuous-delivery/">Herding Code 143 &#8211; Paul Stack on Continuous Delivery</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/0U09AgKeUsw" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-171-magnus-martensson-talks-continuous-delivery-on-windows-azure-and-the-global-windows-azure-bootcamp/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/WwLG-jlCky0/HerdingCode-0171-NDC-Magnus-Martensson-on-Azure.mp3" fileSize="9724927" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC, Jon and K Scott talked to Magnus Martensson about continuous delivery on the Windows Azure platform and the Global Windows Azure Bootcamp he helped run. Download / Listen: Herding Code 171: Magnus Martensson talks Continuous Deliverery on Windows </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC, Jon and K Scott talked to Magnus Martensson about continuous delivery on the Windows Azure platform and the Global Windows Azure Bootcamp he helped run. Download / Listen: Herding Code 171: Magnus Martensson talks Continuous Deliverery on Windows Azure and the Global Windows Azure Bootcamp Show Notes: Continuous Delivery on Windows Azure (00:20) [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-171-magnus-martensson-talks-continuous-delivery-on-windows-azure-and-the-global-windows-azure-bootcamp/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/WwLG-jlCky0/HerdingCode-0171-NDC-Magnus-Martensson-on-Azure.mp3" length="9724927" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0171-NDC-Magnus-Martensson-on-Azure.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 170: NDC Geekout with Richard Campbell and Rob Conery</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/VdPFEkUl-Cs/</link>
		<comments>http://herdingcode.com/herding-code-170-ndc-geekout-with-richard-campbell-and-rob-conery/#comments</comments>
		<pubDate>Fri, 21 Jun 2013 21:19:23 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=561</guid>
		<description><![CDATA[At NDC, Jon and Rob Conery quizzed Richard Campbell about books, nanotech, graphene, cooking, travel, explosions and more. Download / Listen: Herding Code 170: NDC Geekout with Richard Campbell and Rob Conery Show Notes: Cryptonomicon and other Neal Stephenson books (00:55) Rob Conery says he&#8217;s been rereading Cryptonomicon. Richard, Jon and Rob talk about their [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC, Jon and Rob Conery quizzed Richard Campbell about books, nanotech, graphene, cooking, travel, explosions and more.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0170-NDC-Geekout-with-Richard-Campbell.mp3">Herding Code 170: NDC Geekout with Richard Campbell and Rob Conery</a> <audio class="wp-audio-shortcode" id="audio-561-28" preload="none" style="width: 100%; visibility: hidden;" controls="controls"><source type="audio/mpeg" src="http://herdingcode.com/wp-content/uploads/HerdingCode-0170-NDC-Geekout-with-Richard-Campbell.mp3?_=28" /><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0170-NDC-Geekout-with-Richard-Campbell.mp3">http://herdingcode.com/wp-content/uploads/HerdingCode-0170-NDC-Geekout-with-Richard-Campbell.mp3</a></audio></p>
<p>Show Notes:</p>
<ul>
<li>Cryptonomicon and other Neal Stephenson books
<ul>
<li>(00:55) Rob Conery says he&#8217;s been rereading Cryptonomicon. Richard, Jon and Rob talk about their favorite Neal Stephenson books. </li>
</ul>
</li>
<li>Nanotech
<ul>
<li>(02:26) Richard mentions nanotech in the context of Diamond Age. Jon asks Richard what&#8217;s going on with nanotech. </li>
<li>(03:31) Richard describes graphene &#8211; what it is, how it&#8217;s made, and what we can do with it. </li>
</ul>
</li>
<li>BBQ!
<ul>
<li>(07:38) Jon asks Richard what he uses to barbecue things. No surprise, he&#8217;s got three different BBQ devices, electrical modifications and Excel spreadsheets. Intense food chemistry discussions ensue. </li>
</ul>
</li>
<li>Turing and Electromechanical computing
<ul>
<li>(11:32) Rob talks about the Enigma machine discussion in Cryptonomicon. Jon and Richard talk about how the Enigma code was broken. </li>
</ul>
</li>
<li>Quantum computing
<ul>
<li>(14:37) Jon asks Richard about quantum encryption and computing. Richard explains&#160; quantum effects with the two slit experiment. </li>
</ul>
</li>
<li>My Drunk Kitchen
<ul>
<li>(18:10) Jon asks Richard how it came to pass that he hosted an episode of My Drunk Kitchen. Richard tells the history of My Drunk Kitchen and how french toast turned into some kind of sourdough frittata. </li>
</ul>
</li>
<li>Home brewing and stills
<ul>
<li>(22:37) Jon asks Richard if he&#8217;s done any home brewing. Richard owns a still but has not used it in anger yet. Richard lists the dangers of moonshining and one-upmanship contests with Carl Franklin.&#160; </li>
</ul>
</li>
<li>The geekiest house ever
<ul>
<li>(25:38) Jon asks how Richard handles his intensely instrumented house and Rob asks for more details about Richard&#8217;s house. Richard says he&#8217;s only been raided as a suspected drug grow-op house once and talks about all the server infrastructure he&#8217;s got at his house. </li>
<li>(29:50) Rob asks about Richard&#8217;s generator setup. </li>
</ul>
</li>
<li>Modern media management
<ul>
<li>(31:23) Jon asks Richard how he handles the hardest problem in modern life: managing media. Richard talks about his media shares, networking, media center, and how he gets all the good stuff. </li>
</ul>
</li>
<li>Favorite books
<ul>
<li>(34:28) Jon asks Richard for five book recommendations. Richard recommends Existence, Daemon and Freedom. Jon and Richard discuss the believability of Daemon and Richard talks about how some authors are good story tellers, others are good universe builders, and authors who do both are incredibly rare. Richard also recommends Lean Startup and The Phoenix Project. Rob recommends Ender&#8217;s Game and talks about Arthur C. Clarke; Jon says he liked The Fiction Author&#8217;s Guide To Time Travel and that got him into Heinlein. Rob and Richard liked Dan Simmons &#8211; especially Hyperion. Rob and Richard discuss the difficulty of ending a story well and Richard says Harry Potter put The Matrix to shame in that regard. </li>
</ul>
</li>
<li>Travel tips
<ul>
<li>(41:45) Jon asks Richard for some travel tips. Richard starts with recommending local SIM cards and knowing your power plugs. </li>
<li>(42:33) Richard recommends beating jet lag using light and timing your meals. Rob has been pretty happy with some homeopathic jetlag whatsihoosie and likes baking soda too. </li>
<li>(45:08) Jon likes compression bags and big batteries with USB outputs. Jon and Richard discuss the frustration of the VGA to HDMI conversion. </li>
<li>(47:33) Rob always maps out the nearest Apple store before travelling. </li>
<li>(47:57) Jon has USB video adapters for both VGA and HDMI and figures he&#8217;s covered. </li>
<li>(48:15) Richard mentions wireless video in Windows 8.1. Rob mentions AirPlay and Jon talks about Windows PlayTo, but they&#8217;re all too fiddly for now. </li>
</ul>
</li>
<li>Pretend ending
<ul>
<li>If you don&#8217;t like background noise, this is the end. Bye! </li>
</ul>
</li>
<li>More stuff in the outtake
<ul>
<li>We had some more discussion that&#8217;s pretty hard to hear because of background noise, but we&#8217;re throwing it in just in case you want to listen through it. </li>
<li>(50:44) Rob talks about Benford&#8217;s Law. Rob talks about the application in detecting voter fraud, Rob talks about the application in counterespionage in Cryptonomicon. </li>
<li>(52:14) Rob wants to talk about submarines. Jon talks about some of the complexities of torpedo seek patterns. Rob talks about Russian supercavitation and mine hunting. Jon talks about old Russian wing-in-ground effect vehicles and ski-ramp carriers. </li>
<li>(55:30) Richard talks about rail guns, which reminds Jon of fuel air explosives. Jon and Richard tell FAE stories. </li>
<li>(58:47) Rob tells a story about big explosions at a YMCA camp on Catalina Island. </li>
</ul>
</li>
</ul>
<p>Show Links: </p>
<ul>
<li>Richard Campbell (<a href="https://twitter.com/richcampbell">@richcampbell</a>) </li>
<li>Rob Conery (<a href="http://twitter.com/robconery">@robconery</a>, <a href="http://wekeroad.com">http://wekeroad.com</a>) </li>
<li><a href="http://www.ndcoslo.com/">Norwegian Developers Conference (NDC)</a> </li>
<li><a href="http://en.wikipedia.org/wiki/Graphene">Graphene</a> </li>
<li><a href="http://en.wikipedia.org/wiki/Enigma_machine">Enigma machine</a>&#160; </li>
<li><a href="http://www.youtube.com/watch?v=uSXQNred3is">My Drunk Kitchen: Vancouver&#8230;&quot;French Toast&quot;?</a> (contains drinking and cursing and a little cooking) </li>
<li>Books
<ul>
<li><a href="http://www.amazon.com/gp/product/B000FC11A6?ie=UTF8&amp;camp=213733&amp;creative=393177&amp;creativeASIN=B000FC11A6&amp;linkCode=shr&amp;tag=jongall-20&amp;=books&amp;qid=1371791692&amp;sr=1-1">Cryptonomicon</a> by <a href="http://www.amazon.com/Neal-Stephenson/e/B000APS8L8/?_encoding=UTF8&amp;camp=213733&amp;creative=393193&amp;linkCode=shr&amp;tag=jongall-20&amp;id=1371791692&amp;sr=1-2-ent">Neal Stephenson</a> </li>
<li><a href="http://www.amazon.com/gp/product/B004IK8PLE?ie=UTF8&amp;camp=213733&amp;creative=393177&amp;creativeASIN=B004IK8PLE&amp;linkCode=shr&amp;tag=jongall-20">The Code Book: The Science of Secrecy</a> by Simon Singh </li>
<li><a href="http://www.amazon.com/gp/product/B0079XPMQS?ie=UTF8&amp;camp=213733&amp;creative=393177&amp;creativeASIN=B0079XPMQS&amp;linkCode=shr&amp;tag=jongall-20">Existence</a> by David Brin </li>
<li><a href="http://www.amazon.com/gp/product/B003QP4NPE?ie=UTF8&amp;camp=213733&amp;creative=393177&amp;creativeASIN=B003QP4NPE&amp;linkCode=shr&amp;tag=jongall-20&amp;=digital-text&amp;qid=1371847361&amp;sr=1-1&amp;keywords=daemon">Daemon</a> and <a href="http://www.amazon.com/gp/product/B002VUFKDY/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B002VUFKDY&amp;linkCode=as2&amp;tag=jongall-20">Freedom</a> by Daniel Suarez </li>
<li><a href="http://www.amazon.com/gp/product/B004J4XGN6/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B004J4XGN6&amp;linkCode=as2&amp;tag=jongall-20">Lean Startup</a> by Eric Ries </li>
<li><a href="http://www.amazon.com/gp/product/B00AZRBLHO?ie=UTF8&amp;camp=213733&amp;creative=393177&amp;creativeASIN=B00AZRBLHO&amp;linkCode=shr&amp;tag=jongall-20&amp;=digital-text&amp;qid=1371847601&amp;sr=1-1&amp;keywords=the+phoenix+project">The Phoenix Project</a> by Gene Kim, Kevin Behr, George Spafford </li>
<li><a href="http://www.amazon.com/gp/product/1421400820?ie=UTF8&amp;camp=213733&amp;creative=393185&amp;creativeASIN=1421400820&amp;linkCode=shr&amp;tag=jongall-20&amp;=aps&amp;qid=1371847713&amp;sr=1-1-catcorr">Time Travel: A Writer&#8217;s Guide to the Real Science of Plausible Time Travel</a> by Paul Nahin </li>
<li><a href="http://www.amazon.com/gp/product/0345330129?ie=UTF8&amp;camp=213733&amp;creative=393177&amp;creativeASIN=0345330129&amp;linkCode=shr&amp;tag=jongall-20&amp;=books&amp;qid=1371847798&amp;sr=1-6">The Door Into Summer</a> by Robert Heinlein </li>
<li><a href="http://www.amazon.com/gp/product/B003G4W49C?ie=UTF8&amp;camp=213733&amp;creative=393177&amp;creativeASIN=B003G4W49C&amp;linkCode=shr&amp;tag=jongall-20&amp;=books&amp;qid=1371847856&amp;sr=1-1">Ender&#8217;s Game</a> by Orson Scott Card </li>
<li><a href="http://www.amazon.com/gp/product/B004G60EHS?ie=UTF8&amp;camp=213733&amp;creative=393177&amp;creativeASIN=B004G60EHS&amp;linkCode=shr&amp;tag=jongall-20&amp;=books&amp;qid=1371847905&amp;sr=1-1">Hyperion</a> by Dan Simmons </li>
</ul>
</li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/VdPFEkUl-Cs" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-170-ndc-geekout-with-richard-campbell-and-rob-conery/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/ctHN8LS-odM/HerdingCode-0170-NDC-Geekout-with-Richard-Campbell.mp3" fileSize="30254233" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC, Jon and Rob Conery quizzed Richard Campbell about books, nanotech, graphene, cooking, travel, explosions and more. Download / Listen: Herding Code 170: NDC Geekout with Richard Campbell and Rob Conery Show Notes: Cryptonomicon and other Neal Steph</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC, Jon and Rob Conery quizzed Richard Campbell about books, nanotech, graphene, cooking, travel, explosions and more. Download / Listen: Herding Code 170: NDC Geekout with Richard Campbell and Rob Conery Show Notes: Cryptonomicon and other Neal Stephenson books (00:55) Rob Conery says he&amp;#8217;s been rereading Cryptonomicon. Richard, Jon and Rob talk about their [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-170-ndc-geekout-with-richard-campbell-and-rob-conery/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/ctHN8LS-odM/HerdingCode-0170-NDC-Geekout-with-Richard-Campbell.mp3" length="30254233" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0170-NDC-Geekout-with-Richard-Campbell.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 169: Tom Dale and Rob Conery on the EmberJS / AngularJS Cage Match at NDC</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/cJq_RjUOL1w/</link>
		<comments>http://herdingcode.com/herding-code-169-tom-dale-and-rob-conery-on-the-emberjs-angularjs-cage-match-at-ndc/#comments</comments>
		<pubDate>Tue, 18 Jun 2013 00:47:04 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=553</guid>
		<description><![CDATA[At NDC, Jon and K Scott sat down with Tom Dale (co-founder of Ember.js) and Rob Conery to recap their cage match battle, compare Ember.js and AngularJS, and hear from Tom about where Ember.js is headed. Download / Listen: Herding Code 169: Tom Dale and Rob Conery on the Ember.js / AngularJS Cage Match at [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>At NDC, Jon and K Scott sat down with Tom Dale (co-founder of Ember.js) and Rob Conery to recap their cage match battle, compare Ember.js and AngularJS, and hear from Tom about where Ember.js is headed.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0169-NDC-Ember-Angular-Cage-Match.mp3">Herding Code 169: Tom Dale and Rob Conery on the Ember.js / AngularJS Cage Match at NDC</a>
<p>Show Notes:</p>
<ul>
<li>Intro </li>
<ul>
<li>(00:18) K Scott and Rob asks Tom and Rob to introduce themselves and recap the Cage Match. </li>
<li>(01:22) Tom describes the challenge and thanks Peter Cooper for moderating. Rob describes the scenario &#8211; start with installation and creating a new project, then move to routing and navigation between views. </li>
</ul>
<li>Demo vs. Reality</li>
<ul>
<li>(02:28) Rob says it&#8217;s fun to do a demo with Angular, but once you need to do more structured things you have to start over and reimplement with modules, etc. </li>
<li>(02:43) Tom says that seeing the TekPub screencast about AngularJS informed a lot of their design for Ember.js. The result is a framework that gives you the same simplicity in getting started, but also grows with your application pretty easily. </li>
</ul>
<li>You Just Don&#8217;t Do That</li>
<ul>
<li>(03:22) K Scott asks if they pretty much match up if you&#8217;re looking at a feature checklist, and if it&#8217;s more about how you implement things. Rob says AngularJS is much more component based and talks about some things that came up during the cage match which were tricky in Angular, because &quot;you just don&#8217;t do that&quot;. </li>
<li>(04:18) Jon asks if there&#8217;s an overall effect to how you build your application because it&#8217;s just not how the framework works. Tom says it&#8217;s unacceptable when your designer comes to you with a user interaction design for you to tell them it&#8217;s just too hard to do in your framework, so you won&#8217;t do it. As framework developers, they spend a lot of effort on composability. Rob says that he sees Ember.js as more prescriptive, while AngularJS provides more building blocks. Rob says it seems like Rails to him, in that it just goes a lot better for you if you give in and go with the framework&#8217;s opinions. </li>
<li>(06:13) Jon asks about how customization works in Ember.js, compared with Angular&#8217;s use of directives and filters. Tom says that&#8217;s done via helpers, referencing an example from the cage match. </li>
</ul>
<li>Client-side MVC implementation and The Importance of URLs</li>
<ul>
<li>(06:34) Rob asks Tom if it makes sense to say that &quot;if you can think of it in a server-side framework like ASP.NET MVC or Rails, you can think of it in Ember.js&quot;. Tom says it&#8217;s not the same, because server-side MVC requests are short-lived compared to client-side applications. The real challenge is how you manage that state over time. </li>
<li>(07:17) Tom says that they think URLs are really important. Their challenge has been how to marry the concepts of desktop MVC with the fact that they have a URL, and he thinks they&#8217;ve nailed it. Jon asks how that compares to Angular; Rob says that it&#8217;s not a primary concern in AngularJS or Backbone. </li>
<li>(08:37) Tom says he considers your web application broken if he hits refresh and doesn&#8217;t see the same thing he saw before. Everyone screws this up, not because they&#8217;re idiots but because it&#8217;s hard, and if you don&#8217;t have this built into the framework you&#8217;re using you&#8217;ll mess it up. (09:06) K Scott asks what kinds of applications are the sweet spot for Ember.js. Tom says his first real professional programming gig was working on MobileMe / iCloud apps. They were big apps written in SproutCore. He says it&#8217;s important to be able to add features without breaking old features. Functional reactive programming and strong conventions help support this. </li>
</ul>
<li>State and Scope</li>
<ul>
<li>(10:38) Jon asks about the difference in maintaining state between Ember.js and AngularJS. Tom talks about how the Ember.js controller is similar to Cocoa and explains how the the controller presents the model to the template. Rob describes the $scope in AngularJS and compares the way AngularJS handles things more explicitly, whereas Ember.js is more conventional. </li>
<li>(12:19) Tom says that he thinks the way AngularJS leverages JavaScript&#8217;s prototypal inheritance is really elegant, but it breaks down when you have very deeply nested UI&#8217;s pushing you into directives and more complex decisions. Rob says that you can share scope between AngularJS controllers, but the isolated scope situation is one of the things you struggle with in Angular. </li>
</ul>
<li>Testing, testing</li>
<ul>
<li>(13:54) Jon asks Tom about his comment on testability. Tom says that Angular&#8217;s Karma test support is really nice, and they&#8217;re working on catching up in Ember. Rob says that in AngularJS you&#8217;re just working with basic objects, which is really nice when you&#8217;re testing. </li>
<li>(16:08) Tom says Ember.js requires you to do things correctly from the beginning; they won&#8217;t give you any foot guns to make things easier. Helpers help. </li>
<li>(16:42) K Scott asks how change detection works. Tom explains the differences &#8211; AngularJS uses dirty checking against the DOM, while Ember.js uses accessors (like Backbone). Tom says that the performance is better in Ember.js. Angular&#8217;s situation will improve when they get object.observe, which ironically will happen at the same time Ember&#8217;s situation improves due to support for object proxies. </li>
<li>(18:37) K Scott says he&#8217;d like to be able to conventionally wire up events. Tom talks about event delegation in Ember.js. </li>
</ul>
<li>The SEO Elephant in the Room</li>
<ul>
<li>(19:53) Tom says the biggest issue with JavaScript client-side applications today is SEO and describes why he&#8217;s not happy with the SEO solutions the other frameworks provide. They&#8217;re working on a solution that uses leverages the fact that they use Handlebars for templating to run a server-side process to generate SEO friendly content without any PhantomJS dependency. </li>
</ul>
<li>Using Ember.js When You&#8217;re Not Tom</li>
<ul>
<li>(22:28) Jon says that one issue with highly conventional frameworks is that it can be hard when you&#8217;re getting started and don&#8217;t know the conventions. Tom agrees and says that you&#8217;ll be frustrated if you experience learning difficulty before you feel the power and says the solution is documentation and good tooling. He mentions a coming Chrome extension that will show you what controller and model are backing content on the screen when you hover over it. K Scott says he&#8217;s pretty impressed with the Ember.js documentation. </li>
</ul>
<li>What&#8217;s Next? How about some Prollyfills?</li>
<ul>
<li>(24:45) K Scott asks about what&#8217;s coming out next. Tom talks about Polymer and Web Components. Jon asks if this was related to something he saw on Twitter the other day and Tom says it&#8217;s #extendthewebforward. The idea is that browsers should express primitives so browser vendors can innovate at the JavaScript level &#8211; rather than building speculative features into the browser, shipping a JS library that works cross-browser and can function as a polyfill (or &quot;prolly&quot;fill) if the feature doesn&#8217;t ship. </li>
</ul>
<li>So who won? Any missed opportunites?</li>
<ul>
<li>(29:45) K Scott asks who won the cage match and Rob admits to having been destroyed. K Scott asks why Rob keeps challenging framework authors to cage matches. </li>
<li>(30:52) Jon asks Tom about the curveball that he threw at Rob during the cage match. Rob and Tom agree that coding a directive on the fly is not easy. </li>
<li>(31:42) Jon asks Tom if there&#8217;s something that Rob could have asked Tom that would be hard in Ember. Tom says that they just added a competitor to filters using bound helpers, but if Rob had thrown list sorting at him he&#8217;d have had a hard time. </li>
<li>(32:54) Jon asks about a viewer question on the emphasis on getting started vs. maintainability. Rob says that they&#8217;d first focused on composability, but nobody wanted to use it until it was easy to get started. Framework libraries don&#8217;t get the luxury of forcing a difficult learning experience on developers &#8211; if he can&#8217;t show value in 5 &#8211; 10 minutes, you&#8217;ll leave. </li>
</ul>
<li>Wrap?</li>
<ul>
<li>(34:42) K Scott asks Rob and Tom what else they&#8217;ve got going on. Rob plugs some TekPub videos (listed below) and Tom plugs some upcoming classes he and Yehuda will be offering (also listed below). </li>
</ul>
</ul>
<p>Show Links: </p>
<ul>
<li>Tom Dale (<a href="https://twitter.com/tomdale">@tomdale</a>, <a title="http://tomdale.net/" href="http://tomdale.net/">http://tomdale.net/</a>) </li>
<li>Rob Conery (<a href="http://twitter.com/robconery">@robconery</a>, <a href="http://wekeroad.com">http://wekeroad.com</a>) </li>
<li><a href="http://www.ndcoslo.com/">Norwegian Developers Conference (NDC)</a> </li>
<li><a href="http://emberjs.com/">Ember.js</a> </li>
<li><a href="http://angularjs.org/">AngularJS</a> </li>
<li><a href="http://ember101.com/">Ember101.com</a> </li>
<li><a href="http://sproutcore.com/">SproutCore</a> </li>
<li><a href="http://karma-runner.github.io/0.8/index.html">Karma test runner for JavaScript</a> </li>
<li><a title="http://yehudakatz.com/2013/05/21/extend-the-web-forward/" href="http://yehudakatz.com/2013/05/21/extend-the-web-forward/">Yehuda Katz &#8211; Extend the Web Forward</a> </li>
<li><a href="http://www.polymer-project.org/">Polymer</a> </li>
<li><a href="http://prollyfill.org/">Extensible Web Community Group</a> </li>
<li><a href="http://tekpub.com/blogs/video-releases/8050203-get-involved">TekPub: Get Involved!</a> with Scott Hanselman </li>
<li>Upcoming Ember.js courses from <a href="http://www.tilde.io/training/">Tilde</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/cJq_RjUOL1w" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-169-tom-dale-and-rob-conery-on-the-emberjs-angularjs-cage-match-at-ndc/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/XFtu36OcGsA/HerdingCode-0169-NDC-Ember-Angular-Cage-Match.mp3" fileSize="18486037" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>At NDC, Jon and K Scott sat down with Tom Dale (co-founder of Ember.js) and Rob Conery to recap their cage match battle, compare Ember.js and AngularJS, and hear from Tom about where Ember.js is headed. Download / Listen: Herding Code 169: Tom Dale and Ro</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>At NDC, Jon and K Scott sat down with Tom Dale (co-founder of Ember.js) and Rob Conery to recap their cage match battle, compare Ember.js and AngularJS, and hear from Tom about where Ember.js is headed. Download / Listen: Herding Code 169: Tom Dale and Rob Conery on the Ember.js / AngularJS Cage Match at [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-169-tom-dale-and-rob-conery-on-the-emberjs-angularjs-cage-match-at-ndc/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/XFtu36OcGsA/HerdingCode-0169-NDC-Ember-Angular-Cage-Match.mp3" length="18486037" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0169-NDC-Ember-Angular-Cage-Match.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 168: John Sheehan on Runscope</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/yRsXzrZlD4s/</link>
		<comments>http://herdingcode.com/herding-code-168-john-sheehan-on-runscope/#comments</comments>
		<pubDate>Fri, 07 Jun 2013 20:06:26 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=550</guid>
		<description><![CDATA[This week on Herding Code, the guys talk to John Sheehan about the recent launch of his new API developer tools company, Runscope. Download / Listen: Herding Code 168: John Sheehan on Runscope Show Notes: Intro (00:30) &#34;What is Runscope and why should I care?&#34; (00:55) Runscope is the ultimate API integrator developer&#8217;s toolbox. It [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>This week on Herding Code, the guys talk to John Sheehan about the recent launch of his new API developer tools company, Runscope.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0168-Runscope.mp3">Herding Code 168: John Sheehan on Runscope</a>
<p>Show Notes:</p>
<ul>
<li>Intro
<ul>
<li>(00:30) &quot;What is Runscope and why should I care?&quot; </li>
<li>(00:55) Runscope is the ultimate API integrator developer&#8217;s toolbox. It helps you solve the problems you encounter in dealing with API&#8217;s from a consumption standpoint. It takes invisible API traffic and makes it visible, then helping you do all sorts of things with it: debugging, sharing, retry a request from the website, testing features like response playback without hitting the API, webhook debugging, etc. When you rely on an API, you&#8217;re not just taking on a service dependency &#8211; it&#8217;s code code that&#8217;s running on someone else&#8217;s service, and you should treat it like it&#8217;s code that&#8217;s under your control. You should apply the same testing rigor and should have the same debugging facilities. </li>
<li>(03:25) Jon asks about the launch. Anyone can try it out now at runscope.com. John talks about the internal preview (shoutout to Kevin Dente, the first beta tester) and the launch at GlueCon and press at TechCrunch and TheNextWeb. </li>
</ul>
</li>
<li>(04:35) Overview of <a href="https://www.runscope.com/#features">features</a>:
<ul>
<li>Traffic Inspector
<ul>
<li>(04:55) In your code, instead of calling an API directly, you create a Runscope URL by including a Runscope bucket key and replacing dots with dashes. Essentially you&#8217;re pointing your API calls at Runscope, which then extracts the hostname and makes the API request for you. A lot of other tools require you to change your API calls by modifying your authentication, adding parameters, etc. Runscope doesn&#8217;t require any changes outside of the hostname, and all of your original headers and request parameters stay intact. This means you can just flip it on by changing your hostname and turn it off when done. You can then view all your requests in the Runscope website, filter to only show errors, All your requests show up in </li>
<li>(07:45) Scott says this is essentially a reverse proxy. John agrees that&#8217;s technically correct, but they avoid the term because they&#8217;re doing a lot more. </li>
<li>(08:13) Scott asks if Runscope adds headers to allow filtering or other things. John says the only modification they make is to add a Runscope message id header to allow lookup. They&#8217;re thinking of some things in the future like caching credentials to apply to a lot of requests and other features that benefit performance, security, etc. </li>
<li>(09:27) Jon asks about the security concerns, as Runscope is kind of like a man in the middle. John says they&#8217;re very concerned with security, and points to <a title="https://www.runscope.com/docs/security" href="https://www.runscope.com/docs/security">https://www.runscope.com/docs/security</a> for a lot more information about their security practices. They&#8217;re looking at future things like encrypted storage, and currently if you make an SSL request to Runscope they will forward it over SSL to the API provider. </li>
<li>(11:45) Jon asks about cases like multi-legged auth. John says everything just flows through Runscope, with one exception &#8211; if a response comes back with a location header then Runscope will modify the location to a Runscope url so if the client follows it it&#8217;ll be captured. </li>
<li>(12:40) Scott asks about how geolocation works, since Runscope is making the request from a different location. John says that currently they&#8217;re making requests from US East Coast, but in the future they want to allow requests from specific geographic areas. </li>
<li>(14:10) Scott asks about a current app he&#8217;s working on which requires a custom certificate to connect to an API and asks if that would be supported. John says that they&#8217;re looking at both support for custom certificates as well as on -premises installations to support those scenarios. </li>
<li>(15:35) Scott asks about support for non-standard ports. John says they support that using a Runscope request port header. </li>
</ul>
</li>
<li>Request Editor
<ul>
<li>(16:09) Jon asks about the Request Editor. John explains that they really wanted to make it possible to edit and create requests as easily as any other code. Their original inspiration was the hurl.it site. Jon interjects that he loves using hurl.it to see where shortened or dodgy urls will take him before clicking on them. John says they&#8217;ve taken the idea of hurl.it and really filled it out to include storage, advanced editing, etc. They also built in some helpers for basic auth, digest authentication, OAuth 1, OAuth 2 token generators, etc. </li>
<li>(19:45) Scott asks if they&#8217;ve looked at integrating OWASP tests to run some automated security inspection for things like SQL injection, XSS, redirect attacks, etc. John says he&#8217;d like to let people create collections and share them with others. </li>
</ul>
</li>
<li>Shared Requests
<ul>
<li>(21:11) Jon says that when he was testing during the beta and hit a question, John just had him share the request with him. John says that he really wanted that feature when he was at Twilio, and they currently use it all the time internally. </li>
<li>(22:39) Jon asks if there&#8217;s a way to download or otherwise privately share a request. John says the best way to do that now is use team account, which allows for privately share requests within the team. They&#8217;re also looking at allowing redacting some fields in shared requests, so you can share a request without revealing your password or other sensitive information. </li>
</ul>
</li>
<li>Passageway
<ul>
<li>(22:48) Passageway was based on the localtunnel project. It installs an agent on your local machine which forwards requests to a specific port to Runscope, and Runscope then creates a public URL. You can use Passageway to show off code running on your local machine, but you can also use it for debugging webhooks and testing API&#8217;s used in a mobile application (by pointing it at the public Runscope URL). Scott says he sees this as being useful in a continuous integration environment, and John says that a current customer is already doing this. </li>
<li>(27:33) Jon asks about the installation via pip, and John explains how pip relates to other package managers. They plan to provider other installers, and later the agent will do more than just Passageway &#8211; right now it also supports automatically creating Runscope urls for requests. </li>
<li>(29:27) Jon says that Passageway is the first place on the site where he sees something about paid accounts and asks John how they&#8217;re going to get rich. John says there are three reasons (access to passageway, team sharing and volume) to upgrade from a free account to a starter or team account. Jon asks about the naming of the starter account, and John says that naming and pricing are really hard. Scott offers some advice on enterprise friendly pricing. </li>
</ul>
</li>
</ul>
</li>
<li>Starting a business
<ul>
<li>(32:47) Jon asks about the experience of moving from being a developer to founding a company. John says he&#8217;s started several small companies, and writing software has always been a way to solve problems for businesses. He tells his recent job history at Twilio and IFFT and how he and his co-founder Frank got really fed up with the lack of good API developer tools and how they got started, funded, and launched. Getting funded was both a finish line and a starting line. </li>
<li>(41:33) Scott and Jon talk about positive response they saw to the GlueCon launch: John spent the majority of the time describing the problem, then unveiled the solution. Scott compares John to Steve Jobs. </li>
</ul>
</li>
<li>What&#8217;s next
<ul>
<li>(43:05) Jon asks what&#8217;s next. John says they&#8217;re first focusing on dev-time troubleshooting. Next they&#8217;ll be focused on production use, especially high volume use cases. Long term they&#8217;re thinking about mitigating problems &#8211; handling or proactively monitoring for problems. </li>
</ul>
</li>
<li>Python
<ul>
<li>(45:14) Jon asks about John&#8217;s experiences building Runscope in Python and how he compares it to .NET. John says he&#8217;s really come around to significant whitespace and standard </li>
<li>(46:59) Scott asks if John&#8217;s noticed that there are fewer ways to solve a problem, as opposed to C# or JavaScript. John says that&#8217;s true for the most part. He comments on how he likes the small libraries and ecosystem. </li>
</ul>
</li>
<li>Runscope vs. other network tools like Fiddler and Wireshark
<ul>
<li>(49:19) Scott asks why you&#8217;d use Runscope rather than use things like Fiddler, Wireshark, etc. John explains proxies and applications modify the way the application works and doesn&#8217;t work well on servers &#8211; it&#8217;s cloud-native. It&#8217;s also social &#8211; sharing is built in. Thirdly, it&#8217;s not a desktop application. </li>
<li>(52:30) John says he&#8217;d like to write a Fiddler plugin to make the two work well together. Scott says that there&#8217;s one advantage to desktop applications &#8211; it can interact directly with the network stack. John agrees that developers need tools that work at all layers of the stack. Scott recounts a harrowing tale in which Fiddler had to be installed on a server for an application to work. </li>
<li>(55:20) Jon says he was wondering about integrating with Glimpse but that would require an API &#8211; does Runscope have an API? John says one&#8217;s on the way soon. </li>
</ul>
</li>
<li>Lightning Round inspired by John&#8217;s Traffic and Weather podcast (with Steve Marx)
<ul>
<li>(57:00) Jon says he&#8217;s really been enjoying the Traffic and Weather podcast, and the John and Steve have convinced him that API&#8217;s really can be interesting. </li>
<li>(57:50) JSON API &#8211; what is it, and is it good? </li>
<li>(59:34) What are webhooks, and why have you been talking about them? </li>
<li>(1:01:52) Should we stop writing REST SDK clients? </li>
<li>(1:04:29) Where is API security going? Is it OAuth 2 from here on out? </li>
<li>(1:05:21) Eric Williams (@motowilliams) asks &quot;Ping Pong or Foosball? #gooooooaaaaaallll&quot; </li>
<li>(1:06:17) Where are you speaking next (answer: API Days and API World, both in San Francisco) </li>
<li>(1:07:32) Do you support the HTTP 418 teapot response? </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>John Sheehan (<a href="https://twitter.com/johnsheehan">@johnsheehan</a>, <a title="http://john-sheehan.com/" href="http://john-sheehan.com/">http://john-sheehan.com/</a>) </li>
<li><a href="https://www.runscope.com/">Runscope</a> </li>
<li><a href="http://techcrunch.com/2013/05/22/runscope-lands-1-1m-from-true-ventures-and-andreessen-horowitz-for-tools-that-address-the-broken-api-plague/">TechCrunch: Runscope Lands $1.1M From True Ventures And Andreessen Horowitz For Tools That Address The Broken API Plague</a> </li>
<li><a href="http://thenextweb.com/insider/2013/05/22/runscope-raises-1-1m-to-help-developers-that-rely-on-3rd-party-apis/">TheNextWeb: Runscope raises $1.1m to help developers that rely on 3rd-party APIs</a></li>
<li><a href="http://progrium.com/localtunnel/">localtunnel</a> </li>
<li><a href="http://hurl.it">hurl.it</a> </li>
<li><a href="http://trafficandweather.io/">Traffic and Weather</a> podcast </li>
<li><a href="http://jsonapi.org/">JSON API</a> </li>
<li><a href="https://zapier.com/">Zapier</a> (REST hooks discussion on <a href="http://trafficandweather.io/posts/2013/5/12/episode-11-">Traffic and Weather ep 11</a>) </li>
<li><a href="http://en.wikipedia.org/wiki/Hyper_Text_Coffee_Pot_Control_Protocol">Hyper Text Coffee Pot Control Protocol and the HTTP 418 (I&#8217;m a teapot) response</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/yRsXzrZlD4s" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-168-john-sheehan-on-runscope/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/N2nubFeod5g/HerdingCode-0168-Runscope.mp3" fileSize="28057475" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk to John Sheehan about the recent launch of his new API developer tools company, Runscope. Download / Listen: Herding Code 168: John Sheehan on Runscope Show Notes: Intro (00:30) &amp;#34;What is Runscope and why should</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk to John Sheehan about the recent launch of his new API developer tools company, Runscope. Download / Listen: Herding Code 168: John Sheehan on Runscope Show Notes: Intro (00:30) &amp;#34;What is Runscope and why should I care?&amp;#34; (00:55) Runscope is the ultimate API integrator developer&amp;#8217;s toolbox. It [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-168-john-sheehan-on-runscope/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/N2nubFeod5g/HerdingCode-0168-Runscope.mp3" length="28057475" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0168-Runscope.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 167: Glenn Block on scriptcs</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/xwNziGjPq1g/</link>
		<comments>http://herdingcode.com/herding-code-167-glenn-block-on-scriptcs/#comments</comments>
		<pubDate>Fri, 24 May 2013 23:09:39 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=547</guid>
		<description><![CDATA[This week on Herding Code, the guys talk to Glenn Block about scriptcs. Download / Listen: Herding Code 167: Glenn Block on scriptcs Show Notes: Intro (00:10) K Scott asks Glenn if he&#8217;s still working with Node at Microsoft. Glenn says he&#8217;s moved from command-line tools for node and is focused on Azure Mobile Services, [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>This week on Herding Code, the guys talk to Glenn Block about scriptcs.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0167-ScriptCS.mp3">Herding Code 167: Glenn Block on scriptcs</a>
<p>Show Notes:</p>
<ul>
<li>Intro
<ul>
<li>(00:10) K Scott asks Glenn if he&#8217;s still working with Node at Microsoft. Glenn says he&#8217;s moved from command-line tools for node and is focused on Azure Mobile Services, but he still owns the Node SDK and the Node story for Azure. </li>
<li>(01:56) K Scott scriptcs is another way to write C# code outside of the IDE as script files. It&#8217;s inspired by Glenn&#8217;s work with Node.js. It leverages Roslyn, NuGet, and some conventions to simplify scripting, such as automatically pulling in NuGet packages. </li>
<li>(03:58) K Scott comments on the ability to reference assemblies using the #r directive. Glenn says it&#8217;s even easier than that &#8211; you can use #r to reference GAC&#8217;d assemblies, but assemblies in the local bin folder are automatically referenced. K Scott asks about the hooks to support that, and Glenn explains how Roslyn supports a lot of scenarios; since it ships it as NuGet packages it can be used outside of Visual Studios. Roslyn allows for code to exist outside of a class. </li>
<li>(06:33) Jon talks about his initial experiences, and how the REPL made it really easy to get started. Glenn explains how that works and explains how, using Chocolatey you can quickly install scriptcs and a NuGet package like MongoDb and then just start writing code in the REPL. </li>
</ul>
</li>
<li>Dependence on Roslyn
<ul>
<li>(09:35) Kevin points out that Roslyn is still in CTP and asks how that impacts scriptcs. Glenn says that since it&#8217;s a CTP Roslyn you can&#8217;t ship the binaries, but that&#8217;s not a problem for scriptcs since it pulls in the public NuGet packages. Roslyn is still evolving, it doesn&#8217;t yet support async / await or dynamic, for instance. </li>
<li>(11:13) scriptcs no longer takes a dependency on Roslyn. It uses a pluggable script executor which can use Roslyn but can potentially also use other script engines. </li>
</ul>
</li>
<li>Example uses of scriptcs
<ul>
<li>(12:33) K Scott asks for some common use cases. Glenn says that it&#8217;s possible to build apps because you can have one script that includes other scripts, then talks about the WPF calculator sample in the scriptcs-samples repo. </li>
<li>(14:18) Glenn says another use he&#8217;s seeing is automation &#8211; basically as a replacement for PowerShell. He talks about the Fluent Automation sample which uses script-cs to automate Selenium tests. </li>
<li>(15:18) Glenn talks about a real world example at a large trucking company who is using scriptcs to automate data processing jobs. </li>
<li>(16:05) Octopus Deploy has added support for scriptcs. He used a loader script that passes configuration to user-written scripts. </li>
<li>(17:42) Glenn says it&#8217;s useful to tinker and play with libraries or services and give an example of interacting with Azure Mobile Services in the REPL. </li>
<li>(18:38) One other example is extensibility &#8211; creating hooks and allowing end users to just drop in a scriptcs script to extend behavior. </li>
<li>(19:03) Kevin says that in the past people have used JavaScript engines to support extensibility. Glenn says that touches on a common question &#8211; why scriptcs as opposed to a lot of other options such as F#, Ruby, node, etc.? He gives two reasons: you get to stay in a language you&#8217;re familiar with, and there&#8217;s a &quot;grow up&quot; story to migrate from scriptcs to a Visual Studio project using the same libraries, same code, etc. </li>
<li>(20:03) Jon says that the PowerShell syntax is different enough that he can&#8217;t remember it. He talks about the idea of using scriptcs for installation and initialization scripts in NuGet rather than PowerShell. Glenn says there are kind of ways to use C# with PowerShell, but it&#8217;s not the same. He mentions a sample from @beefarino which lets you talk to scriptcs from PowerShell. </li>
<li>(23:01) Kevin asks what the migration process is to move from scriptcs to a C# project. Glenn says it depends on how much you take advantage of scriptcs features like Script Packs. Script Packs bring a node-like require module syntax into scriptcs. Glenn talks about the Web API script pack which adds in proper usings and gives you an API that&#8217;s very easy to use in script, without IntelliSense. They&#8217;ve talked about creating a project exporter which could set up a project and bring in your Script Packs, etc. </li>
<li>(26:25) Kevin asks if the Script Pack / Require experience could be brought into standard C#. Glenn says the general concept could work because it&#8217;s just a DLL, although there are some incompatible things like import statements. They&#8217;ve looked at writing Script Packs as script, which could make this more useful. </li>
<li>(28:40) Kevin talks about how the Node module system handles conflicting dependencies and asks if scriptcs handles that. Glenn says not yet, but .NET is now able to handle that so it could be added in. The general idea of script modules depending on other script modules makes sense, but conflicting dependencies might not be very useful. They&#8217;re thinking of NuGet packages with no assemblies, just does as content, and talks about some implications. </li>
<li>(31:32) Jon talks about how Glenn had told him that a lot of his bizarre feature requests wouldn&#8217;t fit in the core but could be useful as extensions, then asks about the extensibility points. Glenn runs through what you can do: change the engine, use Script Packs, bring in NuGet packages, possible later REPL extensions via global NuGet packages. He says they&#8217;re following the Node team&#8217;s principles of keeping a small tight core and pushing features towards extensions. </li>
</ul>
</li>
<li>Questions from Twitter
<ul>
<li>(34:14) Jeff Schumacher (@codereflection) asks Glenn to compare scriptcs performance vs. compiled code. Glenn says that there can be a short startup impact and potentiall </li>
<li>(35:58) Akim Boyko (@AkimBoyko) asks if it&#8217;s possible to run scriptcs without Roslyn, async/await support and in sandbox mode. Glenn talks about the Mono impact of running without requiring Roslyn support. Roslyn will be getting async/await support at some point, but it could also be added via CodeDom if people implement that. However, CodeDom doesn&#8217;t support the classless system that Roslyn does. </li>
<li>(38:04) Simon Cropp (@SimonCropp)&#160; asks if scriptcs support plugging into the build pipeline? Eg if I wanted to plug in Fody (<a href="https://github.com/Fody/Fody/">https://github.com/Fody/Fody/</a>). </li>
<li>(39:41) Several questions on how scriptcs compares to Snippet Compiler, LinqPad and csscript. </li>
<li>(41:12) Dan Vanderboom (@danvanderboom) asks if scriptcs let us run a .cs code file by itself anywhere in the file system? Glenn says no and explains why he&#8217;s not sure that would be useful. </li>
<li>(42:55) Tomasz Janczuk (@tjanczuk) asks When will integration of scriptcs and edgejs be done? ;) Glenn talks about how the projects have both grown up together and how the two would be useful together. </li>
</ul>
</li>
<li>Debugging and IntelliSense
<ul>
<li>(45:29) Jon talks about how he messed something up in the samples and debugged it and asks about debugging support. Glenn points out that you can directly debug an EXE in Visual Studio and explains how to debug scriptcs code in Visual Studio. He also talks about MDbg which Glenn (and apparently everyone else) didn&#8217;t know existed. He also mentions a Script Pack for debugging. </li>
<li>(48:15) Jon says the REPL is great, and yet he&#8217;d sometimes like IntelliSense. Glenn talks about a lightweight WPF editor that&#8217;s in progress, but says if you get to a point where things are getting complex it&#8217;s probably time to move to move from scriptcs to a project. Jon says that for the most part Script Packs seem to really simplify the code to the point where you don&#8217;t really need IntelliSense, and Glenn agrees. </li>
</ul>
</li>
<li>Shoutouts
<ul>
<li>(50:45) Glenn calls out the two other coordinators on the project, Filip Wojcieszyn (@filip_woj) and Justin Rusbatch (@jrusbatch) as well as some other top contributors. </li>
</ul>
</li>
<li>Shell capabilities, TSR scenarios
<ul>
<li>(52:03) Kevin asks if there are possible changes to make it more shell-like with things like piping. Glenn says they currently have a poor story for arguments, but it&#8217;s coming. You can currently pipe text, but he&#8217;s not sure about piping objects. </li>
<li>(54:30) Jon says he&#8217;s got some AutoHotKey scripts and asks if scriptcs could handle that kind of thing. </li>
</ul>
</li>
<li>Future plans
<ul>
<li>(56:10) K Scott asks where things are going in the future. Glenn mentions scriptcs modules, aliases, a better Visual Studio experience, export project, and saving DLLs. </li>
<li>(1:04:25) Glenn talks about some interesting ideas on GitHub, like a command to break execution into the REPL. They&#8217;ve got 20 active contributors, so things are moving fast. </li>
<li>(59:54) Glenn says he&#8217;s got a personal interest in seeing some adoption in Microsoft &#8211; such as adding scriptcs scripting to other projects. </li>
<li>(1:00:25) Glenn talks about one question that comes up: should the Roslyn team have tackled the scriptcs scenario? </li>
</ul>
</li>
<li>Wrap up
<ul>
<li>(1:01:10) K Scott asks about Glenn&#8217;s upcoming plans, speaking engagements, etc. </li>
<li>(1:02:27) Jon makes a last minute sales pitch to try it out &#8211; you can install in seconds from Chocolatey and just start playing at the REPL. Glenn points one gotcha &#8211; scripts which run servers need to be run as admin. </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Glenn Block (<a href="https://twitter.com/gblock">@gblock</a>, <a href="http://codebetter.com/glennblock/author/glennblock/">CodeBetter blog</a>,&#160; <a href="http://blogs.msdn.com/b/gblock/">MSDN blog</a>) </li>
<li><a href="http://codebetter.com/glennblock/2013/02/28/scriptcs-living-on-the-edge-in-c-without-a-project-on-the-wings-of-roslyn-and-nuget/">scriptcs &#8211; Living on the edge in C# without a project on the wings of Roslyn and Nuget</a> &#8211; Glenn&#8217;s post explaining scriptcs and why the project started</li>
<li><a href="http://codebetter.com/glennblock/2013/05/14/scripting-ease-with-script-packs/">Scripting ease with Script Packs</a>&#160;</li>
<li><a href="http://msdn.microsoft.com/en-us/vstudio/roslyn.aspx">Roslyn CTP</a> </li>
<li><a href="https://github.com/scriptcs/scriptcs-samples">scriptcs samples repository</a>&#160; </li>
<li><a href="https://github.com/scriptcs/scriptcs-samples/tree/master/fluentautomation">Fluent Automation sample</a> </li>
<li><a href="http://www.beefycode.com/post/ScriptCS-or-PowerShell-part-1.aspx">ScriptCS or PowerShell</a> post by @beefariono </li>
<li><a href="http://www.dotnetrocks.com/default.aspx?showNum=853">scriptcs on Dot Net Rocks</a></li>
<li><a href="http://www.hanselman.com/blog/ProjectlessScriptedCWithScriptCSAndRoslyn.aspx">Project-less scripted C# with ScriptCS and Roslyn</a> (Scott Hanselman)</li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/xwNziGjPq1g" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-167-glenn-block-on-scriptcs/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/-Wa5boI3J3c/HerdingCode-0167-ScriptCS.mp3" fileSize="20349117" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk to Glenn Block about scriptcs. Download / Listen: Herding Code 167: Glenn Block on scriptcs Show Notes: Intro (00:10) K Scott asks Glenn if he&amp;#8217;s still working with Node at Microsoft. Glenn says he&amp;#8217;s mov</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk to Glenn Block about scriptcs. Download / Listen: Herding Code 167: Glenn Block on scriptcs Show Notes: Intro (00:10) K Scott asks Glenn if he&amp;#8217;s still working with Node at Microsoft. Glenn says he&amp;#8217;s moved from command-line tools for node and is focused on Azure Mobile Services, [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-167-glenn-block-on-scriptcs/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/-Wa5boI3J3c/HerdingCode-0167-ScriptCS.mp3" length="20349117" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0167-ScriptCS.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 166: Tomasz Janczuk on Edge.js</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/8kbQZSnnTv8/</link>
		<comments>http://herdingcode.com/herding-code-166-tomasz-janczuk-on-edge-js/#comments</comments>
		<pubDate>Thu, 16 May 2013 20:13:49 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=544</guid>
		<description><![CDATA[This week on Herding Code, the guys talk to Tomasz Janczuk about running .NET code in Node.js using Edge.js. Download / Listen: Herding Code 166: Tomasz Janczuk on Edge.js Show Notes: Intro and background on Edge.js (00:40) Tomasz has been focusing on Node.js at Microsoft for the past 3 years. He&#8217;s been working on making [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>This week on Herding Code, the guys talk to Tomasz Janczuk about running .NET code in Node.js using Edge.js.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0166-EdgeJS.mp3">Herding Code 166: Tomasz Janczuk on Edge.js</a>
<p>Show Notes:</p>
<ul>
<li>Intro and background on Edge.js</li>
<ul>
<li>(00:40) Tomasz has been focusing on Node.js at Microsoft for the past 3 years. He&#8217;s been working on making Node.js run well on Windows. He&#8217;s also worked on hosting Node.js on Windows Azure with IISNode. </li>
<li>(02:08) Jon asks about Edge.js&#8217;s original name, Owin. Tomasz explains how that made sense with the original scope &#8211; connect middleware and express handlers &#8211; but it&#8217;s grown since then so it needed a more generic name. </li>
<li>(02:45) Edge.js lets you run Node.js and .NET code in one process and provides interop mechanisms between the two. </li>
<li>(03:05) Jon asks why that&#8217;s useful. Tomasz says you can do pretty much anything in either Node.js or .NET, but some things work a lot better on one platform. He gives examples like using ADO.NET to connect to SQL Server and running CPU bound computations as multi-threaded .NET code from the single-threaded Node.js event loop. There are two classes of scenarios: things that work better on one platform, or writing native extensions to Node.js without having to drop all the way down to raw C and native OS mechanisms. </li>
<li>(06:11) Jon brings up two questions from Twitter about Mono support (Jason Denizac @_jden &quot;when&#8217;s mono support coming?&quot; and Kevin Swiber &quot;Mono support? Can we do legit Node modules in C#? Are grilled hotdogs really better than boiled?&quot; Tomasz says not yet, but it&#8217;s high on the list. There are some complications to implement that support since Edge.js uses C++ CLI, which isn&#8217;t available on Mono. </li>
</ul>
<li>Getting started and samples</li>
<ul>
<li>(07:57) Jon asks what&#8217;s involved in setting it up. He says he ran npm install edge, then npm install edge-cs. Tomasz explains why he didn&#8217;t need to install edge-cs &#8211; C# support is built in, other language support plugs in. </li>
<li>(08:43) Jon asks about the samples. Tomasz explains the different ways of integrating CLR code into Node.js and talks about how the samples show these approaches. </li>
<li>(10:36) Jon says he liked how the samples progressed from very basic to pretty complex. Tomasz says you can do just about anything in Edge.js, but there&#8217;s a specific interface you need to follow in order to work smoothly between the Node.js async model and many synchronous operations in .NET. Every function in Edge.js uses an async function delegate, so you end up using small wrapper functions in some cases. </li>
</ul>
<li>Marshalling and interop</li>
<ul>
<li>(13:08) Kevin says this reminds him of COM / .NET interop and issues with object lifetime, garbage collection, etc. Tomasz says that that the async function delegate solves the threading models. Object lifetimes are controlled because everything is marshalled by value. </li>
<li>(16:22) Kevin asks if the marshal by value prevents working directly with the CLR object. Tomasz says that you can handle this using function proxies to create closures over CLR states. </li>
<li>(17:45) Scott K. asks if structs eliminate the serialiazation issues. Tomasz clarifies that the marshalling process is reflecting over the objects in .NET and recreating a synonymous JavaScript. Scott says this sounds like thunking from days of old. </li>
<li>(19:27) Jon says that he saw one sample that allows for debugging inline .NET code in a JavaScript file. Tomasz explains that this is done using the codedom compiler to create an in-memory assembly with debugging information, which can be attached to from Visual Studio. </li>
<li>(21:25) Jon says he thinks this sounds useful for using a NuGet package in a Node.js application and asks if there&#8217;s support for pulling in a NuGet package. Tomasz says that at this point it&#8217;s up to you how you&#8217;d get the assembly downloaded and set up, but that there&#8217;s an open issue to get script-cs integration going and that would handle this. </li>
</ul>
<li>Overhead and performance</li>
<ul>
<li>(23:06) Jon asks about the overhead of running two virtual machines and marshalling. Tomasz says there is some overhead, but it&#8217;s better than running two different processes. Edge.js is built for solving some specific scenarios, and it&#8217;s fast in those </li>
<li>(24:55) Kevin asks if there&#8217;s a delay when Edge.js spins up. Tomasz says that happens when you require Edge, but it&#8217;s not really noticeable. </li>
</ul>
<li>Misc questions</li>
<ul>
<li>(25:55) Jon asks what was the hardest part of implementing Edge.js. Tomasz says the function proxies to handle lifetimes and reconciling threading models. </li>
<li>(27:45) Scott says this sounds useful for authentication or using a legacy .NET library. Tomasz lists several more. </li>
<li>(29:20) Kevin asks how exceptions are handled. Tomasz explains how the exceptions are marshalled and thrown across VM boundaries. </li>
<li>(30:15) Kevin asks if it&#8217;s tied to specific Node.js versions. Tomasz says it works on all current stable versions. </li>
<li>(31:30) Question from Twitter: @jeremydmiller &quot;I&#8217;ve seen a lot of samples of hosting . Net in node, but how about running node in a .net process?&quot; Tomasz talks about an open issue, Mission Double Edge which would handle that. He explains that the challenge is that Node.js doesn&#8217;t have a hosting model. </li>
<li>(33:20) Jon says he saw several of the samples had the C# script named with .CSX extension and asks about that. Tomasz says that this is partly done to follow Roslyn conventions, including specifying assemblies as references in code using #r. </li>
</ul>
<li>Future plans and next steps for listeners</li>
<ul>
<li>(34:25) Jon asks what&#8217;s planned going forward. Tomasz talks about Mono support and adding support for additional languages, including F# (note: this has been added <a title="http://tjanczuk.github.io/edge/#/3" href="http://tjanczuk.github.io/edge/#/3">http://tjanczuk.github.io/edge/#/3</a>) . Jon asks what&#8217;s involved in adding language support. </li>
<li>(36:30) Jon asks about the relationship with OWIN. Tomasz says there&#8217;s a separate module which allows you to plug any OWIN compatible .NET application and plug it into an Express.js pipeline. Jon says this reminds him of the Edge name and Tomasz explains that the idea is that mathematically an edge connects two nodes, so Edge.js connects differe. </li>
<li>(38:25) Jon asks about next steps for people to get started. </li>
<li>(38:55) Jon asks if this is a Microsoft project. Tomasz says it&#8217;s his own separate open source project that&#8217;s inspired by his day job, and this allows him some more flexibility to work with the community. He lists some of the community contributions they&#8217;ve seen so far. </li>
</ul>
</ul>
<p>Show Links:</p>
<ul>
<li>Tomasz Janczuk (<a href="https://twitter.com/tjanczuk">@tjanczuk</a>, <a href="http://tomasz.janczuk.org/">blog</a>) </li>
<li>Official Edge.js site: <a title="http://tjanczuk.github.io/edge/#/" href="http://tjanczuk.github.io/edge/#/">http://tjanczuk.github.io/edge/#/</a> </li>
<li>Edge.js on GitHub: <a title="https://github.com/tjanczuk/edge" href="https://github.com/tjanczuk/edge">https://github.com/tjanczuk/edge</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/8kbQZSnnTv8" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-166-tomasz-janczuk-on-edge-js/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/2X4lc15kGCY/HerdingCode-0166-EdgeJS.mp3" fileSize="12833296" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk to Tomasz Janczuk about running .NET code in Node.js using Edge.js. Download / Listen: Herding Code 166: Tomasz Janczuk on Edge.js Show Notes: Intro and background on Edge.js (00:40) Tomasz has been focusing on Nod</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk to Tomasz Janczuk about running .NET code in Node.js using Edge.js. Download / Listen: Herding Code 166: Tomasz Janczuk on Edge.js Show Notes: Intro and background on Edge.js (00:40) Tomasz has been focusing on Node.js at Microsoft for the past 3 years. He&amp;#8217;s been working on making [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-166-tomasz-janczuk-on-edge-js/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/2X4lc15kGCY/HerdingCode-0166-EdgeJS.mp3" length="12833296" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0166-EdgeJS.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 165: Mark Seemann on AutoFixture and Unit Testing</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/--46jNYPceE/</link>
		<comments>http://herdingcode.com/herding-code-165-mark-seemann-on-autofixture-and-unit-testing/#comments</comments>
		<pubDate>Tue, 30 Apr 2013 18:52:30 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=539</guid>
		<description><![CDATA[While at the Danish Developer Conference in Copenhagen, Jon sat down with Mark Seemann to talk about AutoFixture and Unit Testing. Download / Listen: Herding Code 165: Mark Seemann on AutoFixture and Unit Testing Show Notes: AutoFixture (00:44) AutoFixture is an open source library that simplifies the &#34;Arrange&#34; part of the standard Arrange / Act [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>While at the Danish Developer Conference in Copenhagen, Jon sat down with Mark Seemann to talk about AutoFixture and Unit Testing.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0165-Mark-Seemann-on-AutoFixture-and-Unit-Testing.mp3">Herding Code 165: Mark Seemann on AutoFixture and Unit Testing</a>
<p>Show Notes:</p>
<ul>
<li>AutoFixture</li>
<ul>
<li>(00:44) AutoFixture is an open source library that simplifies the &quot;Arrange&quot; part of the standard Arrange / Act / Assert steps in unit tests.</li>
<li>(01:20) Jon asks about anonymous variables. Mark says he got that terminology from Gerard Meszaros&#8217; book, xUnit Test Patterns. Anonymous methods and variables are necessary for a test, but their implementation doesn&#8217;t matter. </li>
<li>(02:23) Mark describes the test data builder pattern, from the book Growing Object-Oriented Software. The pattern works well, but it gets to be repetitive and mechanical to write and maintain, so he wanted to automate it. AutoFixture uses reflection to create the needed instances.</li>
<li>(04:00) Jon asks about the usage pattern for AutoFixture.(04:16) Jon asks about the different values returned for strings, ints, etc. Mark explains how that&#8217;s changed over time &#8211; numbers no longer just return sequential values, they now return random small numbers.</li>
<li>(05:20) Mark explains equivalence classes. Jon says &quot;Okay&quot; a lot. You can use AutoFixture in cases where you don&#8217;t care about the value; in cases where you do, you can configure what you want to. Mark explains some of the different ways you can use the AutoFixture API to set specific values when needed.</li>
<li>(09:15) Jon asks how AutoFixture works with mocking. Mark says there are NuGet packages which will interface with Moq, Rhino Mocks, FakeItEasy and NSubstitute.</li>
<li>(10:25) Jon asks Mark what his talk said about equivalence. Mark explains identity and value objects with an example with overriding the equals operator on a money value object. The more you can model your domain as value objects, the easier your tests become. Jon asks if this is an example of TDD driving a good design. Mark says that he tried letting tests completely drive his design a few years ago, but he found that it alone didn&#8217;t drive a very good overall design.</li>
</ul>
<li>Testing philosophy, Testing Trivial Methods</li>
<ul>
<li>(15:56) Jon asks Mark about his recent post advocating testing trivial methods. Mark says that his post was in response to Robert C. Martin&#8217;s post, The Pragmatics of TDD. Mark makes a case for testing getters and setters &#8211; if you decide to use a property rather than a field, that decision probably warrants a test to verify the property is maintaining the behavior that drove the original decision.</li>
<li>(20:38) Jon asks how this applies to the example of testing ASP.NET MVC controller code. Mark says he&#8217;s in the habit of testing everything, and has written a lot of tools to make writing the tests easy enough that it&#8217;s not a concern. The question is, how much does it cost you if a unit of code doesn&#8217;t function as designed? Mark explains how a controller action models the data flow in an MVC application, and decomposing the flow allows you to write smaller, simpler, more targeted tests.</li>
<li>(25:03) Jon asks how this relates to outside-in testing using tools like Selenium. Mark says that testing at the external boundary is fine if you can, but most applications become complex enough that boundary testing would require an impractical number of test cases.</li>
</ul>
<li>Wrap up</li>
<ul>
<li>(26:04) Mark says that many of these concepts are covered in more detail in Mark&#8217;s Pluralsight course.</li>
</ul>
</ul>
<p>Show Links:</p>
<ul>
<li>Mark Seeman (<a href="https://twitter.com/ploeh">@ploeh</a>, <a href="http://blog.ploeh.dk/">blog</a>) </li>
<li><a href="https://github.com/AutoFixture/AutoFixture">AutoFixture</a></li>
<li>Book: <a href="http://amazon.com/gp/product/B004X1D36K?ie=UTF8&amp;camp=213733&amp;creative=393177&amp;creativeASIN=B004X1D36K&amp;linkCode=shr&amp;tag=jongall-20&amp;qid=1367272060&amp;sr=1-1">xUnit Test Patterns: Refactoring Test Code</a></li>
<li>Book: <a href="http://www.amazon.com/gp/product/B002TIOYVW?ie=UTF8&amp;camp=213733&amp;creative=393177&amp;creativeASIN=B002TIOYVW&amp;linkCode=shr&amp;tag=jongall-20&amp;qid=1367277246&amp;sr=8-1">Growing Object-Oriented Software, Guided by Tests</a></li>
<li>Blog post: <a href="http://blog.ploeh.dk/2013/03/08/test-trivial-code">Test trivial code</a></li>
<li>Blog post by Uncle Bob Martin: <a title="http://blog.8thlight.com/uncle-bob/2013/03/06/ThePragmaticsOfTDD.html" href="http://blog.8thlight.com/uncle-bob/2013/03/06/ThePragmaticsOfTDD.html">The Pragmatics of TDD</a></li>
<li>Pluralsight announcement: <a href="http://blog.pluralsight.com/2013/04/15/new-course-advanced-unit-testing/">New course: Advanced Unit Testing</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/--46jNYPceE" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-165-mark-seemann-on-autofixture-and-unit-testing/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/p0Hc0OBaDqY/HerdingCode-0165-Mark-Seemann-on-AutoFixture-and-Unit-Testing.mp3" fileSize="13870225" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>While at the Danish Developer Conference in Copenhagen, Jon sat down with Mark Seemann to talk about AutoFixture and Unit Testing. Download / Listen: Herding Code 165: Mark Seemann on AutoFixture and Unit Testing Show Notes: AutoFixture (00:44) AutoFixtur</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>While at the Danish Developer Conference in Copenhagen, Jon sat down with Mark Seemann to talk about AutoFixture and Unit Testing. Download / Listen: Herding Code 165: Mark Seemann on AutoFixture and Unit Testing Show Notes: AutoFixture (00:44) AutoFixture is an open source library that simplifies the &amp;#34;Arrange&amp;#34; part of the standard Arrange / Act [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-165-mark-seemann-on-autofixture-and-unit-testing/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/p0Hc0OBaDqY/HerdingCode-0165-Mark-Seemann-on-AutoFixture-and-Unit-Testing.mp3" length="13870225" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0165-Mark-Seemann-on-AutoFixture-and-Unit-Testing.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 164: OWIN and Katana with Louis DeJardin</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/GjNwkszdFgc/</link>
		<comments>http://herdingcode.com/herding-code-164-owin-and-katana-with-louis-dejardin/#comments</comments>
		<pubDate>Mon, 22 Apr 2013 19:35:36 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=536</guid>
		<description><![CDATA[This week on Herding Code, the guys talk to Louis DeJardin about OWIN &#8211; the Open Web Interface for .NET &#8211; and Katana, an open source OWIN implementation for ASP.NET and IIS. Download / Listen: Herding Code 164: OWIN and Katana with Louis DeJardin Show Notes: Intro (00:44) Scott and Louis explain what OWIN is. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>This week on Herding Code, the guys talk to Louis DeJardin about OWIN &#8211; the Open Web Interface for .NET &#8211; and Katana, an open source OWIN implementation for ASP.NET and IIS.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0164-OWIN.mp3">Herding Code 164: OWIN and Katana with Louis DeJardin</a>
<p>Show Notes:</p>
<ul>
<li>Intro </li>
<ul>
<li>(00:44) Scott and Louis explain what OWIN is. </li>
<li>(01:33) Louis explains the difference between OWIN (the community standard) and Katana (actual bits &#8211; an implementation of the OWIN standard for ASP.NET). </li>
<li>(03:18) Jon asks if this is similar to the distinction between HTTP / HTML standards and browser implementations. Louis explains what&#8217;s required for an implementer to participate in a request. Each request calls a simple func with an IDictionary&lt;string&gt; which returns a task. </li>
</ul>
<li>The killer app: middleware</li>
<ul>
<li>(04:54) Scott talks about how the pipeline might not sound like much, but it can support a lot of really useful middleware scenarios like static caching and domain splitting &#8211; especially in a way that&#8217;s common across frameworks. </li>
<li>(06:05) Louis talks about the challenge they&#8217;ve had in describing the benefit of OWIN in non-academic terms, and that it&#8217;s not until you want to apply cross-framework concerns like authentication that OWIN really shines. </li>
<li>(07:52) Scott says that previously these kinds of concerns &#8211; logging, etc. &#8211; were wrapped up in System.Web, and they had performance implications regardless of whether you used them. The pipeline model lets you avoid those hits unless you explicitly want the features. </li>
<li>(10:03) Scott mentions some of the frameworks which have implemented OWIN, including NancyFx, Fubu, ServiceStack.</li>
<li>(10:50) Kevin says that the current implementation examples are full web frameworks rather than middleware. Louis says that probably because ASP.NET and IIS already had pipeline implementations so there&#8217;s less of a forcing function than there was with Node and Ruby. Scott says that since the current implementations already have full stacks, there&#8217;s less need to plug in modular solutions. Jon says he thinks that the late arrival of NuGet and other open modular systems like this mean it&#8217;ll take a while to get traction. </li>
<li>(14:40) Louis says we&#8217;ll need a killer app, and HttpListener hosting alone isn&#8217;t that. Jon asks if you&#8217;d host Katana under IIS to manage the process. Louis says yes, and until there are other hosts than IIS he doesn&#8217;t see the hosting as a big draw &#8211; he thinks auth is probably it.</li>
<li>1640 Scott says he could see auth frameworks and scaling middleware. Louis says that David Fowler updated JabbR to run on OWIN, and was able to move some of the scale pieces into OWIN middleware.</li>
<li>(18:25) Jon asks if he can take an existing ASP.NET application to start taking advantage of middleware without rewriting the application. Louis says that if you add the Microsoft.Owin.Host.SystemWeb NuGet package, you can put an OWIN pipeline on the route table. You can also use an IHttpHandler to plug in middleware. They&#8217;re looking at third option &#8211; an integrated pipeline module which will delegate to the application if an OWIN handler doesn&#8217;t pick it up.</li>
<li>(22:22) Jon asks Louis has some other ideas for middleware, and Louis lists several (static file handlers, authentication, etc.) and points to Rack and Node as examples. He lists another example &#8211; anti-bot&#160; protection that returns an HTTP 200 for a URL pattern. </li>
</ul>
<ul>
<li>(23:50) Jon asks if it&#8217;s possible to plug things in at runtime. Louis talks about the Startup class &#8211; it&#8217;s a POCO class so you can easily work with it via IoC, plug things in whenever &#8211; it&#8217;s just code. </li>
<li>(25:05) Scott says he looked at implementing URL rewriting in middleware. Louis explains how this works perfectly with the pipeline and describes how you could also use this to monitor 404s. </li>
<li>(26:45) Scott says hosters could implement middleware to set ETAGS, enforce things, etc. </li>
<li>(27:40) Louis explains why it&#8217;s really powerful to have middleware that&#8217;s not coupled to a specific implementation like ASP.NET MVC. </li>
<li>(28:35) Jon asks if it&#8217;s possible that some of this middleware could run on hardware. Louis says it is, and gives an example with a reverse proxy. </li>
<li>(29:57) Scott talks about breaking middleware into application and networking uses and talks of some optimizations that could be done in middleware.</li>
</ul>
<li>Next </li>
<ul>
<li>(31:48) Scott asks where we go from here &#8211; are done? What&#8217;s the next goal? Louis says the current 1.0 version of Katana has IIS hosting; the 1.1 version will add production grade HttpListener and self host story, and after that it&#8217;s about supporting emerging standards and looking for synergies. Louis says documentation would be nice, but Scott says that the model is so simple that there&#8217;s not a lot to document.</li>
<li>(34:50) Scott and Louis talk about how this will affect the ecosystem in general, with an example of how smoothly the SignalR implementation worked. </li>
<li>(35:25) Jon asks about the future for hosters like Azure, AppHarbor, etc. Louis talks about an example for&#160; supporting zip file based deployment, Mono hosting. </li>
</ul>
<li>Getting involved </li>
<ul>
<li>(37:05) Louis talks about what&#8217;s available in the Katana Project, including sample code and pre-release packages. The Google Group &#8211; net-http-abstractions &#8211; is the best place to discus OWIN. </li>
<li>(38:15) Jon asks if the Katana project takes pull requests. Louis says it&#8217;s run under the MS Open Tech organization and is clear to take pull requests from developers who have signed a contributor license agreement. Jon asks for areas where they&#8217;d like help. Scott says he&#8217;d like to see lots of middleware; Louis he&#8217;d love to see an OWIN Contrib project emerge. </li>
</ul>
<li>Questions from Twitter
<ul>
<li>(41:05) Sean Massa (@endangeredmassa): Is it possible to use the DLR? </li>
<li>(41:45) Eric Hexter (@ehexter): what do MVC and Web Forms look like on OWIN. Louis says there are two exciting things there &#8211; you can have an Owin pipeline running in front of your application, or you can use self hosting to put an application inside of your own process (not supported but fun!). </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Louis DeJardin (<a href="https://twitter.com/loudej">@loudej</a>, <a href="http://whereslou.com/">blog</a>) </li>
<li><a href="http://owin.org/">OWIN &#8211; Open Web Interface for .NET</a> </li>
<li><a href="http://katanaproject.codeplex.com/">Katana Project on CodePlex</a> </li>
<li>Google Group: <a href="http://groups.google.com/group/net-http-abstractions">.NET HTTP Abstractions</a></li>
<li>NuGet package: <a href="https://nuget.org/packages/Microsoft.Owin.Host.SystemWeb">Microsoft.Owin.Host.SystemWeb</a></li>
<li>GitHub: <a title="https://github.com/ServiceStack/ServiceStack.Owin" href="https://github.com/ServiceStack/ServiceStack.Owin">ServiceStack.Owin</a></li>
<li>NuGet: <a title="https://nuget.org/packages/Nancy.Hosting.Owin/" href="https://nuget.org/packages/Nancy.Hosting.Owin/">Nancy.Hosting.Owin</a></li>
<li>NuGet: <a title="https://nuget.org/packages/FubuMVC.Katana/" href="https://nuget.org/packages/FubuMVC.Katana/">FubuMVC.Katana</a></li>
<li><a href="http://herdingcode.com/?p=216">Herding Code 60: Spark View Engine with Louis DeJardin</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/GjNwkszdFgc" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-164-owin-and-katana-with-louis-dejardin/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/AXHllPiUIKg/HerdingCode-0164-OWIN.mp3" fileSize="23948656" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk to Louis DeJardin about OWIN &amp;#8211; the Open Web Interface for .NET &amp;#8211; and Katana, an open source OWIN implementation for ASP.NET and IIS. Download / Listen: Herding Code 164: OWIN and Katana with Louis DeJar</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk to Louis DeJardin about OWIN &amp;#8211; the Open Web Interface for .NET &amp;#8211; and Katana, an open source OWIN implementation for ASP.NET and IIS. Download / Listen: Herding Code 164: OWIN and Katana with Louis DeJardin Show Notes: Intro (00:44) Scott and Louis explain what OWIN is. [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-164-owin-and-katana-with-louis-dejardin/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/AXHllPiUIKg/HerdingCode-0164-OWIN.mp3" length="23948656" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0164-OWIN.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 163: Sticker Tales and Building Windows Store apps with Damien Guard and Robert Sweeney</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/Pl5fGyqqxW0/</link>
		<comments>http://herdingcode.com/herding-code-163-sticker-tales-and-building-windows-store-apps/#comments</comments>
		<pubDate>Wed, 10 Apr 2013 19:53:59 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=531</guid>
		<description><![CDATA[This week on Herding Code, the guys talk to Damien Guard and Robert Sweeney about Sticker Tales (a Windows Store application for kids), some challenges in building touch applications for kids, their CSharpAnalytics open source library, and a companion app they built for Western Digital. Download / Listen: Herding Code 163: Sticker Tales and Building [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>This week on Herding Code, the guys talk to Damien Guard and Robert Sweeney about Sticker Tales (a Windows Store application for kids), some challenges in building touch applications for kids, their CSharpAnalytics open source library, and a companion app they built for Western Digital.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0163-Sticker-Tales-and-Building-Windows-Store-apps.mp3">Herding Code 163: Sticker Tales and Building Windows Store apps</a>
<p>Show Notes:</p>
<ul>
<li>Introductions </li>
<ul>
<li>(00:39) Damien describes what he&#8217;s been up to since we last talked to him. </li>
<li>(01:25) Robert worked on the Windows user interface, then XBox.com, then several apps for NetFlix. </li>
<li>(02:57) Jon asked about the experience of building high scale customer facing applications at XBox and NetFlix. Damian tells about how they ran the XBox store on two servers. </li>
</ul>
<li>Building Sticker Tales</li>
<ul>
<li>(03:38) Jon asks how they decided to build a sticker book app. Robert explains how they got started. </li>
<li>(04:45) Robert describes how they decided to spend some money on professional illustration. </li>
<li>(05:40) Jon describes how Sticker Tales works and how he loves watching what his five year old daughter comes up with, especially how she plays with scale. Robert says he sees the same as his daughter </li>
<li>(6:57) Damien describes some of the surprises they saw in user testing. </li>
<li>(8:30) Scott K asks if their experiences in watching how kids interact with touch gestures will influence their design in general. </li>
<li>(9:18) Damien talks about some of the changes the kids inspired, especially using direction of motion to flip things. Jon says he wants this flip gesture everywhere, and Scott K says he thinks kids should be interaction testing all touch interfaces. </li>
<li>(10:44) Damien gives another example with how pinch / zoom didn&#8217;t work well for kids, and they added a handle instead. </li>
<li>(11:26) Jon asks about how they were interacting with the illustrators. Robert describes the interaction and how they handled different image sizes, exporting, etc. </li>
</ul>
<li>In-app purchases</li>
<ul>
<li>(13:37) Jon asks about the &quot;free app + in app purchase&quot; model. Robert explains why they chose that model.</li>
<li>(14:48) Jon asks if the in-app purchases were difficult to set up. Damien says yes and explains how it was set up. Robert says the purchasing is easy, but the delivery is up to you as the developer. </li>
</ul>
<li>Google Analytics and the CSharpAnalytics library</li>
<ul>
<li>(17:00) K Scott asks about what kind of analytics they were using. Damien explains how they used Google Analytics and explains they published that library as CSharpAnalytics on GitHub. Damien likes tracking usage patterns, Robert says he loves the real-time and geographic views. </li>
<li>(18:19) Robert says they track initiated vs. completed purchases, and they see it&#8217;s only about 10%. Jon speculates that&#8217;s because kids start the purchase and the parents veto it. </li>
<li>(19:08) K Scott asks if it&#8217;s only available for Windows 8. Damien says that&#8217;s all that&#8217;s documented, but he&#8217;s set it up to work with Windows Phone as well. </li>
<li>(19:30) Jon asks about how auto-analytics work. </li>
</ul>
<li>Platform targeting &#8211; iPad future, Windows 8 implementation</li>
<ul>
<li>(20:40) Kevin asks if they&#8217;re looking at porting this to iPad. Robert says they&#8217;re looking at using Xamarin for that. </li>
<li>(21:24) Jon asks about what Windows 8 integration points they&#8217;re using. Robert discusses live tiles, sharing, search, and background download API support. </li>
<li>(22:58) Jon asks if they used C# / XAML or HTML. Damien says they went with C# / XAML partly because the touch API support seemed better early on. </li>
</ul>
<li>SharpDX and performance</li>
<ul>
<li>(23:30) Damien explains that they&#8217;re using SharpDX to be able to take screenshots for live tiles, sharing, etc. Jon gets confused and thinks they&#8217;re using SharpDX everywhere, but Robert explains it&#8217;s only for saving screenshots &#8211; everything else is using image controls. </li>
<li>(26:54) Jon asks if they ran into any performance issues. Robert explains some of the guidelines they&#8217;d learned at NetFlix and says that everything&#8217;s worked really well in StickerTales. Damien says they&#8217;ve seen great performance on Surface / ARM as well. Jon says he&#8217;s seen Audacity recompiled for ARM and it worked great on Surface, too. </li>
</ul>
<li>Data storage and MVVM perspective</li>
<ul>
<li>(28:34) Jon asks what they&#8217;re using for data storage; Damien says using XML.</li>
<li>(28:46) Robert says they&#8217;re not using MVVM because it just doesn&#8217;t work with the Microsoft tools and isn&#8217;t worth it for the kinds of thin clients they&#8217;ve been building, even at NetFlix.</li>
</ul>
<li>Western Digital companion application</li>
<ul>
<li>(30:07) Jon asks how about their next project, a companion application for Western Digital. Damien describes how Western Digital wanted an application that would present an all-up aggregate view of media on external media.</li>
<li>(30:42) Damien says they using SQLite for that project and explains the challenges they ran into with hierarchical data storage in a relational database engine.</li>
</ul>
<li>Unit Testing Windows Store application code</li>
<ul>
<li>(32:52) Kevin asks about the testing story. Damien says they used MSTest and it all worked fine, with the exception of determining code coverage. Jon asks some questions about testing frameworks and test focus for Windows Store applications.</li>
<li>(35:20) Robert says the WinRT platform wasn&#8217;t written in a very testable manner &#8211; there are lots of static classes and a generally test resistant API.</li>
</ul>
<li>Business Challenges and Opportunity for Windows Store Developers</li>
<ul>
<li>(36:38) Jon asks about the challenges of building and running a company that&#8217;s building Windows 8 applications. Robert describes some of the perception and education issues they face in selling the potential to customers.</li>
<li>(38:20) Scott K compares the current Windows Store opportunity to the pre-iOS Mac development market &#8211; a nice place to create a niche product and make a good living. Damien says it is nice to be featured in the store, and that&#8217;s difficult on other platforms. Robert says that ease of developing Windows Store applications means that you still need to market your applications.</li>
</ul>
</ul>
<p>Show Links:</p>
<ul>
<li>Damien Guard (<a href="https://twitter.com/damienguard">@damienguard</a>, <a href="http://damieng.com/">blog</a>)</li>
<li>Robert Sweeney (<a href="http://www.linkedin.com/in/rsweeney21">LinkedIn</a>)</li>
<li><a href="http://stickertales.com/">Sticker Tales</a></li>
<li><a title="http://attackpattern.com/" href="http://attackpattern.com/">Attack Pattern</a></li>
<li><a href="https://github.com/AttackPattern/CSharpAnalytics">CSharpAnalytics</a></li>
<li><a href="http://sharpdx.org/">SharpDX</a> </li>
<li><a href="http://attackpattern.com/portfolio/wd-companion-app/">WD Companion App</a> </li>
<li><a href="http://herdingcode.com/?p=187">Herding Code 50: Damien Guard on LINQ to SQL, Entity Framework, and Fontography</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/Pl5fGyqqxW0" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-163-sticker-tales-and-building-windows-store-apps/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/OgoVK0KxARU/HerdingCode-0163-Sticker-Tales-and-Building-Windows-Store-apps.mp3" fileSize="13855190" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk to Damien Guard and Robert Sweeney about Sticker Tales (a Windows Store application for kids), some challenges in building touch applications for kids, their CSharpAnalytics open source library, and a companion app</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk to Damien Guard and Robert Sweeney about Sticker Tales (a Windows Store application for kids), some challenges in building touch applications for kids, their CSharpAnalytics open source library, and a companion app they built for Western Digital. Download / Listen: Herding Code 163: Sticker Tales and Building [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-163-sticker-tales-and-building-windows-store-apps/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/OgoVK0KxARU/HerdingCode-0163-Sticker-Tales-and-Building-Windows-Store-apps.mp3" length="13855190" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0163-Sticker-Tales-and-Building-Windows-Store-apps.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 162: Whacha doin, Goodbye Google Reader, scriptcs and Lightning Round!</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/TFdalTyyQJs/</link>
		<comments>http://herdingcode.com/herding-code-162-whacha-doin-goodbye-google-reader-scriptcs-and-lightning-round/#comments</comments>
		<pubDate>Mon, 25 Mar 2013 18:01:55 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=527</guid>
		<description><![CDATA[This week on Herding Code, the guys talk about what they&#8217;ve been up to lately (including Kevin&#8217;s new Greater Than Parts site), lament the passing of Google Reader, talk about scriptcs, and even fit in a lightning round! Download / Listen: Herding Code 162: Whacha doin, Goodbye Google Reader, scriptcs and Lightning Round! Show Notes: [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>This week on Herding Code, the guys talk about what they&#8217;ve been up to lately (including Kevin&#8217;s new Greater Than Parts site), lament the passing of Google Reader, talk about scriptcs, and even fit in a lightning round!</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0162-Discussion.mp3">Herding Code 162: Whacha doin, Goodbye Google Reader, scriptcs and Lightning Round!</a>
<p>Show Notes:</p>
<ul>
<li>What are you up to?
<ul>
<li>(00:29) Scott K is doing MVC with a lot of JavaScript.
<ul>
<li>He laments the quality of the code he&#8217;s working with. </li>
<li>There&#8217;s a discussion of how bad code happens and how to clean it up. </li>
</ul>
</li>
<li>(07:58) Kevin&#8217;s been working on his GreaterThanParts site.
<ul>
<li>He soft launched it on twitter and got more response than he expected, but it&#8217;s been holding up. </li>
<li>It&#8217;s a full JavaScript stack &#8211; Node, Backbone, Mongo. </li>
<li>Kevin was surprised how resistant developers were to trying out the site via Google / Facebook login, so he set up an anonymous (cookie based) login. </li>
<li>Scott K has some specific feature requests. </li>
<li>Jon asks if the design feedback was coherent or contradictory. Kevin says some was really good, a lot wasn&#8217;t </li>
</ul>
</li>
<li>(15:40) Jon talks about the ASP.NET Jump Start event he did in February and some upcoming Web Camp he&#8217;s doing &#8211; Denmark, Istanbul, Sunnyvale, San Diego. In his spare time he&#8217;s working on a book about programming Windows 8.
<ul>
<li>Scott K mentions a blog post he read about a developer who was frustrated he couldn&#8217;t store password protected zip files or preview office docs. Jon says it&#8217;s an app model and it&#8217;s different than building desktop apps. Kevin wonders about how the updates will work for Windows Store apps. </li>
<li>Scott K says he read about limitations in displaying help files. Jon says that some things are easier to do using the HTML dev model, and he&#8217;s seeing some people writing business logic in C# and using it in an HTML app. </li>
<li>K Scott talks about the current campaign to pay developers for apps. Jon says he thinks that may be driven by the fact that all the tech columnists just write about the number of apps in the store, but he agrees that fewer quality apps is better. The Windows Store has a try / buy model, which effectively halves the number of apps required compared to Android and iOS. Jon talks about how he&#8217;s been using the Surface RT. </li>
</ul>
</li>
<li>(25:49) Google Reader
<ul>
<li>K Scott asks if anyone&#8217;s upset. Kevin is. </li>
<li>Scott K hasn&#8217;t used it in a while because he just uses Twitter and an RSS reader he likes. </li>
<li>Jon says he used to read tons of feed, but he now gets most of his info off Twitter, Hacker News, and TheCadmus.com </li>
<li>Scott K says he&#8217;s going to need to replace Reader because he follows some feeds he cares about that will never make their way onto Hacker News. </li>
<li>Jon says he used to use Reader more when it had Google Gears support. He talks about how he tried to write his own RSS reader which never materialized, but he learned a lot along the way. </li>
<li>Kevin says the bigger problem is that so many apps use Google Reader as an RSS sync backend. </li>
<li>Jon says he&#8217;s happy that the whole RSS system isn&#8217;t dependent on Google Reader, and that it&#8217;s a good thing that major parts of the web stayed open. </li>
</ul>
</li>
<li>(34:45) scriptcs
<ul>
<li>K Scott overviews the idea. </li>
<li>Scott K says he thinks it&#8217;s interesting &#8211; a natural use of Roslyn. He&#8217;s been wanting something that would output assemblies so it could create projects. </li>
<li>Jon talks about some of the samples they&#8217;ve got, including WPF, Mono, etc. He says he&#8217;d prefer it to PowerShell since it could be more portable and the syntax is better. </li>
<li>Kevin says many of these ideas came from the Node community. He&#8217;s really enjoying the low overhead of working in vim. Scott agrees. Jon says he doesn&#8217;t see Visual Studio delays, maybe because he&#8217;s not using heavy add-ins. A border skirmish erupts. Kevin says that he thinks that .NET programming kind of requires Visual Studio. Jon like the new web tools stuff. </li>
</ul>
</li>
<li>(44:27) Lightning Round!
<ul>
<li>K Scott asks if anyone cares about the S4 release. Nobody does. We&#8217;re all kind of tired of smartphone releases. </li>
<li>K Scott asks what we&#8217;d recommend for teaching someone to program. Scott K, Kevin, and Jon all agree that they&#8217;d start with the web and JavaScript and talk about some of their favorite tools. </li>
<li>K Scott asks what everyone thinks about the new Rearden.js library with the Rearden Metal templating system. </li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li><a href="http://www.greaterthanparts.com/">Greater Than Parts</a> &#8211; Kevin&#8217;s new &quot;simple shopping for complex projects&quot; site</li>
<li><a href="http://channel9.msdn.com/Series/Building-Web-Apps-with-ASP-NET-Jump-Start">ASP.NET Jump Start</a> </li>
<li><a href="http://weblogs.asp.net/jgalloway/archive/2013/03/15/announcing-web-camps-spring-tour-2013.aspx">Web Camps tour</a> &#8211; Jon&#8217;s post announcing the Spring 2013 tour<!--EndFragment--></li>
<li><a title="http://blog.kulman.sk/why-are-there-no-great-windows-8-apps-because-of-winrt-a-developers-view/" href="http://blog.kulman.sk/why-are-there-no-great-windows-8-apps-because-of-winrt-a-developers-view/">Blog post: Why are there no great Windows 8 apps? Because of WinRT. A developer&#8217;s view</a> </li>
<li><a title="http://en.wikipedia.org/wiki/Gears_(software)" href="http://en.wikipedia.org/wiki/Gears_(software)">Google Gears</a> </li>
<li><a title="http://treesurgeon.codeplex.com/" href="http://treesurgeon.codeplex.com/">Tree Surgeon</a> </li>
<li><a href="http://googlereader.blogspot.com/2013/03/powering-down-google-reader.html">Powering Down Google Reader</a> </li>
<li><a href="http://thecadmus.com/">TheCadmus</a> </li>
<li><a href="http://codebetter.com/glennblock/2013/02/28/scriptcs-living-on-the-edge-in-c-without-a-project-on-the-wings-of-roslyn-and-nuget/">scriptcs &#8211; Living on the edge in C# without a project on the wings of Roslyn and Nuget</a> </li>
<li><a title="http://scriptcs.net/" href="http://scriptcs.net/">http://scriptcs.net/</a> </li>
<li><a href="http://livereload.com/">LiveReload</a> </li>
<li><a title="http://www.codecademy.com/#!/exercises/0" href="http://www.codecademy.com/">Codecademy</a> </li>
<li><a href="http://jsbin.com">JS Bin</a> </li>
<li><a href="http://repl.it">repl.it</a> </li>
<li><a href="https://github.com/reardenjs/reardenjs">ReardenJS</a> </li>
<li><a href="https://github.com/madrobby/vapor.js">Vapor.js</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/TFdalTyyQJs" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-162-whacha-doin-goodbye-google-reader-scriptcs-and-lightning-round/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/cOw51HIKe64/HerdingCode-0162-Discussion.mp3" fileSize="17240198" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk about what they&amp;#8217;ve been up to lately (including Kevin&amp;#8217;s new Greater Than Parts site), lament the passing of Google Reader, talk about scriptcs, and even fit in a lightning round! Download / Listen: Herd</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk about what they&amp;#8217;ve been up to lately (including Kevin&amp;#8217;s new Greater Than Parts site), lament the passing of Google Reader, talk about scriptcs, and even fit in a lightning round! Download / Listen: Herding Code 162: Whacha doin, Goodbye Google Reader, scriptcs and Lightning Round! Show Notes: [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-162-whacha-doin-goodbye-google-reader-scriptcs-and-lightning-round/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/cOw51HIKe64/HerdingCode-0162-Discussion.mp3" length="17240198" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0162-Discussion.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 161: Single Page Applications with John Papa and Ward Bell</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/2wmLEXfnKCs/</link>
		<comments>http://herdingcode.com/herding-code-161-single-page-applications-with-john-papa-and-ward-bell/#comments</comments>
		<pubDate>Thu, 14 Mar 2013 22:56:10 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=523</guid>
		<description><![CDATA[While at MVP Summit, Jon and the Scotts talk to John Papa and Ward Bell about Single Page Applications, the new ASP.NET and Web Tools 2012.2 SPA templates, and John and Ward&#8217;s new Hot Towel SPA template (you need a hot towel at a spa, get it?). Download / Listen: Herding Code 161: Single Page [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>While at MVP Summit, Jon and the Scotts talk to John Papa and Ward Bell about Single Page Applications, the new ASP.NET and Web Tools 2012.2 SPA templates, and John and Ward&#8217;s new Hot Towel SPA template (you need a hot towel at a spa, get it?).</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0161-Single-Page-Applications.mp3">Herding Code 161: Single Page Applications with John Papa and Ward Bell</a>
<p>Show Notes:</p>
<ul>
<li><strong>Intro</strong>
<ul>
<li>(01:10) K Scott asks John Papa about to overview what&#8217;s just been released. </li>
<li>(01:24) Jon explains how he remembers the ASP.NET and Web Tools 2012 release, comparing it to a video game &quot;map pack&quot;. </li>
<li>(02:04) John says that one of the new features in this release is that you can create new File / New / Project templates for ASP.NET MVC using VSIX. </li>
<li>(03:18) Scott K says you can find all the new goodies at <a href="http://asp.net/vnext">http://asp.net/vnext</a>. </li>
</ul>
</li>
<li><strong>Hot Towel overview</strong>
<ul>
<li>(03:37) K Scott asks what happens when you create a new Hot Towel project. </li>
<li>(04:30) K Scott asks what&#8217;s included:
<ul>
<li>Durandal </li>
<li>Knockout </li>
<li>Breeze </li>
<li>Some other nice things: jQuery, Bootstrap, Moment </li>
<li>The useful parts of the ASP.NET stack </li>
</ul>
</li>
</ul>
</li>
<li><strong>Durandal and getting the various libraries to play well together</strong>
<ul>
<li>(06:00) Jon asks if everything in the Hot Towel parts fit together well, and if it was hard to get them to play well together. </li>
<li>(07:14) Durandal uses Require.js for AMD for script dependency resolution. Hot Towel is still using ASP.NET Bundling and Minification system, although when you deploy you can use Durandal&#8217;s compilation system. </li>
<li>(09:03) Ward talks about what he likes about Durandal.
<ul>
<li>You can bring any thing you know from Caliburn.Micro in, including convention based view composition. </li>
<li>It includes a lot of useful debugging and tracing information in the console. That includes intercepting problems with Sammy.js (which would otherwise just report &quot;Error&quot; without any context), binding failures, etc. </li>
</ul>
</li>
<li>(10:24) Hot Towel also includes Toaster, which is really useful for debugging. </li>
<li>(11:15) Hot Towel has really been carefully assembled and and configured so it all really works well together. </li>
<li>(12:06) John says Hot Towel solves a common problem people experience when getting started with SPA development &#8211; it&#8217;s hard to figure out which libraries to use and how to hook them together. </li>
</ul>
</li>
<li><strong>What&#8217;s the sweet spot? Line of business apps? Websites?</strong>
<ul>
<li>(13:20) K Scott asks if the sweet spot for Hot Towel is for for line of business applications. John says that&#8217;s what it&#8217;s been used for. It&#8217;s great for data intensive applications, but he says it&#8217;s not a good fit if you&#8217;re just building a website. </li>
<li>(13:53) Jon asks about the SEO story. John says there really isn&#8217;t a great solution for it, but says that for most SPA stories &#8211; e.g. line of business CRUD apps &#8211; you probably don&#8217;t need or want search engines to be able to read it. For some cases, like a store scenario, you might want a hybrid solution. The store would be a standard website that&#8217;s SEO friendly, but when you shift to buying something you enter a SPA experience. </li>
</ul>
</li>
<li><strong>Organize all the scripts!</strong>
<ul>
<li>(15:45) K Scott asks how John organizes code for a SPA. John says he likes to put all the application specific scripts into a separate /scripts/app folder. Jon says he noticed that in the RTM version of the SPA template, and Ward and John confess to having been the driving forces behind that change. </li>
<li>(17:37) John talks about the two crowds who are using these scripts &#8211; there are people who have been using JavaScript for a while, and developers who are used to C# and are starting to do more JavaScript development. Simple things like pascal casing vs. camel casing make a big difference in how experienced JavaScript developers perceive and enjoy the shipped JavaScript code. </li>
</ul>
</li>
<li><strong>Bringing grownup architecture into client side coding</strong>
<ul>
<li>(18:19) Ward talks about other problems in earlier versions, like lumping the viewmodel and data access, etc. He says he understands the effort to make things easy for beginners to figure out, and Scott talks about some of the sloppy, oversimplified JavaScript in some other Microsoft releases. John says that the new script organization in the release turned out both better and easier to understand. </li>
<li>(20:48) Scott talks about his thoughts on client-side MVC: HTML is the model, CSS is the view, JavaScript is the controller. </li>
<li>(22:04) John says we&#8217;ve been figuring out of the past few years that it&#8217;s not okay to just throw JavaScript code up there until it works. He says he often surveys developers and asks how many of them have read a book on JavaScript with dismaying results. Scott says it&#8217;s not just a problem with disorganized code, you end up with resource management issues. Scott, John and Ward commiserate on the problems they&#8217;ve seen with sloppy code in long running JavaScript applications. </li>
<li>(24:31) Ward talks about the importance of good coding principles, especially the single responsibility principle. John says SRP is incredibly useful just about everywhere. Scott says he sees the same thing with testable JavaScript code. </li>
</ul>
</li>
<li><strong>Hello World and Hello World scenarios</strong>
<ul>
<li>(26:37) K Scott asks if there&#8217;s a hello world style application when you create a new Hot Towel application. John says there is, but it&#8217;s absolutely minimal so that it&#8217;s actually useable as a starting point for an application. There&#8217;s no database. Ward says Hot Towel has two simple pages with just enough code to get you started; use the other SPA templates to learn about the frameworks, then build your real app with Hot Towel &#8211; if you&#8217;re going with a Knockout-based UI. </li>
<li>(28:37) Scott K says he sees Knockout and Angular cluttering your HTML in ways that violate some of the principles discussed earlier. Ward that you can do both without declarative HTML binding if you want. There&#8217;s a discussion of convention based bindings; K Scott asks if the Caliburn.Micro convention based bindings are used in Hot Towel, Ward explains why it&#8217;s not done. </li>
<li>(31:40) John talks about some poor practices he sees in Knockout demos which just throw in some JavaScript code after the bindings rather than just using a click binding or using delegation. </li>
<li>(33:32) Scott asks if we&#8217;d have imagined 10 years ago that we&#8217;d be writing JavaScript code. </li>
<li>(33:54) Ward says the thing that blows his mind is that we&#8217;re talking about a ToDo list like it&#8217;s rocket science. There&#8217;s a description of the canonical sample scenarios. Jon proposes the Contoso SPA, Scott talks about how everyone was writing blog samples a few years ago. </li>
<li>(35:43) John explains that he wrote Hot Towel so that you could use it without having to rip out a bunch of demo code; Ward says it also completes the stack, providing IoC, screen management, etc. The price tag of restructuring around composed JavaScript libraries is a lot of small files, figuring out AMD, etc. John and Ward praise Durandal some more. </li>
<li>(38:52) Scott K says there&#8217;s still a tooling problem with lots of injected JavaScript files. Ward and John say they don&#8217;t see that as long as they keep things organized. </li>
</ul>
</li>
<li><strong>Getting started with SPA development</strong>
<ul>
<li>(40:27) K Scott asks for two things developers should do before getting started with SPAs. John says the first thing is to remember that you can apply your current good coding practices, the second is that you should treat the code as a real language and take advantage of patterns, especially the module pattern. Ward says use your intuition &#8211; if something smells bad, stop doing it and ask for help. </li>
<li>(43:03) John says don&#8217;t worry too much about which framework is the best, just pick one that feels natural. There&#8217;s a discussion of how the different frameworks have different feels, and you can just pick one and get started. </li>
</ul>
</li>
<li><strong>Did Silverlight development experience help?</strong>
<ul>
<li>(45:15) Jon says he first encountered a lot of these issues in Silverlight development. John says yes, and explains how his skills applied. Ward says he can&#8217;t comment on how it&#8217;d have been for him if he hadn&#8217;t used Silverlight, but that if you do have Silverlight experiences they&#8217;ll definitely apply. John talks about his experiences with Code Camper. </li>
</ul>
</li>
<li><strong>Can mere mortals create VSIX MVC templates?</strong>
<ul>
<li>(50:18) K Scott asks how difficult it was to create a VSIX based MVC template and if listeners could start with it. John says he waited for Ward to figure it and he copied Ward&#8217;s work, which wasn&#8217;t too bad. Ward explains what was difficult &#8211; mostly it comes down to poor documentation and duplicate references to files. He says he also hit issues with pulling in NuGet packages from multiple sources. Hot Towel is available as a NuGet package as well. </li>
</ul>
</li>
<li>Randomness
<ul>
<li>(58:11) The customary discussion of Ward&#8217;s wardrobe occurs. </li>
<li>(1:00:00) John talks about his upcoming PluralSight courses. Ward says he&#8217;s excited that BreezeJS was selected as part of the SPA story for ASP.NET and that he and IdeaBlade are focused on helping people as they&#8217;re getting started with Single Page Application development.&#160; </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Ward Bell (<a href="http://www.neverindoubtnet.blogspot.com/">blog</a>, <a href="https://twitter.com/wardbell">@wardbell</a>, <a href="http://twitter.com/wardbellsoutfit">@wardbellsoutfit</a>) </li>
<li>John Papa (<a href="http://johnpapa.net/">blog</a>, <a href="http://twitter.com/john_papa">@john_papa</a>) </li>
<li><a title="http://www.asp.net/single-page-application/overview/templates/hottowel-template" href="http://www.asp.net/single-page-application/overview/templates/hottowel-template">Hot Towel template</a> documentation on the ASP.NET site </li>
<li><a href="http://jpapa.me/spajsps">John Papa&#8217;s new Single Page Apps JumpStart course</a> on Pluralsight </li>
<li><a href="http://www.breezejs.com/">Breeze</a> &#8211; Build rich web apps in JavaScript with techniques you know </li>
<li><a href="http://herdingcode.com/?p=318">Herding Code 111 &#8211; John Papa on the Open Source Fest at MIX11</a> </li>
<li><a href="http://herdingcode.com/?p=499">Herding Code 155 &#8211; Ward Bell on Single Page Applications and Breeze</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/2wmLEXfnKCs" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-161-single-page-applications-with-john-papa-and-ward-bell/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/lfkhf61w4Ss/HerdingCode-0161-Single-Page-Applications.mp3" fileSize="34216314" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>While at MVP Summit, Jon and the Scotts talk to John Papa and Ward Bell about Single Page Applications, the new ASP.NET and Web Tools 2012.2 SPA templates, and John and Ward&amp;#8217;s new Hot Towel SPA template (you need a hot towel at a spa, get it?). Down</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>While at MVP Summit, Jon and the Scotts talk to John Papa and Ward Bell about Single Page Applications, the new ASP.NET and Web Tools 2012.2 SPA templates, and John and Ward&amp;#8217;s new Hot Towel SPA template (you need a hot towel at a spa, get it?). Download / Listen: Herding Code 161: Single Page [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-161-single-page-applications-with-john-papa-and-ward-bell/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/lfkhf61w4Ss/HerdingCode-0161-Single-Page-Applications.mp3" length="34216314" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0161-Single-Page-Applications.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 160: Glimpse 1.0 release and Semantic Release Notes with Nik Molnar and Anthony vander Hoorn</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/cY0jzK7blRY/</link>
		<comments>http://herdingcode.com/herding-code-160-glimpse-1-0-release-and-semantic-release-notes-with-nik-molnar-and-anthony-vander-hoorn/#comments</comments>
		<pubDate>Fri, 08 Mar 2013 21:34:39 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=519</guid>
		<description><![CDATA[While at MVP Summit, Jon and the Scotts talk to Nik and Anthony about the Glimpse 1.0 release, Semantic Release Notes and NuGet versioning. Download / Listen: Herding Code 160: Glimpse 1.0 release and Semantic Release Notes with Nik Molnar and Anthony vander Hoorn Show Notes: Intro (00:38) Nik and Anthony remind us of what [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>While at MVP Summit, Jon and the Scotts talk to Nik and Anthony about the Glimpse 1.0 release, Semantic Release Notes and NuGet versioning.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0160-Glimpse.mp3">Herding Code 160: Glimpse 1.0 release and Semantic Release Notes with Nik Molnar and Anthony vander Hoorn</a>
<p>Show Notes:</p>
<ul>
<li><strong>Intro</strong></li>
<ul>
<li>(00:38) Nik and Anthony remind us of what Glimpse does. </li>
</ul>
<li><strong>High level: What have they been up to? </strong>
<ul>
<li>(01:27) Nik explains how they&#8217;re now sponsored by RedGate software, but it Glimpse continues to be an open source project under Apache 2 license. The end result is that they&#8217;re both able to work 40 hours a week on it. </li>
<li>Anthony talks about the change to remove the dependency on System.Web.dll, allowing for compatibility with ASP.NET Web API and OWIN. </li>
</ul>
</li>
<li><strong>New features in Glimpse 1.0 </strong>
<ul>
<li>(03:24) Jon asks about new features. Nik says they&#8217;re mostly at feature parity with the previous release, with a lot of key refactoring. Some new features include:
<ul>
<li>Support for SignalR </li>
<li>Routes are available in Web Forms </li>
<li>They can determine and surface route constraints </li>
</ul>
</li>
<li>They&#8217;re working on MVC 4 support, System.Web.Optimizations, and Web API. </li>
<li>Anthony says the big goal of refactoring is to allow for fortnightly releases, which meant they needed to rework the core into something they could build on quickly. </li>
<li>(05:42) Jon asks about MVC 4 support. Nik says that everything in the MVC 3 package works, with the exception of Task based async support and newly added features like System.Web.Optimizations and Web API. Synchronous controllers and AsyncControllers work. </li>
</ul>
</li>
<li><strong>Notifications, Semantic Release Notes </strong>
<ul>
<li>(06:25) Anthony talks about support they&#8217;ve added to work better with more frequent updates, including update notifications. </li>
<li>That got them thinking &#8211; can they also show more information about what&#8217;s in the update? What about plugin updates? </li>
<li>Nik talks about what they&#8217;re doing to pull information from NuGet about installed packages. </li>
<li>(11:08) Nik explains how the extensibility model uses an attribute which indicates that the plugin came from a NuGet package and indicates which version of the package it came from. </li>
<li>(12:12) They want to give you information about what&#8217;s changed between releases, which led them to Semantic Release Notes. </li>
<li>Semantic Release Notes are written in Markdown format, but include typed information (inspired by Todo.txt) which allows them to determine what&#8217;s changed between any two releases. </li>
<li>(15:45) Jon and Scott K ask about why they picked Markdown as opposed to some other formats. Nik explains a lot of reasons, including compatibility with any text based release notes system. </li>
<li>(17:20) This allows them to present &quot;The Sports Center of Release Notes&quot; which showcases the relevant highlights. </li>
<li>(17:40) Anthony says NuGet release notes are virtually unused because they don&#8217;t offer any value. They&#8217;ve been talking to developers who say they&#8217;d be happy to include release notes if they were actually useful. </li>
<li>(19:33) Nik says that another benefit of a text-based format is that it could be extracted from commit messages. </li>
<li>(20:20) Nik says that NuGet has raised the water level the experience of installing release notes, understanding what an update does, configuration, overall experience. </li>
<li>(21:28) Nik says that Semantic Release Notes could also inform developers of Semantic Versioning problems &#8211; e.g. if you&#8217;ve got a breaking change, you should be bumping the major version number. </li>
</ul>
</li>
<li><strong>Problems with NuGet packages targeting product versions </strong>
<ul>
<li>(22:15) Anthony says they&#8217;ve run into some issues they&#8217;ve run into with NuGet. One issue they&#8217;ve run into is that developers often unwittingly install the Glimpse core package rather than the Glimpse.MVC package, which pulls in the core. They&#8217;re thinking about instead they could look at packages already installed in the project, determine that it&#8217;s an MVC project (for instance), and recommend installing the correct package (Glimpse.MVC in this case). </li>
<li>(26:00) There&#8217;s a discussion about problems to be considered with dependency scanning, notifying users, etc. </li>
<li>(27:55) Scott K asks about how this would work with locally hosted NuGet servers, MyGet, etc. Nik says they&#8217;ve seen a lot of cases of custom Glimpse plugins for things like e-commerce and internal information. </li>
<li>(28:55) There&#8217;s a MyGet feed with the nightly release, as well as a community feed for plugins. </li>
<li>(29:38) Scott K asks about how it works with local packages specifically. </li>
<li>(30:10) Nik talks about the problem with package explosion. NuGet allows you to target a specific .NET framework version, but not product versions. Jon asks why not just install Glimpse.MVC2, Glimpse.MVC3, etc. Anthony says this is a problem for any project that tries to factor things into a core with version specific dependant packages. </li>
<li>(34:28) Jon says they&#8217;re working hard to solve this problem, but would like to not have to. Anthony agrees: this is something he&#8217;d like see handled by NuGet itself. </li>
<li>(25:28) Nik says this is a growing problem, with examples from Windows 8 development. Jon talks about how he sees this problem in MVC 4. Anthony says he sees things moving in a good direction and that these are growing pains. </li>
<li>(37:25) Scott K asks if this is a problem that they&#8217;re seeing just because they have an ecosystem. </li>
<li>(38:40) Jon says he sees some people using VSIX instead of NuGet in cases where NuGet is limited. Nik says he&#8217;s frustrated that you can&#8217;t package up tooling &#8211; you can create a custom Web Platform Installer package at the high level, you can create a package.config at the project level, but there&#8217;s no solution for the installed tooling. </li>
</ul>
</li>
<li><strong>Miscellaneous jibber jabber and future possible features </strong>
<ul>
<li>(40:55) Anthony talks about the problems they&#8217;ve run into with XML documents and Sandcastle. </li>
<li>(42:48) Jon asks about possible future features. Scott K he&#8217;d like to see a plugin for Fiddler. Anthony talks about how they&#8217;re in a unique position with insight into the entire request pipeline, from browser through server and back to the browser. </li>
<li>(45:30) Scott K talks about how OWIN support allows access to a lot of other web stacks, too. </li>
<li>(45:55) Nik says that they include the Glimpse request ID as a header now, so you can trace the request in Fiddler or other network tools. </li>
<li>(47:00) Anthony says they&#8217;re realizing that they can do a lot more than just surface troubleshooting information for people who are learning, talking about the potential for an extensible mini-dashboard which can show really intelligent information &#8211; e.g. inform me if a request makes more than three database calls. </li>
<li>(50:14) Jon asks if there are any plugins which analyze security. There&#8217;s a discussion about automated OWASP analysis. </li>
<li>(52:10) Anthony says they&#8217;re talking to Brendan Forster about displaying decision trees visually. </li>
<li>(54:54) Jon asks what they&#8217;re looking at doing long term. Nik says they&#8217;re looking at doing some monthly conversations for developers. </li>
<li>(56:14) Jon asks how people can get involved. Answer: go to GetGlimpse.com. </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li><a href="http://getglimpse.com/">GetGlimpse.com</a> </li>
<li><a href="http://www.semanticreleasenotes.org/">Semantic Release Notes</a> proposal</li>
<li><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0124-Anthony-van-der-Hoorn-and-Nik-Molnar-on-Glimpse.mp3">Herding Code 124: Anthony van der Hoorn and Nik Molnar on Glimpse</a> </li>
<li><a href="http://www.blog.anthonyvanderhoorn.com/">Anthony van der Hoorn</a> (<a href="http://twitter.com/anthony_vdh">@anthony_vdh</a>) </li>
<li>Nik Molnar (<a href="http://twitter.com/#!/nikmd23">@nikmd23</a>) </li>
<li><a href="http://shfb.codeplex.com/">Sandcastle Help File Builder</a> </li>
<li><a href="http://owin.org/">OWIN: Open Web Interface for .NET</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/cY0jzK7blRY" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-160-glimpse-1-0-release-and-semantic-release-notes-with-nik-molnar-and-anthony-vander-hoorn/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

<enclosure url="http://herdingcode.com/wp-content/uploads/HerdingCode-0124-Anthony-van-der-Hoorn-and-Nik-Molnar-on-Glimpse.mp3" length="47267831" type="audio/mpeg" />
		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/PQ03MK3PvjI/HerdingCode-0160-Glimpse.mp3" fileSize="32140019" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>While at MVP Summit, Jon and the Scotts talk to Nik and Anthony about the Glimpse 1.0 release, Semantic Release Notes and NuGet versioning. Download / Listen: Herding Code 160: Glimpse 1.0 release and Semantic Release Notes with Nik Molnar and Anthony van</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>While at MVP Summit, Jon and the Scotts talk to Nik and Anthony about the Glimpse 1.0 release, Semantic Release Notes and NuGet versioning. Download / Listen: Herding Code 160: Glimpse 1.0 release and Semantic Release Notes with Nik Molnar and Anthony vander Hoorn Show Notes: Intro (00:38) Nik and Anthony remind us of what [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-160-glimpse-1-0-release-and-semantic-release-notes-with-nik-molnar-and-anthony-vander-hoorn/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/PQ03MK3PvjI/HerdingCode-0160-Glimpse.mp3" length="32140019" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0160-Glimpse.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 159: Catching up with Oren Eini on RavenDB</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/8YS3Y1LAAw4/</link>
		<comments>http://herdingcode.com/herding-code-159-catching-up-with-oren-eini-on-ravendb/#comments</comments>
		<pubDate>Tue, 05 Mar 2013 08:45:56 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=514</guid>
		<description><![CDATA[This week on Herding Code, the guys talk with Oren Eini (a.k.a. Ayende Rahien) about what&#8217;s new with RavenDB. Download / Listen: Herding Code 159: Catching up with Oren Eini on RavenDB Show Notes: (00:47) Introduction and review of document databases and RavenDB Oren gives us a quick overview of document databases and RavenDB Relational [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>This week on Herding Code, the guys talk with Oren Eini (a.k.a. Ayende Rahien) about what&#8217;s new with RavenDB.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0159-RavenDB.mp3">Herding Code 159: Catching up with Oren Eini on RavenDB</a>
<p>Show Notes:</p>
<ul>
<li>(00:47) Introduction and review of document databases and RavenDB
<ul>
<li>Oren gives us a quick overview of document databases and RavenDB </li>
<li>Relational databases work for the kind of applications we were building in the early &#8217;90&#8217;s. We can kind of make them work in our current applications but it takes too much work. </li>
<li>RavenDB is a document database which stores JSON documents. </li>
<li>JSON documents can store arbitrarily complex data very easily. </li>
</ul>
</li>
<li>(04:35) Comparing accuracy and data consistency between document databases and relational databases
<ul>
<li>Jon asks about Oren&#8217;s comments on a recent .NET Rocks podcast in which he said that document databases allow us to be more correct than relational databases. </li>
<li>Oren gives a real life example of how an update to a customer&#8217;s financial information caused a change to her historical record, which caused some real problems. </li>
<li>Jon talks about some of the hoops we jump through in an attempt to maintain historical data in a relational database, e.g. soft deletes. </li>
</ul>
</li>
<li>(08:42) Disk space concerns
<ul>
<li>Scott K says he hears DBA&#8217;s worry about disk space due to data repetition between documents and asks what other concerns people bring up. </li>
<li>Oren says there can be more computation and indexing, but on the other hand temporal data is orders of magnitude easier. </li>
<li>Data design principles were established back when space was expensive, that&#8217;s all changed now. </li>
<li>Oren says he hears people say that space isn&#8217;t cheap in the enterprise, but runs some numbers and concludes they&#8217;re either very inefficient or someone&#8217;s got their hand in the till. Scott K says that enterprises data storage is often expensive because they&#8217;re not tiering their data correctly to put low priority data on cheaper storage. </li>
<li>Oren says enterprises drive up storage costs by due to foolish backup strategies. </li>
</ul>
</li>
<li>(14:42) Query and performance benefits
<ul>
<li>Scott K says that people often view document databases as a giant blob of text rather than structured data which can be searched, indexed, etc. </li>
<li>Oren says that you get full text search for free in RavenDB. </li>
</ul>
<ul>
<li>In relational databases, you&#8217;re always working with the very latest data, so you have locks, readers waiting for writers, etc. </li>
<li>RavenDB does a lot of precomputation in the background, so it can give you aggregate information immediately. </li>
</ul>
</li>
<li>(17:27) RavenDB 2.0 release overview
<ul>
<li>Big improvements to performance on some key codepaths, in some cases over 1000%. </li>
<li>Support for JavaScript scripts on the server, which allows for scenarios like mass migrations and batching support on the server. </li>
<li>Management UI improvement, better management API coverage, performance counters, etc. </li>
<li>Dev improvements &#8211; sharding support, full support for async. </li>
</ul>
</li>
<li>(19:40) 2.01 release overview
<ul>
<li>Files some rough spots in the 2.0 release &#8211; things that beta testers didn&#8217;t mind, but can be a little smoother. </li>
<li>They added a new feature &#8211; improves support for replicating to a relational database. </li>
</ul>
</li>
<li>(22:05) Sharding improvements and migrations
<ul>
<li>Sharding&#8217;s been around since the beginning, but required you to specify a lot of things &#8211; lots of options, too much complexity, too many important decisions early in the development process. </li>
<li>Sharding support has been revamped &#8211; provide the endpoints, defaults take care of the rest. </li>
<li>Oren gives an example with sharding customer data. By default, documents are sharded together based on transaction id. You can specify a shard when you save based on a user specified id. </li>
<li>Some people have problems with the default approach because the document id includes the shard id. That&#8217;s necessary to prevent having to query all shards. </li>
<li>Jon asks how this works over time if you need to add shards, migrate data, etc. Oren says you can rebalance by biasing new data towards a newly added shard. </li>
<li>If you need to move data to a new server &#8211; for instance, a customer becomes large enough that you want to put all of their documents on a new shard, you&#8217;ve got two options for handling the id&#8217;s. Oren says some users migrate data, rewriting id&#8217;s during the process, but he doesn&#8217;t recommend that. Instead, he recommends using a sharding function which allows remapping document id&#8217;s to a new shard without changing id&#8217;s. </li>
<li>Jon obviously doesn&#8217;t get it and asks the same question again, also asking how you handle data modifications over time. Oren explains that you can just write a JavaScript function to update your existing documents if needed. </li>
<li>Kevin asks how long data a data migration takes. Oren types one up on the fly and explains the parsing and execution time. </li>
</ul>
</li>
<li>(34:43) Time for some random questions!
<ul>
<li>Scott K notes that there&#8217;s a client that runs on Mono and asks if there are plans to get the server running on Mono. Oren talks about the general plan to handle that, but says it&#8217;s not high on the priority list. </li>
<li>(35:48) Scott K asks about compact scenarios, including clients that run on mobile and embedded instances that run locally. Oren notes that&#160; clients are easy, because anything that can make a REST call can be a client. They had an embedded version that had very little interest. </li>
<li>(38:03) In disconnect scenarios, it&#8217;s usually simpler to cache JSON documents locally. </li>
<li>(39:10) Jon asks about merge support for occasionally connected scenarios. Oren says that&#8217;s intentionally not included. </li>
<li>(41:25) Jeremy Miller (@jeremydmiller) asks when Oren is going to fix Lucene.net&#8217;s flow control via exception madness. Oren says it&#8217;s not planned, and that Jeremy should ignore those exceptions. </li>
<li>(42:25) Philip (@autosnak) asks why RavenDB doesn&#8217;t do more for startups and small biz pricing-wise. Oren explains the offers they make available &#8211; open source is free, RavenDB basic edition is $5 / month, they donate a lot of license for a lot of other cases, and even the full versions are incredibly cheap compared with any other database. Shoot him an e-mail. </li>
<li>(44:44) Chris Whellams (@chriswillems) asks how to sell NoSQL and RavenDB to IT management and bosses that are addicted to SQL Sever. Oren outlines a strategy &#8211; start with a persistent viewmodel cache on a slow page to get a quick win, then use it for simple storage of ancillary application data (e.g. preferences), then use it in a spike on a new project. This is exactly what the MSNBC team did &#8211; they started with a non-operating RavenDB node in production, then slowly moved some things in without taking on any unnecessary risk. </li>
<li>(42:50) Jon asks for any closing thoughts. Oren says they&#8217;re starting on some weekly webinars for RavenDB users &#8211; or just if you&#8217;re curious about it. There&#8217;s a RavenDB course in the US in May. </li>
<li>FIN! </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li><a href="http://herdingcode.com/?p=255">Herding Code 83: Ayende Rahien on RavenDB</a> </li>
<li><a href="http://ayende.com/blog/">Ayende&#8217;s Blog</a> </li>
<li><a href="http://ravendb.net/">RavenDB</a>&#160; </li>
<li>.NET Rocks 819 &#8211; <a href="http://www.dotnetrocks.com/default.aspx?showNum=819">Oren Eini Does NoSQL First</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/8YS3Y1LAAw4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-159-catching-up-with-oren-eini-on-ravendb/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/jQsfM2mX3Fo/HerdingCode-0159-RavenDB.mp3" fileSize="14900867" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk with Oren Eini (a.k.a. Ayende Rahien) about what&amp;#8217;s new with RavenDB. Download / Listen: Herding Code 159: Catching up with Oren Eini on RavenDB Show Notes: (00:47) Introduction and review of document database</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk with Oren Eini (a.k.a. Ayende Rahien) about what&amp;#8217;s new with RavenDB. Download / Listen: Herding Code 159: Catching up with Oren Eini on RavenDB Show Notes: (00:47) Introduction and review of document databases and RavenDB Oren gives us a quick overview of document databases and RavenDB Relational [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-159-catching-up-with-oren-eini-on-ravendb/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/jQsfM2mX3Fo/HerdingCode-0159-RavenDB.mp3" length="14900867" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0159-RavenDB.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 158: Nat Friedman and Joseph Hill announce Xamarin 2.0</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/p7UWNpXdVr4/</link>
		<comments>http://herdingcode.com/herding-code-158-nat-friedman-and-joseph-hill-announce-xamarin-2-0/#comments</comments>
		<pubDate>Tue, 26 Feb 2013 22:18:32 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=512</guid>
		<description><![CDATA[Nat Friedman and Joseph Hill from Xamarin join us for several big announcements: Xamarin Studio, Xamarin Component Store, iOS development in Visual Studio, and a new free Starter edition. Download / Listen: Herding Code 158: Nat Friedman and Joseph Hill announce Xamarin 2.0 Show Notes: (00:45) Nat begins by catching us up on Xamarin&#8217;s first [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Nat Friedman and Joseph Hill from Xamarin join us for several big announcements: Xamarin Studio, Xamarin Component Store, iOS development in Visual Studio, and a new free Starter edition.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0158-Xamarin-2.mp3">Herding Code 158: Nat Friedman and Joseph Hill announce Xamarin 2.0</a>
<p>Show Notes:</p>
<ul>
<li>(00:45) Nat begins by catching us up on Xamarin&#8217;s first eighteen months.
<ul>
<li>Xamarin&#8217;s focus is on helping developers build mobile apps across multiple platforms. </li>
<li>They have 230,000 developers in their community, adding 700-800 per day, with over 12,000 paying customers. </li>
<li>They&#8217;ve had top iPad (Bastion), music apps (Rdio) and some large mission critical line of business apps. </li>
<li>What&#8217;s special about their platform is that you can target iOS, Android, and Windows Phone, share C# code across&#160; all those platforms, and still deliver a native experience. </li>
<li>Nat say&#8217;s they&#8217;re the overnight success that took ten years to prepare, referencing the ten years they took to build Mono. </li>
</ul>
</li>
<li>(03:20) Xamarin&#8217;s value proposition and customer base
<ul>
<li>Kevin asks which of their value propositions (.NET based development, cross-platform development) resonates more with users. </li>
<li>Nat says that many developers are initially attracted by C# development, although that&#8217;s not always the case (referencing an internal app at GitHub written by Objective-C developers who just liked sharing code between platforms). </li>
<li>Nat says there&#8217;s no real way to be a mobile developer now without having a cross-platform strategy &#8211; iOS might have looked like the only platform that mattered a few years ago, but now Android is more popular and Windows Phone is growing in popularity. </li>
</ul>
</li>
<li>(04:47) Code reuse strategy
<ul>
<li>Kevin asks how the code reuse happens, since these are true native applications. </li>
<li>Nat talks about different cross-platform strategies and says that they don&#8217;t believe in write once, run anywhere. </li>
<li>With Xamarin, you separate the backend and UI code and write specific UI code for each platform, although you still write it in C#. </li>
<li>Rdio has over 150,000 lines of code which are shared between iOS, Android and Windows which covers networking, caching, authentication, etc. </li>
</ul>
</li>
<li>(07:55) First big announcement: Joseph Hill announces support for building for iOS applications in Visual Studio.
<ul>
<li>Nat says that you can have one Visual Studio solution targeting iOS, Android and Windows Phone, and step through the code with the full debugging support you&#8217;re used to. </li>
<li>How does the Mac support work?
<ul>
<li>Scott K asks if this means that you have to run Visual Studio on a Mac. Nat says that&#8217;s not necessary, you just need to pair your Visual Studio instance with a Mac &#8211; it just needs to be on the network somewhere. That&#8217;s required both to be able to sign releases and to meet Apple&#8217;s license terms. </li>
<li>Jon asks if this would work with a Mac Mini, and Nat says that&#8217;s a popular option. </li>
<li>Scott K asks about a &quot;Mac in the cloud&quot; option; Nat says they&#8217;re not planning that. </li>
<li>Kevin asks if several developers could share one Mac. Nat says that Apple&#8217;s requirement is that each developer is supposed to have a license, and Joseph says that the Apple toolchain is build for single user rather than server support. </li>
<li>Jon ask if he can start playing with iOS support without having a Mac, Joseph explains that you can install and look around a bit, but you can&#8217;t build or deploy. </li>
<li>Kevin asks about the Interface Builder interaction. </li>
<li>Kevin asks if it was incredibly painful to set up this support for Visual Studio. </li>
</ul>
</li>
</ul>
</li>
<li>(16:14) Second big announcement: Nat announces the release of Xamarin Studio.
<ul>
<li>Xamarin Studio runs on OSX, Windows, and Linux. </li>
<li>It&#8217;s based on Mono Develop, but it&#8217;s a completely new user interface with a lot of great new features. </li>
<li>Visual Studio Express users can&#8217;t install extensions so Xamarin Studio allows them to do Xamarin development, also it&#8217;s what all Mac users will be using. </li>
<li>Kevin asks if it&#8217;s a fork of Mono Develop. </li>
<li>Kevin asks if Xamarin Studio is open source. </li>
<li>Jon asks how it was developed. Joseph says it&#8217;s still C# Mono code using GTK. Developers write Xamarin Studio in Xamarin Studio. </li>
<li>K. Scott asks if you can target non-mobile scenarios. Joseph says you can still target ASP.NET, console, class libraries, etc. </li>
<li>Kevin asks what happens to Mono Develop. Nat says it continues as an open source project, and they&#8217;ll contribute back to it as they develop Xamarin Studio. </li>
</ul>
</li>
<li>(22:35) Xamarin as a Mono producer and consumer
<ul>
<li>Jon says it&#8217;s interesting watching the evolution of the Mono / Xamarin efforts as they&#8217;ve moved from supplying the Mono framework to being both building Mono and building a business on Mono. </li>
<li>Nat says it&#8217;s great working for a customer base rather than an opinionated crowd. &quot;A really good signal that we&#8217;re doing good work is that people give us money for it.&quot; </li>
<li>Joseph talks about their model, explaining how their Xamarin business works well with their role as stewards of the Mono project. </li>
</ul>
</li>
<li>(25:28) Third big announcement: Nat announces the Xamarin Component Store
<ul>
<li>Nat says they see developers solving the same problems over and over again, giving an example of a common requirement for a signature capture control. </li>
<li>The Xamarin Component Store is a library of pre-built components. Nat gives an example of an Azure Mobile Service component. </li>
<li>It works in both Visual Studio and Xamarin Studio. </li>
<li>Components include documentation, screenshots, and sample projects. Nat says it&#8217;s conceptually similar to NuGet, but gives you a lot better experience and makes it easier to get started. </li>
<li>There are a lot of component vendors who are contributing both free and paid components, and Xamarin has also contributed several based on their experience in supporting Xamarin developers. </li>
<li>Jon asks how they handle cross platform, native user interface with components. </li>
<li>Kevin asks how people can submit components to the store. </li>
<li>Nat says he thinks this will really be a compelling feature of their platform, since developers won&#8217;t have to build everything from scratch. </li>
<li>Kevin asks they handle purchases and vender payments. </li>
<li>Kevin asks if the components are curated. </li>
<li>Jon asks about component support for Android and Windows Phone. </li>
<li>Kevin asks if it&#8217;s possible to create Xamarin components using native Objective-C components. Nat says they support both Objective-C and Java code reuse. </li>
<li>Jon says the design on the Xamarin Component store website looks great and asks about Xamarin&#8217;s approach to design. Nat says that they&#8217;re selling a good design experience and design is an important part of that. </li>
<li>Kevin says he like hover screenshots, Nat says he really likes the hover menu control. </li>
</ul>
</li>
<li>(39:35) Fourth big announcement: Nat announces the free Xamarin Studio Starter Edition
<ul>
<li>You can use Starter Edition to get started, build, and deploy applications. </li>
<li>Starter Edition is limited to 32KB of IL code. </li>
<li>Jon loves the idea of limiting the free edition based on compiled code size. </li>
<li>Kevin asks what kind of app will fit in 32KB. Nat says that using a lot of DLL&#8217;s will put you over the limit quickly, but images aren&#8217;t content. About 20% of the apps in the store would fit under the limit. </li>
<li>Joseph says they didn&#8217;t want to limit based on features. Jon talks about the frustration people see in Visual Studio version based feature limitations. Nat says pricing is hard; ultimately they want to get a lot of people using Xamarin and they think this is a good way to do that. </li>
</ul>
</li>
<li>(44:53) Jon asks about support for languages other than C#.
<ul>
<li>Nat says they see people using F# and Java (using IKVM). </li>
<li>Joseph says that C# is their main focus &#8211; all the documentation is in C# &#8211; but they&#8217;re happy to see people using other languages. </li>
<li>Kevin asks for JavaScript support. Nat says they think it&#8217;s hard to build large scale apps in JavaScript. </li>
</ul>
</li>
<li>(47:35) Nat talks about their upcoming developer conference.
<ul>
<li>The first two days are focused completely on training. </li>
<li>The second two days feature some great talks by community leaders, user interface designers, and more. The entire team will be on hand to answer questions. </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Nat Friedman (<a href="http://nat.org/">site</a>, <a href="https://twitter.com/natfriedman">@NatFriedman</a>) </li>
<li>Joseph Hill (<a href="http://beyondfocus.com/">blog</a>, <a href="https://twitter.com/JosephHill">@JosephHill</a>) </li>
<li><a title="http://amirrajan.github.com/Oak/" href="http://xamarin.com/">Xamarin</a> </li>
<li><a href="http://blog.xamarin.com/announcing-xamarin-2.0/">Announcing Xamarin 2.0 </a>(Xamarin blog)</li>
<li><a href="http://xamarin.com/evolve">Xamarin Evolve</a> &#8211; April 14-17, Austin, TX</li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/p7UWNpXdVr4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-158-nat-friedman-and-joseph-hill-announce-xamarin-2-0/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/IIoEJq1IebE/HerdingCode-0158-Xamarin-2.mp3" fileSize="16371987" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>Nat Friedman and Joseph Hill from Xamarin join us for several big announcements: Xamarin Studio, Xamarin Component Store, iOS development in Visual Studio, and a new free Starter edition. Download / Listen: Herding Code 158: Nat Friedman and Joseph Hill a</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>Nat Friedman and Joseph Hill from Xamarin join us for several big announcements: Xamarin Studio, Xamarin Component Store, iOS development in Visual Studio, and a new free Starter edition. Download / Listen: Herding Code 158: Nat Friedman and Joseph Hill announce Xamarin 2.0 Show Notes: (00:45) Nat begins by catching us up on Xamarin&amp;#8217;s first [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-158-nat-friedman-and-joseph-hill-announce-xamarin-2-0/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/IIoEJq1IebE/HerdingCode-0158-Xamarin-2.mp3" length="16371987" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0158-Xamarin-2.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 157: Amir Rajan on dynamic web development with Oak and Gemini</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/Z7YhJwrsWuw/</link>
		<comments>http://herdingcode.com/herding-code-157-amir-rajan-on-dynamic-web-development-with-oak-and-gemini/#comments</comments>
		<pubDate>Thu, 14 Feb 2013 17:39:39 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=508</guid>
		<description><![CDATA[On this episode of Herding Code, the guys talk to Amir Rajan about his Oak and Gemini projects, which bring Rails-inspired dynamic programming to ASP.NET MVC. Download / Listen: Herding Code 157 &#8211; Amir Rajan on dynamic web development with Oak and Gemini Show Notes: Overview &#8211; Developing with Oak Oak is an approach to [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>On this episode of Herding Code, the guys talk to Amir Rajan about his Oak and Gemini projects, which bring Rails-inspired dynamic programming to ASP.NET MVC.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0157-Oak.mp3">Herding Code 157 &#8211; Amir Rajan on dynamic web development with Oak and Gemini</a>
<p>Show Notes:</p>
<ul>
<li>Overview &#8211; Developing with Oak
<ul>
<li>Oak is an approach to building single page applications that are heavy on JavaScript that takes a lot of inspiration from the Ruby community&#8217;s development approach. </li>
<li>Jon asks Amir to explain his development workflow, including SpecWatcher, NSpec, and Growl. </li>
<li>Jon asks about the File / New Project experience. Amir describes how that&#8217;s not even required &#8211; Oak works with WarmuP to build out a new project. </li>
<li>The next step is using Rake &#8211; Amir explains how Rake works. Running Rake builds the application and deploys, then sets up IIS against that instance. </li>
</ul>
</li>
<li>Dynamic programming and Gemini
<ul>
<li>Oak leverages the dynamic keyword. Amir explains how it just augments what&#8217;s already there in ASP.NET MVC. </li>
<li>Amir explains how Oak works with Gemini, separate library he&#8217;s built to enable building dynamic objects. It allows you to attach properties and methods through mixins. He gives an example of using Gemini to extend a dynamic object with validation methods. </li>
<li>Amir describes how Oak leverages Gemini to take advantage of these decorated dynamic model objects throughout the different layers. </li>
<li>Scott K asks where the composition happens &#8211; is this a pipeline process? </li>
<li>Jon says it sounds like this is a more fleshed out version of some dynamic features that were started in ASP.NET MVC, like dynamic views and ViewBag. He explains how Gemini goes beyond Expando, because it also includes support for method missing. </li>
<li>Jon says Gemini reminds him of the Clay dynamic objects used in Orchard. </li>
</ul>
</li>
<li>Data access and Cambium
<ul>
<li>Jon asks Amir about Cambium, the data layer. Amir says he customized Rob Conery&#8217;s Massive library to work with his Gemini objects, and points out that the resulting library uses remarkably little code. </li>
<li>Scott K asks Amir if he&#8217;s looked at Breeze. Amir says so far he&#8217;s just worked with standard ASP.NET MVC controllers, but he&#8217;s interested in looking at Breeze, Dapper, and NoSQL ORMs. </li>
</ul>
</li>
<li>But why?
<ul>
<li>Kevin asks the silly question: why bother bringing Rails idioms to ASP.NET MVC &#8211; why not work in Rails? </li>
<li>Jon says the thing he sees Amir&#8217;s done is eliminate the shift between development and runtime modes in Visual Studio based development. </li>
<li>Jon asks about change tracking support in Cambium. </li>
</ul>
</li>
<li>More about data &#8211; migrations
<ul>
<li>Amir explains migrations and schema generation in Oak and Cambium. </li>
<li>Amir says that SQL based migrations are important in many development environments. </li>
</ul>
</li>
<li>Single page and Ajax
<ul>
<li>Jon asks Amir about the Single Page Application story in Oak. Amir explains some of the points of friction that exist in ASP.NET SPAs and explains how Oak is able to round-trip dynamic types. </li>
<li>Scott K. asks why it&#8217;s so hard to migrate schemas in .NET. Amir says that it&#8217;s due to our fixation on trying to define our models using code first in .NET types rather than in the database. </li>
<li>Jon asks how the first deployment and upgrade scenarios work in Oak. </li>
<li>Jon asks how Ajax interactions work. Amir explains how this works using the TaskRabbit sample to explain. </li>
<li>Amir explains how he&#8217;s relying on client-side rendering and templating more and more. He asks if we&#8217;re seeing that movement as well, and Scott K. agrees with him. They agree that focusing on serving JSON and rendering on the client solves a lot of problems. </li>
<li>Jon asks Amir if he&#8217;s using one controller to serve HTML and JSON, or if they&#8217;re split out. Amir says he&#8217;s got one controller to serve the HTML, then does everything else via a separate controller that serves JSON. He says he&#8217;s noticed that the ORMs have very little need for state with this approach. </li>
<li>Jon says he&#8217;s seeing the shift from a little Ajax interaction in mostly HTML focused servers to servers that are almost completely focused on serving JSON. </li>
</ul>
</li>
<li>Some misc. questions
<ul>
<li>Jon asks about Canopy. Amir describes how Canopy is a stabilization layer on top of Selinium, and talks about why Canopy is built on top of F#. </li>
<li>Scott K. asks if Amir has looked at OWIN yet. </li>
<li>Jon asks about Async support in Oak. </li>
<li>Twitter question from Bobby Johnson: What do you do to limit the viral nature of dynamic in your code? Amir and Jon talk about how a lot of the assumed safety of static code is an illusion when you think about all the moving parts you&#8217;ve got no control over. </li>
<li>K. Scott and Scott K. think this is a fascinating project and like the code. </li>
<li>Scott K. and Jon joke about variants. Amir mentions that the dynamic nature of Gemini means that all the dynamic properties and methods are case insensitive. </li>
</ul>
</li>
<li>Wrap up and getting started with Oak
<ul>
<li>Amir talks about how to get started with Oak. </li>
<li>Jon says the sample apps, documentation and screencasts are really nice. </li>
<li>Jon asks what&#8217;s next. Amir lists a better SPA story, better file uploads, adding dynamic to ServiceStack and Nancy, and growing the number of Gemini modules. </li>
<li>Kevin asks about the performance impact of this dynamic focus. Amir that he&#8217;s got an included test, and he&#8217;s found that dynamic is actually faster in a lot of cases which need to use reflection, such as ORMs, JSON serialization, and model binding. </li>
<li>Amir calls out the NSpec project and references their interview on Hanselminutes. </li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Amir Rajan (<a href="http://www.amirrajan.net/">blog</a>, <a href="https://twitter.com/amirrajan">@amirrajan</a>) </li>
<li><a title="http://amirrajan.github.com/Oak/" href="http://amirrajan.github.com/Oak/">Oak: Frictionless development for ASP.NET MVC single page web apps. Prototypical and dynamic capabilities brought to C#.</a> </li>
<li><a title="https://github.com/amirrajan/oak/wiki" href="https://github.com/amirrajan/oak/wiki">Oak project on GitHub</a> </li>
<li><a href="http://www.amirrajan.net/Blog/dynamic-c-sharp">Blog post introducing Gemini</a> </li>
<li><a title="http://weblogs.asp.net/bleroy/archive/2010/08/16/clay-malleable-c-dynamic-objects-part-1-why-we-need-it.aspx" href="http://weblogs.asp.net/bleroy/archive/2010/08/16/clay-malleable-c-dynamic-objects-part-1-why-we-need-it.aspx">Clay: Malleable C# dynamic objects</a> </li>
<li><a href="http://nspec.org/continuoustesting/">SpecWatchr</a> </li>
<li><a href="http://www.continuoustests.com/">Mighty Moose</a> </li>
<li><a href="http://www.ncrunch.net/">NCrunch</a> </li>
<li><a href="https://github.com/chucknorris/warmup">WarmuP</a> </li>
<li><a href="http://rake.rubyforge.org/">Rake &#8211; Ruby Make</a> </li>
<li><a href="http://lefthandedgoat.github.com/canopy/">canopy: f# web testing framework</a> </li>
<li><a href="http://www.hanselminutes.com/294/understanding-bdd-and-nspec-with-matt-florence-and-amir-rajan">Hanselminutes: Understanding BDD and NSpec with Matt Florence and Amir Rajan</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/Z7YhJwrsWuw" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-157-amir-rajan-on-dynamic-web-development-with-oak-and-gemini/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/K9Qj4NRjV1I/HerdingCode-0157-Oak.mp3" fileSize="14314047" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>On this episode of Herding Code, the guys talk to Amir Rajan about his Oak and Gemini projects, which bring Rails-inspired dynamic programming to ASP.NET MVC. Download / Listen: Herding Code 157 &amp;#8211; Amir Rajan on dynamic web development with Oak and G</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>On this episode of Herding Code, the guys talk to Amir Rajan about his Oak and Gemini projects, which bring Rails-inspired dynamic programming to ASP.NET MVC. Download / Listen: Herding Code 157 &amp;#8211; Amir Rajan on dynamic web development with Oak and Gemini Show Notes: Overview &amp;#8211; Developing with Oak Oak is an approach to [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-157-amir-rajan-on-dynamic-web-development-with-oak-and-gemini/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/K9Qj4NRjV1I/HerdingCode-0157-Oak.mp3" length="14314047" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0157-Oak.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 156: Catching up with Andreas Håkansson and Steven Robbins on NancyFx</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/4h-aW2_kDvc/</link>
		<comments>http://herdingcode.com/herding-code-156-catching-up-with-andreas-hakansson-and-steven-robbins-on-nancyfx/#comments</comments>
		<pubDate>Fri, 18 Jan 2013 22:32:07 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=505</guid>
		<description><![CDATA[The guys catch up with Andreas and Steve on what&#8217;s new in NancyFx (a web framework for .NET that was originally inspired by Sinatra). Download / Listen: Herding Code 156 &#8211; Catching up with Andreas Håkansson and Steven Robbins on NancyFx Show Notes: Jon asks for a quick overview of NancyFx. Steve and Andreas both [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys catch up with Andreas and Steve on what&#8217;s new in NancyFx (a web framework for .NET that was originally inspired by Sinatra).</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0156-NancyFx.mp3">Herding Code 156 &#8211; Catching up with Andreas Håkansson and Steven Robbins on NancyFx</a>
<p>Show Notes:</p>
<ul>
<li>Jon asks for a quick overview of NancyFx. Steve and Andreas both say you can write the same app on any number of web frameworks, so what really distinguishes them is the syntax and feel. Andreas says that the web only has a small set of things you really can do &#8211; there are only a few HTTP methods &#8211; but an infinite number of ways you can build applications; Nancy is one of them.</li>
<li>Diagnostics</li>
<ul>
<li>Andreas says Diagnostics is a website built into Nancy itself. It covers things like request tracing and interactive diagnostics.</li>
<li>Steve explains how the interactive diagnostics lets you find out what routes were hit and why, poke at live code, etc.</li>
<li>Andreas says this works using companion classes for metadata which is then rendered via JavaScript templates, so you can customize it as much as you want.</li>
<li>Jon says the code for Diagnostics seems like pretty good sample code for getting an idea of how Nancy code works.</li>
<li>Jon asks about how authentication is handled to restrict access.</li>
<li>Steve says they&#8217;re using Handlebars for JavaScript templates with Backbone and Nancy on the back end.</li>
</ul>
<li>Content Negotiation</li>
<ul>
<li>Andreas explains how routes just return models, and the formatting is handled by response processors. There&#8217;s a syntax to allow for more control at the route level if needed.</li>
<li>Steve says the response processors are allowed to participate in the selection by specifying how applicable they are for both content types and model types. The content negotiation can also allow you to select different models based on the request, avoiding unnecessary code from executing and weighing the model down unnecessarily.</li>
</ul>
<li>Serializers and dependencies</li>
<ul>
<li>Jon asks about the JSON serializers they&#8217;re using, and why they&#8217;re not using something like ServiceStack or JSON.NET. Andreas explains that because the Nancy core ships without dependencies, they used Mono code.</li>
<li>Jon asks about where Nancy can be be embedded, outside of standard web hosting scenarios.</li>
<li>Steve says that because Nancy doesn&#8217;t have other dependencies and is strictly focused on returning a response for a request, it&#8217;s extremely easy to test.</li>
<li>Andreas points out that you can use other serializers very easily via a NuGet package.</li>
<li>Jon asks about how packages work in Nancy. Andreas explains how Nancy scans for classes that implement ISerializer.</li>
<li>Kevin asks about implementing a processor for generating hyperlinks between models.</li>
<li>Jon asks if people are sharing processors. Steve says that they&#8217;re so trivial to write that there&#8217;s no real point in sharing them.</li>
</ul>
<li>Localization</li>
<ul>
<li>Andreas says this was a community contribution. There are several conventions (including querystring values, URL segments) which can be used to set the culture for the context. There&#8217;s a helper on the Razor base class that returns a dynamic object which can return localized values from a resource. Assembly resources are used by default, but you can add others.</li>
<li>Steve says that you can also use localized views based on filename.</li>
<li>Jon asks for more information on how you&#8217;d set up a custom resource location.</li>
</ul>
<li>Architecture, pipelines, and IoC</li>
<ul>
<li>Jon says that he spoke with Jeremy Miller at Codemash, and Jeremy said that it took a while to get the processor architecture set up, but now it&#8217;s very easy to add in features. It seems like that&#8217;s also paid off for Nancy. Andreas agrees, the pipeline system and dependency injection really simplify adding in new features.</li>
<li>Jon asks about how Nancy uses TinyIoC and how you could use TinyIoC in other applications.</li>
<li>Kevin and Jon ask about how Steve wrote TinyIoC to run on multiple platforms. Steve describes some issues they&#8217;ve worked around and how assembly scanning can get tricky due to test frameworks injecting things into the app domain.</li>
</ul>
<li>Non-standard uses of Nancy</li>
<ul>
<li>Jon asks for some examples. Steve says they seen people embed it into WPF applications for an interface, to provide mobile support, and even on Raspberry Pi. They&#8217;d love to hear more about what people are doing with it.</li>
</ul>
<li>Questions from Twitter / Misc. Questions</li>
<ul>
<li>Jim Liddell (@liddellj) asks about the roadmap. Steve talks about work they&#8217;re doing for OWIN and Async support.</li>
<li>Filip W (@filip_woj) asks &quot;Why tuples instead of classes and structs?&quot;</li>
<li>Kristof Claes (@kristofclaes) asks &quot;How do they determine when something is &quot;too much ceremony&quot;? Gut feeling? Set of defined rules? Talk? Compare to other FX?&quot;</li>
<li>Ian Battersby (@Cranialstrain) asks &quot;Why dynamic? And don&#8217;t say fluency ;)&quot;</li>
<li>Tobi Tobsen (@t0bit0bsen) asks &quot;Is there a NancyFx tutorial for devs w/o a background in web development or should they look elsewhere?&quot;</li>
<li>Jim Liddell (@liddellj) asks &quot;How do you view Nancy in relation to similar frameworks, such as OpenRasta?&quot;</li>
<li>Kevin asks about asset management for Nancy. Steve says that&#8217;s probably better handled by external</li>
<li>Kevin asks about web socket support. Steve says just use SignalR.</li>
<li>There&#8217;s a Nancy store now.</li>
<li>Daniel Lee (@danlimerick) asks &quot;How many hours a week do you spend on Nancy? What&#8217;s ratio of reviewing PR&#8217;s vs writing new features?&quot;</li>
<li>Jon asks what Steve and Andreas are finding fun and interesting lately. Steve and Andreas both like Mongo.</li>
<li>Scott K. asks if they&#8217;ll add time zone localization support. They tell him to submit a pull request.</li>
</ul>
</ul>
<p>Show Links:</p>
<ul>
<li><a href="http://www.nancyfx.org/">NancyFX</a> <a href="htttps://github.com/NancyFx">git repo</a>, <a href="http://nuget.org/List/Search?packageType=Packages&amp;searchCategory=All+Categories&amp;searchTerm=nancy&amp;sortOrder=package-download-count&amp;pageSize=25">NuGet package</a>, <a href="https://groups.google.com/forum/#!forum/nancy-web-framework">Google Group</a>, <a href="http://twitter.com/#!/NancyFx">@NancyFx</a> </li>
<li><a href="http://thecodejunkie.com/">Andreas Håkansson </a>(<a href="http://twitter.com/#!/TheCodeJunkie">@TheCodeJunkie</a>) </li>
<li><a href="http://www.grumpydev.com/">Steven Robbins</a> (<a href="http://twitter.com/#!/Grumpydev">@Grumpydev</a>) </li>
<li><a href="http://herdingcode.com/?p=350">Herding Code 123: Andreas Hakansson and Steven Robbins on NancyFx</a> </li>
<li><a href="https://github.com/grumpydev/TinyIoC/">TinyIoC</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/4h-aW2_kDvc" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-156-catching-up-with-andreas-hakansson-and-steven-robbins-on-nancyfx/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/-A_tBSOBezY/HerdingCode-0156-NancyFx.mp3" fileSize="37193145" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys catch up with Andreas and Steve on what&amp;#8217;s new in NancyFx (a web framework for .NET that was originally inspired by Sinatra). Download / Listen: Herding Code 156 &amp;#8211; Catching up with Andreas Håkansson and Steven Robbins on NancyFx Show N</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys catch up with Andreas and Steve on what&amp;#8217;s new in NancyFx (a web framework for .NET that was originally inspired by Sinatra). Download / Listen: Herding Code 156 &amp;#8211; Catching up with Andreas Håkansson and Steven Robbins on NancyFx Show Notes: Jon asks for a quick overview of NancyFx. Steve and Andreas both [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-156-catching-up-with-andreas-hakansson-and-steven-robbins-on-nancyfx/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/-A_tBSOBezY/HerdingCode-0156-NancyFx.mp3" length="37193145" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0156-NancyFx.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 155 – Ward Bell on Single Page Applications and Breeze</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/ivEUoSFUwBw/</link>
		<comments>http://herdingcode.com/herding-code-155-ward-bell-on-single-page-applications-and-breeze/#comments</comments>
		<pubDate>Tue, 08 Jan 2013 21:11:40 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=499</guid>
		<description><![CDATA[On this episode of Herding Code, the guys talk to Ward Bell about single page applications and the Breeze project. Download / Listen: Herding Code 155 &#8211; Ward Bell on Single Page Applications and Breeze Show Notes: General SPA discussion Ward talks about how IdeaBlade has been building tools for working with data in rich [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>On this episode of Herding Code, the guys talk to Ward Bell about single page applications and the Breeze project.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0155-Ward-Bell.mp3">Herding Code 155 &#8211; Ward Bell on Single Page Applications and Breeze</a> </p>
<p>Show Notes:</p>
<ul>
<li>General SPA discussion
<ul>
<li>Ward talks about how IdeaBlade has been building tools for working with data in rich clients for a while, and after seeing the move towards desktop experiences in the browser they started the Breeze project, which is open source and free.</li>
<li>Jon asks Ward to define single page applications (SPAs) a bit, and Ward says he sees SPA as a funny term since it just describes one attribute of the experience &#8211; it&#8217;s like calling a car a &#8220;horseless carriage.&#8221; Ward says the goal is to give the user a rich experience and not rely on the server to deliver that rich experience. A lot of the value comes from maintaining data and state on the client.</li>
<li>There&#8217;s a discussion about the value and best applications of SPAs.</li>
<li>Kevin says there are a few aspects of SPAs &#8211; there can be a lot of individual, interactive pages which are separately delivered by the server, or you can have a more full application which handles screen transitions on the client. Ward talks about the tradeoffs of the two approaches. The whole SPA application approach is especially important in newer scenarios like mobile or Window Store applications built in HTML/JS.</li>
<li>Scott K asks about the different approaches to data loading &#8211; do you preload some of the data, or does the first page request just deliver an HTML client which requests all the data.</li>
<li>Scott K asks how often Ward sees offline manifests and local data. Ward says he sees things going that way, but it&#8217;s still early. Scott K and Ward talk about the difficulty of synchronizing offline changes when you&#8217;re reconnected.</li>
<li>Scott K and Ward talk about the use of Web Sockets and / or SignalR to handle locks to allow for multiple users.</li>
</ul>
</li>
<li>Breeze
<ul>
<li>Jon asks Ward how Breeze helps</li>
<li>Ward says that they&#8217;re not trying to solve solved problems &#8211; they&#8217;re focused on solving the data problem.</li>
</ul>
</li>
<li>Breeze, Upshot, and the ASP.NET SPA template
<ul>
<li>Jon asks how this fits in with the former ASP.NET SPA template and Upshot. There&#8217;s a discussion the history and state of Upshot and RIA Services.</li>
<li>Scott K asks about whether Upshot will be released as open source&#8230; or the unreleased ASP.NET MVC Recipes source. Jon starts crying.</li>
<li>Jon and Ward talk about how one of the big features of Upshot was that there were both client and server side parts to it.</li>
<li>Ward said they&#8217;d learned from the Upshot, so they made Breeze very extensible while making for an easy path when using ASP.NET Web API and Entity Framework.</li>
<li>Ward says the current ASP.NET MVC SPA app is too simplistic, because it&#8217;s just one simple screen.</li>
</ul>
</li>
<li>Working with Breeze &#8211; client state, server-side interaction
<ul>
<li>Jon asks Ward about how Breeze handles local state. Ward describes how the server can send down metadata (likely from an Entity Framework model) to the Breeze client code so it can understand the models, relationships, validation rules, etc. You can extend things if you need to, but you don&#8217;t need to bother with the tedium of creating client models that match your server-side models.</li>
<li>The generated client-side models are ready to be hooked up to Knockout so they&#8217;re easily bound to the UI.</li>
<li>Jon asks how things are different on the server. Ward says that standard ASP.NET Web API controllers are very repetitive &#8211; each controller has GET, PUT, POST, DELETE methods that are just boilerplate. Pretty soon you end up with thirty API Controllers which just contain a lot of boilerplate code. Breeze can just expose things as Queryables so you really just need one controller unless you want to customize things. Scott K says it sounds like it&#8217;s basically Repository&lt;T&gt;. Scott K says he&#8217;d like to see it go further &#8211; at Cascadia there were some talks about big data where queries were created on the client and sent to the server.</li>
<li>Jon and Ward talk about the difficulties of complex repetitive APIs with too many entry points.</li>
</ul>
</li>
<li>How Breeze fits in with other frameworks like Ember, Angular, Backbone, etc.
<ul>
<li>Jon asks how Breeze fits in with Ember, Angular, and other SPA frameworks. Ward talks about different framework philosophies and how Ember and Angular both more of top to bottom stacks. Kevin mentions how Backbone differs &#8211; it&#8217;s more of a library vs. a framework.</li>
<li>Ward says that Breeze really targets the data scenario. Jon asks how close its vision is to Upshot&#8217;s. Ward explains how, other than Ember Data, nobody&#8217;s looking at solving the data scenarios &#8211; they don&#8217;t worry about caching, object graphs, change tracking, etc. Scott K says the other frameworks are really MVC focused, so they don&#8217;t consider data.</li>
<li>Scott K asks what happened to Batman.js. Nobody knows.</li>
<li>Jon asks if the happy path for Ember is Rails focused and Breeze is ASP.NET / Entity Framework focused. Ward says yes, with a clarification that we&#8217;re really talking about Ember Data.</li>
</ul>
</li>
<li>Getting Started
<ul>
<li>Jon asks if it&#8217;s difficult to get started with Breeze.</li>
<li>Ward talks about the NuGet package that gets a sample project set up quickly.</li>
<li>Ward talks about the live tutorial that lets you play with Breeze in a browser.</li>
<li>Ward talks about the automated tests they&#8217;ve got for Breeze training. Jon compares it to Ruby Koans.</li>
</ul>
</li>
<li>Jon, Ward, Kevin and Scott K talk about automated JavaScript testing options &#8211; Chutzpah, QUnit, Jasmine, Mocha.
<ul>
<li>Chutzpah is an automated JavaScript test runner that can run inside of Visual Studio.</li>
<li>QUnit is pretty simple &#8211; tests are functions that take true or false.</li>
<li>Jasmine is more BDD style.</li>
<li>Mocha is a test framework that supports different front ends, so you can use BDD, standard unit testing, etc. It&#8217;s also got great async support.</li>
</ul>
</li>
<li>Ward brings up TypeScript and Scott Koon starts cursing.</li>
<li>Wrap up small talk
<ul>
<li>Jon says that the talk about mocha reminds him of coffee, and he asks Ward about his new espresso machine. Jon and Ward both get their coffee beans from Sweet Maria&#8217;s.</li>
<li>Jon says he&#8217;s still roasting his coffee on his barbeque.</li>
</ul>
</li>
<li>Scott K asks what dependencies Breeze has. Ward says they write to EcmaScript 5 and have gotten rid of all dependencies other than one called Q.</li>
<li>It&#8217;s time for Pimp Yo Stuff, and Jon takes the occasion to praise Ward&#8217;s sartorial skill. Scott K says they&#8217;d like to
<ul>
<li>Ward pimps the DevForce and and Cocktail combination. Cocktail is DevForce + Caliburn.Micro.</li>
<li>Jon asks about the license for Breeze. Ward clarifies that it&#8217;s all free and open source, and they make their money on support and professional services.</li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Ward Bell (<a href="http://www.neverindoubtnet.blogspot.com/">blog</a>, <a href="https://twitter.com/wardbell">@wardbell</a>)</li>
<li><a href="http://www.breezejs.com">Breeze</a> &#8211; Build rich web apps in JavaScript with techniques you know</li>
<li>Ward&#8217;s post: <a href="http://www.neverindoubtnet.blogspot.com/2012/09/the-spa-as-horseless-carriage.html">The SPA as a Horseless Carriage</a></li>
<li><a href="http://backbonejs.org/">Backbone.js</a></li>
<li><a href="https://github.com/NYTimes/backbone.stickit">backbone.stickit</a> &#8211; yet another model-view binding plugin for Backbone</li>
<li><a href="http://angularjs.org/">AngularJS</a> &#8211; &#8220;what HTML would have been, had it been designed for building web-apps&#8221;</li>
<li><a href="http://www.johnpapa.net/building-single-page-apps-with-knockout-jquery-and-web-api-ndash-the-story-begins/">John Papa&#8217;s Code Camper tutorial</a></li>
<li><a href="http://www.rubykoans.com/">Ruby Koans</a></li>
<li><a href="http://chutzpah.codeplex.com/">Chutzpah</a> &#8211; A JavaScript Test Runner</li>
<li><a href="http://qunitjs.com/">QUnit</a> &#8211; JavaScript Unit Testing framework</li>
<li><a href="http://pivotal.github.com/jasmine/">Jasmine</a> &#8211; a behavior-driven development</li>
<li><a href="http://visionmedia.github.com/mocha/">Mocha</a> &#8211; a feature-rich JavaScript test framework running on <a href="http://nodejs.org/">node</a> and the browser, making asynchronous testing simple and fun</li>
<li><a href="http://www.sweetmarias.com/">Sweet Maria&#8217;s</a> &#8211; Home coffee roasting supplies</li>
<li><a href="http://documentup.com/kriskowal/q/">q</a> &#8211; A tool for making and composing asynchronous promises in JavaScript</li>
<li><a href="http://caliburnmicro.codeplex.com/">Caliburn.Micro</a></li>
<li><a href="http://www.ideablade.com/products/products.aspx">DevForce</a></li>
<li><a href="http://cocktail.ideablade.com/">Cocktail</a></li>
<li><a href="http://leroymenswear.com/">Leroy&#8217;s Menswear</a></li>
<li><a href="http://herdingcode.com/?p=303">Herding Code 104: Rob Eisenber on Caliburn.Micro</a></li>
<li><a href="http://herdingcode.com/?p=208">Herding Code 57: Presentation Patterns with Jeremy Miller, Ward Bell, Rob Eisenberg and Glenn Block (Part 1)</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/ivEUoSFUwBw" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-155-ward-bell-on-single-page-applications-and-breeze/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/eTrBJ6l8mCc/HerdingCode-0155-Ward-Bell.mp3" fileSize="45190554" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>On this episode of Herding Code, the guys talk to Ward Bell about single page applications and the Breeze project. Download / Listen: Herding Code 155 &amp;#8211; Ward Bell on Single Page Applications and Breeze Show Notes: General SPA discussion Ward talks a</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>On this episode of Herding Code, the guys talk to Ward Bell about single page applications and the Breeze project. Download / Listen: Herding Code 155 &amp;#8211; Ward Bell on Single Page Applications and Breeze Show Notes: General SPA discussion Ward talks about how IdeaBlade has been building tools for working with data in rich [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-155-ward-bell-on-single-page-applications-and-breeze/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/eTrBJ6l8mCc/HerdingCode-0155-Ward-Bell.mp3" length="45190554" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0155-Ward-Bell.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 154 – Aaron Stannard on MarkedUp, founding a startup, and Windows 8 development</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/MFDfsYE1dpY/</link>
		<comments>http://herdingcode.com/herding-code-154-aaron-stannard-on-markedup-founding-a-startup-and-windows-8-development/#comments</comments>
		<pubDate>Fri, 16 Nov 2012 00:48:43 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=493</guid>
		<description><![CDATA[While at the //build/ conference, Jon talks to Aaron Stannard about how he left Microsoft to start up a new company focused on analytics for Windows 8 applications. They discuss Windows 8 development and the Window Store ecosystem and the technology stack Aaron and team settled on for their analytics platform. They end up by [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>While at the //build/ conference, Jon talks to Aaron Stannard about how he left Microsoft to start up a new company focused on analytics for Windows 8 applications. They discuss Windows 8 development and the Window Store ecosystem and the technology stack Aaron and team settled on for their analytics platform. They end up by discussing the process of going from an employed software developer to running a software startup.</p>
<p><em>Note: The audio is a bit crackly in a few parts, but just for a few seconds.</em></p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0154-Aaron-Stannard.mp3">Herding Code 154 &#8211; Aaron Stannard on MarkedUp, founding a startup, and Windows 8 development</a> </p>
<p>Show Notes:</p>
<ul>
<li>Jon starts by asking Aaron about what led him to founding a startup. Aaron explains how his first startup failed and his blog post about Why .NET Adoption Lags Among Startups got him a job as a startup evangelist at Microsoft</li>
<li>Opportunities: Windows 8 development and MarkedUp
<ul>
<li>Aaron explains how he saw a key opportunity around the Windows app ecosystem and why the teaming seemed right to really dive into this now. Jon agrees that this is a really interesting time in the Windows developer landscape.</li>
<li>Aaron explains that MarkedUp delivers in-app analytics for WinRT and eventually Windows 8, answering questions like how many people use your app every day, how much time they spend using it, which features they use, and what in-app purchases they make.</li>
<li>Jon mentions a key difference in the Windows Store which allows you to have one app which can be upgraded from free to paid, whereas other platforms have duplicate applications for free and paid.</li>
<li>Aaron talks about his recent blog post comparing iOS economics vs. Windows 8 economics titled <a href="http://blog.markedup.com/2012/10/win8-developers-dont-make-the-terrible-mistake-of-treating-the-windows-store-like-the-ios-app-store/">Win8 Developers: Don&#8217;t Make the Terrible Mistake of Treating the Windows Store like the iOS App Store</a>. He explains that there&#8217;s an opportunity for Windows 8 applications to do quite a bit more than simple little hit driven apps, and Windows 8 applications can and should do quite a bit more.</li>
<li>Aaron talks about the pricing model &#8211; free now, there will always be a free model, and it&#8217;s intended to be pretty reasonable for developers with successful applications.</li>
</ul>
</li>
<li>Tech talk about WinRT development and how MarkedUp integrates therewith
<ul>
<li>Aaron begins explaining the technology stack, but Jon interrupts him to ask him to explain what a .winmd file is. Aaron discusses some of the key similarities and differences between WinRT and .NET development.</li>
<li>Aaron talks about how they&#8217;ve cleaned up a lot of the information that&#8217;s exposed so it&#8217;s useful.</li>
<li>There&#8217;s NuGet package you add to your Windows 8 application which brings in the .winmd dependency.</li>
<li>There&#8217;s a managed singleton approach which handles a lot of things automatically, like application startup and shutdown. You can also log additional events through the managed singleton.</li>
<li>There&#8217;s a JavaScript wrapper that sits on top of the .winmd file for WinJS applications which flattens some of the hierarchies and namespaces for logging.</li>
<li>Aaron says he&#8217;s seen this as a common pattern for Windows 8 development &#8211; write some .NET code, ship it as a .winmd file, and provide a JavaScript wrapper for WinJS.</li>
<li>Aaron mentions that he likes this pattern for application development, too: write business logic in C# and expose it through .winmd put a JavaScript wrapper on top of it to write the interface in HTML and CSS. He like the flexbox and grid system for layout, and thinks the CSS3 media selector based layout orientation systems is a lot simpler than trying to do that in XAML.</li>
<li>Aaron explains that as an analytics component, they will never degrade the user experience, so they&#8217;ll always swallow internal exceptions.</li>
<li>The communications system is also designed to prevent impacting the user, so they cache locally and only send a single message at a time.</li>
</ul>
</li>
<li>RavenDB and how it compares with other document databases like MongoDB
<ul>
<li>Data is stored in RavenDB. They evaluated both RavenDB and MongoDB but decided RavenDB worked better for them at this point. He describes some differences between RavenDB and MongoDB.
<ul>
<li>RavenDB projections make it easier to do server-side transforms.</li>
<li>RavenDB has some nice batch loading features.</li>
<li>RavenDB lets you express map-reduce as a pre-computed index.</li>
<li>Aaron doesn&#8217;t like the way sharded RavenDB clusters work.</li>
<li>They&#8217;re probably going to go to Cassandra or HBase eventually.</li>
<li>Aaron talks about a solution (Hircine) they came up with to precompute RavenDB indexes at build time rather than startup.</li>
<li>RavenDB is great for unit testing</li>
</ul>
</li>
<li>Aaron talks about their build system using Albacore and talks about their build and deployment system.</li>
<li>Jon asks about why they&#8217;re planning to move from RavenDB to Cassandra or HBase. Aaron says he doesn&#8217;t like the scale-out / sharding system in RavenDB and doesn&#8217;t think it will work for them as they scale. Aaron talks about their plans to handle complex analytics at scale.</li>
</ul>
</li>
<li>Jon shifts gears to ask about starting a company. How do you get started?
<ul>
<li>Aaron talks about the history of how they got started &#8211; with a mission.</li>
<li>Next questions: Am I the right person to execute this? Is this a problem worth solving? Is this economically viable?</li>
<li>Build a minimum viable product and show it to people you trust. Aaron gives examples from the history of starting MarkedUp, with an application that let you annotate and upload screenshots from iOS. Jon and Aaron discuss how Aaron was able to do most of the minimum viable product development without quitting his job.</li>
<li>First step in actually starting the company: talk to a lawyer to get your structure and ownership figured out.</li>
<li>How do you make the decision to go fulltime?</li>
<li>Figuring out how to pay the bills: can you monetize quickly, or do you raise money?</li>
<li>Aaron talks about the process of getting funded and networking with potentials investors.</li>
<li>It&#8217;s an emotional rollercoaster &#8211; be ready to change tactics, but don&#8217;t quit.</li>
<li>Jon and Aaron talk about the benefits of doing this all incrementally &#8211; at least until you go full time.</li>
</ul>
</li>
<li>There&#8217;s a registration URL for Herding Code listeners (<a href="https://markedup.com/account/register/?utm_campaign=herdingcode">https://markedup.com/account/register/?utm_campaign=herdingcode</a>) &#8211; or you can just go through registration and enter the code <strong>HERDINGCODE</strong> into the registration code field on the form.</li>
<li>Aaron says he&#8217;d be happy to talk with other developers who are interested in the startup process.</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Aaron Stannard (<a href="http://www.aaronstannard.com/">blog</a>, <a href="https://twitter.com/aaronontheweb">@aaronontheweb</a>)</li>
<li><a href="https://markedup.com/">MarkedUp</a>  (<a href="https://twitter.com/markedupmobi">@MarkedUpMobi</a>)</li>
<li><a href="http://www.aaronstannard.com/post/2010/07/03/NET-Culture-Shock-Why-NET-Adoption-Lags-Among-Startups.aspx">.NET Culture Shock: Why .NET Adoption Lags Among Startups</a></li>
<li><a href="http://blog.markedup.com/2012/10/win8-developers-dont-make-the-terrible-mistake-of-treating-the-windows-store-like-the-ios-app-store/">Win8 Developers: Don&#8217;t Make the Terrible Mistake of Treating the Windows Store like the iOS App Store</a></li>
<li><a href="http://apps.microsoft.com/webpdp/en-US/app/router-cocpit/75370ce9-5ed4-4b7b-b23d-4938dbf5ec12">Router .CoCPit</a> application</li>
<li><a href="http://ravendb.net/">RavenDB</a> (<a href="http://herdingcode.com/?p=255">Herding Code 83: Ayende Rahien on RavenDB</a>)</li>
<li><a href="http://cassandra.apache.org/">Cassandra</a></li>
<li><a href="http://hbase.apache.org/">HBase</a></li>
<li>Hircine: <a href="https://github.com/markedup-mobi/hircine">Stand-alone RavenDB index builder, used in CI systems and automated deployments</a></li>
<li><a href="https://markedup.com/account/register/?utm_campaign=herdingcode">MarkedUp registration link for Herding Code listeners</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/MFDfsYE1dpY" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-154-aaron-stannard-on-markedup-founding-a-startup-and-windows-8-development/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/xUSIbd3xgdA/HerdingCode-0154-Aaron-Stannard.mp3" fileSize="45313800" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>While at the //build/ conference, Jon talks to Aaron Stannard about how he left Microsoft to start up a new company focused on analytics for Windows 8 applications. They discuss Windows 8 development and the Window Store ecosystem and the technology stack</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>While at the //build/ conference, Jon talks to Aaron Stannard about how he left Microsoft to start up a new company focused on analytics for Windows 8 applications. They discuss Windows 8 development and the Window Store ecosystem and the technology stack Aaron and team settled on for their analytics platform. They end up by [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-154-aaron-stannard-on-markedup-founding-a-startup-and-windows-8-development/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/xUSIbd3xgdA/HerdingCode-0154-Aaron-Stannard.mp3" length="45313800" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0154-Aaron-Stannard.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 153 – Matt Wrock on RequestReduce, Chocolatey and BoxStarter</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/2o1DpvDFinU/</link>
		<comments>http://herdingcode.com/herding-code-153-matt-wrock-on-requestreduce-chocolatey-and-boxstarter/#comments</comments>
		<pubDate>Mon, 15 Oct 2012 23:04:59 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=489</guid>
		<description><![CDATA[The guys talk to Matt Wrock about Matt&#8217;s RequestReduce web optimization framework and his work to automate building and configuring Windows developer machines with the Chocolatey and BoxStarter projects. Download / Listen: Herding Code 153 &#8211; Matt Wrock on RequestReduce, Chocolatey and BoxStarter Show Notes: RequestReduce Matt explains how he got started with RequestReduce &#8211; [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to Matt Wrock about Matt&#8217;s RequestReduce web optimization framework and his work to automate building and configuring Windows developer machines with the Chocolatey and BoxStarter projects.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0153-Matt-Wrock.mp3">Herding Code 153 &#8211; Matt Wrock on RequestReduce, Chocolatey and BoxStarter</a> </p>
<p>Show Notes:</p>
<ul>
<li>RequestReduce
<ul>
<li>Matt explains how he got started with RequestReduce &#8211; a site optimization system that&#8217;s been designed as a plug-and-play system that can work well with legacy sites without any code changes.</li>
<li>Matt explains how RequestReduce fits in with other systems like the ASP.NET Web Optimization system and Casette.</li>
<li>K. Scott asks Matt how it works and how a user would configure it. Matt explains how it can be installed via NuGet, and how it uses a Response Filter to process the output.</li>
<li>Matt explains how everything&#8217;s handled via a queue on a background thread, so there&#8217;s no performance impact on initial requests.</li>
<li>RequestReduce pulls in CSS, images and JavaScript so it can work with remote content and CDNs.</li>
<li>Matt gives a shoutout to AjaxMin and the speed at which he and Ron Logan have been able to turn around fixes and improvements.</li>
<li>Matt explains the complications involved in creating image sprites, and why he only sprites images with a defined width.</li>
<li>Matt explains how both quantization and compression can dramatically affect image size.</li>
<li>Matt explains why he doesn&#8217;t sprite images when he can&#8217;t determine the image width.</li>
<li>Scott K talks about his previous job and how they&#8217;d looked at converting all images to Base64. Matt says that he&#8217;s looked at that, but decided it&#8217;s not something you&#8217;d necessarily want to apply to all images.</li>
<li>Jon asks Matt to explain CSS spriting in more detail. Jon says they use sprites on the ASP.NET site, and Matt says the ASP.NET site is one of his test case sites.</li>
<li>K. Scott asks Matt why the code is calculating CSS specificity scores.</li>
<li>K. Scott asks about what the results have been. Matt says it varies by site, but on one large site they&#8217;ve seen a 33% improvement.</li>
<li>Jon mentions that RequestReduce also handles Less and CoffeeScript. Matt says he&#8217;s making use of SassAndCoffee.</li>
</ul>
</li>
<li>BoxStarter and Chocolatey
<ul>
<li>Matt talks about how he got started with BoxStarter &#8211; he was tired of wasting time building development boxes, and he didn&#8217;t think VMs were a good solution.</li>
<li>Matt thought Chocolatey solved some of the program installation issues, but didn&#8217;t handle common customization scenarios like Windows settings, file associations, taskbar links, path, etc.</li>
<li>Chocolatey handled some of the things Matt wanted, but not everything. He started by customizing and wrapping Chocolatey, but decided it would be better to contribute directly to Chocolatey.</li>
<li>BuildStarter can work with either a local BuildPackages folder or a custom MyGet feed.</li>
<li>Matt says he might like to use ClickOnce in the future.</li>
<li>Matt talks about how he&#8217;d like to have a web based shopping list approach, where you could just click off all the things you wanted and it would set up a package for you &#8211; kind of like like Ninite, but a lot more comprehensive.</li>
<li>Jon says he was happy to see a recent Chocolatey commit that can turn Windows features on and off.</li>
<li>Matt explains how he&#8217;s been coordinating with Rob Reynolds to decide what he should contribute directly to Chocolatey and what should be separate Chocolatey packages.</li>
<li>Jon says he didn&#8217;t get Chocolatey right away, but what sold him on it was the dependency management. Matt explains how this has come in handy in his work in the TFS dev team.</li>
</ul>
</li>
<li>TFS
<ul>
<li>Jon asks Matt about his work on new role on the TFS team. Matt says he&#8217;s working on the REST API for work item tracking and would love any feedback on work item tracking.</li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Matt Wrock (<a href="http://www.mattwrock.com/">blog</a>, <a href="https://twitter.com/mwrockx">@mwrockx</a>)</li>
<li><a href="http://requestreduce.org/">RequestReduce</a></li>
<li><a href="http://getcasette.net">Casette</a></li>
<li><a href="http://nuget.org/packages/SassAndCoffee">SassAndCoffee</a></li>
<li><a href="http://boxstarter.codeplex.com/">BoxStarter</a></li>
<li><a href="http://chocolatey.org/">Chocolatey</a></li>
<li>Rob Reynolds (<a href="https://twitter.com/ferventcoder">@ferventcoder</a>)</li>
<li><a href="http://herdingcode.com/?p=373">Herding Code 128: Rob Reynolds on Chocolatey and the Chuck Norris Frameworks</a></li>
<li><a href="http://herdingcode.com/?p=334">Herding Code 118: Paul Betts on SassAndCoffee</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/2o1DpvDFinU" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-153-matt-wrock-on-requestreduce-chocolatey-and-boxstarter/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/rAkqfnZqTx8/HerdingCode-0153-Matt-Wrock.mp3" fileSize="47203980" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to Matt Wrock about Matt&amp;#8217;s RequestReduce web optimization framework and his work to automate building and configuring Windows developer machines with the Chocolatey and BoxStarter projects. Download / Listen: Herding Code 153 &amp;#8211; M</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to Matt Wrock about Matt&amp;#8217;s RequestReduce web optimization framework and his work to automate building and configuring Windows developer machines with the Chocolatey and BoxStarter projects. Download / Listen: Herding Code 153 &amp;#8211; Matt Wrock on RequestReduce, Chocolatey and BoxStarter Show Notes: RequestReduce Matt explains how he got started with RequestReduce &amp;#8211; [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-153-matt-wrock-on-requestreduce-chocolatey-and-boxstarter/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/rAkqfnZqTx8/HerdingCode-0153-Matt-Wrock.mp3" length="47203980" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0153-Matt-Wrock.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 152 – Josh Twist on Azure Mobile Services</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/Ixf73M_FlMY/</link>
		<comments>http://herdingcode.com/herding-code-152-josh-twist-on-azure-mobile-services/#comments</comments>
		<pubDate>Mon, 24 Sep 2012 20:08:53 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=483</guid>
		<description><![CDATA[The guys talk to Josh Twist about the newly released Azure Mobile Services. Download / Listen: Herding Code 152 &#8211; Josh Twist on Azure Mobile Services Show Notes: How Azure Mobile Services got started Jon asks Josh how he got involved with Azure Mobile Services. Jon asks Josh about the Zumo code name &#8211; ZU [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to Josh Twist about the newly released Azure Mobile Services.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0152-Josh-Twist.mp3">Herding Code 152 &#8211; Josh Twist on Azure Mobile Services</a> </p>
<p>Show Notes:</p>
<ul>
<li>How Azure Mobile Services got started
<ul>
<li>Jon asks Josh how he got involved with Azure Mobile Services.</li>
<li>Jon asks Josh about the Zumo code name &#8211; ZU from Azure, MO from Mobile.</li>
<li>Josh explains how things got off the ground with a real startup feel.</li>
<li>Steve Sanderson was a dev on the team, working on the interactive portal experience.</li>
<li>Jon asks about platform support. Josh says that Windows 8 was the platform that was initially announced at launch, but other platforms are on the way very soon.</li>
</ul>
</li>
<li>The three personas the Azure Mobile Services
<ul>
<li>The hobbiest app developer who have very limited time and wants to spend the time on their mobile clients, not the backend services. Jon talks about the experiences he had on The Full Stack project with Jesse Liberty.</li>
<li>The client focused developer is working full time on a mobile application, but still wants to focus on the application rather than the backend &#8211; and wants to make sure that it&#8217;s going to scale when needed.</li>
<li>The veteran backend developer, who is very comfortable with building services. Josh says these folks are already pretty well served with existing Azure services.</li>
<li>Josh says that Azure is primarily focused at the first two personas &#8211; developers who want to focus on the client applications and have the back end just work.</li>
</ul>
</li>
<li>Jon asks about an example &#8211; a social game where he can invite friend to play a game, track high scores, etc.
<ul>
<li>Josh lists out some of the features  Jon would probably want &#8211; authentication, structured storage, push notifications, etc.</li>
<li>Josh describes some of the challenges Jon might run into and how Azure Mobile Services handles extensibility by allowing for server-side scripts, written in JavaScript.</li>
<li>Jon asks Josh about the identity provider story.</li>
<li>Jon asks if the server-side JavaScript scripts use Node.js.</li>
</ul>
</li>
<li>Josh talks through a to do list sample application.</li>
<li>Jon asks about how the client libraries will likely look on other platforms like iOS and Android.</li>
<li>Data
<ul>
<li>Jon and Josh talk about the data story.</li>
<li>Josh explains the dynamic schema system.</li>
<li>Jon asks handling hierarchies in data. Josh says not yet, although you can use scripts to handle that.</li>
</ul>
</li>
<li>Lots of random questions time!
<ul>
<li>Jon talks about a blog post on accessing the Azure Mobile Services via the REST services. Josh says that&#8217;s great, encouraged, and you can use that approach to use Azure Mobile Services from all kinds of frameworks and platforms, mentioning several examples.</li>
<li>Kevin asks about handling the scripts as production code &#8211; can it be under version control? Josh says that&#8217;s in the works. They&#8217;re also thinking about the packaging story, to allow for exporting services and moving them between environments.</li>
<li>Kevin asks if there&#8217;s a migration path if you hit limits in Azure Mobile Services. Josh says that you&#8217;d handle this through composition with other services, but they&#8217;re looking for feedback for things they can add via service and script support.</li>
<li>Kevin asks how the billing works. Josh says you pay for what you use, so you pay for the underlying services you use. You can get 10 free instances, but can pay to scale up if you want.</li>
<li>Kevin asks about their experiences in building with Node.js. Josh explains how the runtime runs on Node, but the service management uses ASP.NET Web API. They mainly picked Node.js to allow for server-side scripting using JavaScript.</li>
<li>Jon asks if there&#8217;s a way to run locally for testing. Josh says not yet, but definitely something they&#8217;re think about.</li>
<li>Jon asks about concurrency support.</li>
<li>Kevin asks about monitoring and troubleshooting support. Josh lists out some of the realtime dashboard features.</li>
<li>Jon asks about other configuration options in the Azure portal. Josh lists a few &#8211; authentication, data, etc. &#8211; but says the goal is to keep things simple.</li>
</ul>
</li>
<li>Relationship of Azure Mobile Services with Azure Web Sites and Azure in general.
<ul>
<li>Jon asks about the relationship to Azure Web Sites. Josh explains how they worked with the Azure Web Sites team to get sandboxing. They&#8217;re running on a special version of the Azure Web Sites system that&#8217;s specially tuned for their services.</li>
<li>Jon asks about scaling with Azure Mobile Services. Josh educates Jon on some Azure basics he really should know.</li>
</ul>
</li>
<li>Jon asks Josh about how listeners can get started.
<ul>
<li>Josh list the link: <a title="http://aka.ms/mobileservices" href="http://aka.ms/mobileservices">http://aka.ms/mobileservices</a></li>
<li>Josh and Jon joke about the todo list quickstart challenge. Josh says new users should be able to have an application running in under 5 minutes, and Jon says he was impressed with Josh&#8217;s performance on Cloud Cover: 2:03 despite heckling.</li>
</ul>
</li>
</ul>
<p>Show Links:</p>
<ul>
<li>Josh Twist (<a href="http://www.thejoyofcode.com/">blog</a>, <a href="https://twitter.com/joshtwist">@joshtwist</a>)</li>
<li><a title="Azure Mobile Services - free trial" href="http://aka.ms/azuremobile-hc">Azure Mobile Services &#8211; free trial</a></li>
<li><a href="http://blog.stevensanderson.com/">Steve Sanderson</a></li>
<li><a href="http://channel9.msdn.com/Shows/Cloud+Cover/Episode-89-Windows-Azure-Mobile-Services">Cloud Cover Episode 89 &#8211; Windows Azure Mobile Services</a></li>
<li>Blog post by Filip W. (StrathWeb): <a href="http://www.strathweb.com/2012/09/using-azure-mobile-services-in-your-web-apps-through-asp-net-web-api/">Using Azure Mobile Services in your web apps through ASP.NET Web API</a></li>
<li>Web Camps TV interview: <a href="http://channel9.msdn.com/Shows/Web+Camps+TV/What-Mobile-Services-Mean-to-the-Web-Developer">What Mobile Services Mean To The Web Developer</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/Ixf73M_FlMY" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-152-josh-twist-on-azure-mobile-services/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/LInKvXuUGrQ/HerdingCode-0152-Josh-Twist.mp3" fileSize="43634255" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to Josh Twist about the newly released Azure Mobile Services. Download / Listen: Herding Code 152 &amp;#8211; Josh Twist on Azure Mobile Services Show Notes: How Azure Mobile Services got started Jon asks Josh how he got involved with Azure Mobi</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to Josh Twist about the newly released Azure Mobile Services. Download / Listen: Herding Code 152 &amp;#8211; Josh Twist on Azure Mobile Services Show Notes: How Azure Mobile Services got started Jon asks Josh how he got involved with Azure Mobile Services. Jon asks Josh about the Zumo code name &amp;#8211; ZU [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-152-josh-twist-on-azure-mobile-services/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/LInKvXuUGrQ/HerdingCode-0152-Josh-Twist.mp3" length="43634255" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0152-Josh-Twist.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 151 – Rob Eisenberg on RPGWithMe, Durandal, and XAML vs. HTML5 development</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/KMz8387qI9E/</link>
		<comments>http://herdingcode.com/herding-code-151-rob-eisenberg-on-rpgwithme-durandal-and-xaml-vs-html5-development/#comments</comments>
		<pubDate>Mon, 17 Sep 2012 21:33:36 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=477</guid>
		<description><![CDATA[The guys talk to Rob Eisenberg about RPGWithMe (his new web-based platform centered around tabletop RPGs), Durandal (the essence of Caliburn.Micro re-imagined for HTML and Javascript) and his thoughts on the current state of XAML development. Download / Listen: Herding Code 151 &#8211; Rob Eisenberg on RPGWithMe, Durandal, and XAML vs. HTML5 development Show Notes: [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to Rob Eisenberg about RPGWithMe (his new web-based platform centered around tabletop RPGs), Durandal (the essence of Caliburn.Micro re-imagined for HTML and Javascript) and his thoughts on the current state of XAML development.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0151-Rob-Eisenberg.mp3">Herding Code 151 &#8211; Rob Eisenberg on RPGWithMe, Durandal, and XAML vs. HTML5 development</a>
<p>Show Notes:</p>
<ul>
<li>RPGWithMe and Durandal
<ul>
<li>K Scott asks Rob to discribe RPGWithMe. RPGWithMe is a subscription based web product for playing tabletop RPGs. </li>
<li>K Scott asks how he found HTML5&#160; compared to XAML development, and whether he used any frameworks to develop it. Rob explains how he built a new framework, Duandel, to bring Caliburn.Micro style development to HTML5 development. </li>
<li>Rob explains how Durandal uses&#160; RequireJS to modularize things &#8211; viewmodels are mapped to modules, and modules are mapped to HTML files. Knockout is used to compose things at runtime, and RequireJS packages things up into a single file. </li>
<li>Jon asks it it&#8217;s possible to use this with WinRT. Rob says he hasn&#8217;t tried it, but thinks it should work since it&#8217;s just a JavaScript file. </li>
<li>K Scott asks if the same conventions in Caliburn.Micro apply. Rob says he&#8217;s just using Knockout at this point, but would eventually like to phase out Knockout for a custom databinding system. Knockout&#8217;s fine, but he doesn&#8217;t like the syntax for databinding and the intrusiveness into viewmodels. </li>
<li>K Scott, Rob and Kevin talk about the intrusiveness of Javascript frameworks which convert properties to functions to allow for observability, and how newer browsers can wrap getters and setters to imporove the code readability and debugging experience. </li>
<li>K Scott asks whats on the server side. Rob&#8217;s using ASP.NET MVC 3 running on AppHarbor with cloud hosted RavenDB with IronMQ and some Amazon services. </li>
<li>K Scott asks how all the realtime stuff is working in the browser. Rob&#8217;s using PubNub for communications and Canvas and CSS 3 for rendering. He explains that it&#8217;s really tricky to get high performance, high quality graphics rendering working on different devices with an interesting example form an issue he hit with larger images on iPads. </li>
<li>Jon asks if there&#8217;s work he&#8217;d do in the future to support Retina / high dpi displays. He says he&#8217;s moving away from images to CSS 3 where possible. </li>
<li>Jon asks about the creation / editing environment. Rob explains how the system is built around user generated content. Jon asks if there are ways </li>
<li>K Scott asks what games Rob&#8217;s played in the past. Rob says he&#8217;s played Dungeons and Dragons 4th Edition and Savage Worlds and explains some of the background of tabletop role playing games. He supports three gaming systems, but doesn&#8217;t enforce rules &#8211; this allows for a lot more flexibility and matches the way people play in the real world. </li>
<li>K Scott asks about how players would communicate while playing (e.g. to yell <a href="http://www.youtube.com/watch?v=uVZ50qAQrpc">Leroy Jenkins</a>!). </li>
<li>Jon asks more about rules and enforcement, and Rob lists a lot of reasons why he doesn&#8217;t think it&#8217;s a good idea to get into rule enforcement. </li>
<li>K Scott asks about how the metadata is handled. Rob describes how he&#8217;s got an abstract model that allows for supporting &#8211; and importing from &#8211; three gaming systems, and how he wants to make it more extensible in the future. </li>
<li>Kevin asks if there&#8217;s a mobile version. Rob talks about platform support &#8211; works on iPad, Windows 8, and Android although Android performance is the worst. </li>
<li>K Scott asks about the Durandal project out on GitHub. </li>
</ul>
</li>
<li>Caliburn and Caliburn.Micro
<ul>
<li>K Scott asks Rob what&#8217;s going on with Caliburn and Caliburn.Micro. Caliburn.Micro is adding full support for WinRT and considering how to add support for additional WinRT features. He said he was worried about porting to WinRT but it wasn&#8217;t too bad &#8211; most of the work was around changes to the reflection API and lack of behaviors. He&#8217;s hopeful that this means it&#8217;ll port to Windows Phone 8. </li>
</ul>
</li>
<li>XAML and HTML5 development
<ul>
<li>Kevin asks about Rob&#8217;s frustration on building tools for XAML development due to the differences between the platforms. Rob says he&#8217;s been moving to HTML5 more due to all the headaches. </li>
<li>Jon wonders if some of this may be transitional with things moving to WinRT as a standard XAML platform. Rob agrees, but he&#8217;s got from fatigue from all the times he&#8217;s had to port his code in the past. </li>
<li>Jon says that it&#8217;s nice that in the HTML5 world you can use tools like jQuery to abstract differences between browsers, whereas you can&#8217;t really do that when working about different XAML platforms. Rob talks about how people are trying to abstract things in the XAML world, but it&#8217;s not really possible to abstract platform differences. </li>
<li>Jon, Kevin and Rob discuss the differences between styling in XAML and HTML5 development. </li>
<li>Jon asks Rob about the developer decision between HTML5 and XAML for WinRT development. Rob&#8217;s happy with the choice, and thinks it&#8217;s funny that Microsoft did this rather than Google. </li>
</ul>
</li>
<li>K Scott asks Rob if there&#8217;s any new big things going on he wants people to know about, and Rob mentions the Kickstarter effort to add interactive character sheets. </li>
</ul>
<p>Show Links:</p>
<ul>
<li>Rob Eisenberg (<a href="http://devlicio.us/blogs/rob_eisenberg/">blog</a>, <a href="https://twitter.com/eisenbergeffect">@eisenbergeffect</a>) </li>
<li>Blog post: <a href="http://devlicio.us/blogs/rob_eisenberg/archive/2012/08/02/today-all-your-wildest-dreams-come-true.aspx">Today..All Your Wildest Dreams Come True</a> </li>
<li><a title="https://github.com/EisenbergEffect/Durandal" href="https://github.com/EisenbergEffect/Durandal">https://github.com/EisenbergEffect/Durandal</a> </li>
<li><a href="http://www.pubnub.com/">PubNub</a> </li>
<li><a href="https://appharbor.com/">AppHarbor</a> </li>
<li><a href="http://knockoutjs.com/">Knockout</a> </li>
<li><a href="http://caliburnmicro.codeplex.com/SourceControl/list/changesets">Caliburn.Micro changeset adding WinRT support</a> </li>
<li>Kickstarter: <a href="http://www.kickstarter.com/projects/eisenbergeffect/rpgwithme-create-characters-for-your-tabletop-rpg">RPGWithMe: Create Characters for Your Tabletop RPG</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/KMz8387qI9E" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-151-rob-eisenberg-on-rpgwithme-durandal-and-xaml-vs-html5-development/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/DC92NonBvM8/HerdingCode-0151-Rob-Eisenberg.mp3" fileSize="44275533" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to Rob Eisenberg about RPGWithMe (his new web-based platform centered around tabletop RPGs), Durandal (the essence of Caliburn.Micro re-imagined for HTML and Javascript) and his thoughts on the current state of XAML development. Download / L</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to Rob Eisenberg about RPGWithMe (his new web-based platform centered around tabletop RPGs), Durandal (the essence of Caliburn.Micro re-imagined for HTML and Javascript) and his thoughts on the current state of XAML development. Download / Listen: Herding Code 151 &amp;#8211; Rob Eisenberg on RPGWithMe, Durandal, and XAML vs. HTML5 development Show Notes: [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-151-rob-eisenberg-on-rpgwithme-durandal-and-xaml-vs-html5-development/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/DC92NonBvM8/HerdingCode-0151-Rob-Eisenberg.mp3" length="44275533" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0151-Rob-Eisenberg.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 150 – David Starr on the People, Practices, and Tools of Development</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/db8qUN_7sg0/</link>
		<comments>http://herdingcode.com/herding-code-150-david-starr-on-the-people-practices-and-tools-of-development/#comments</comments>
		<pubDate>Fri, 07 Sep 2012 17:46:44 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=471</guid>
		<description><![CDATA[The guys talk to David Starr about how people, practices and tools factor into software development. Can developer tooling be part of the solution rather than part of the problem? What&#8217;s the state of Scrum? How does Nascar fit in? Download / Listen: Herding Code 150 &#8211; David Starr on the People, Practices, and Tools [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys talk to David Starr about how people, practices and tools factor into software development. Can developer tooling be part of the solution rather than part of the problem? What&#8217;s the state of Scrum? How does Nascar fit in?</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0150-David-Starr.mp3">Herding Code 150 &#8211; David Starr on the People, Practices, and Tools of Development</a> </p>
<p>Show Notes:</p>
<ul>
<li>From Nascar to Scrum.org to Microsoft
<ul>
<li>K Scott outs David as a developer of the original NASCAR site.</li>
<li>David&#8217;s been working with Scrum.org but just took a job at Microsoft in the Visual Studio team as a senior PM based on his interest in executable specifications.</li>
<li>K Scott asks David about his thoughts based on working with Scrum.org. David sees Scrum as nearly ubiquitous, but most just use it as a way to manage daily checklists rather than effect broader change.</li>
</ul>
</li>
<li>SubSpec and executable specifications
<ul>
<li>K Scott asks David about his recent post on SubSpec and how it compares to SpecFlow.</li>
</ul>
</li>
<li>Software code of ethics
<ul>
<li>K Scott asks David about his post thinking about a professional code of ethics for software development.</li>
<li>David thinks it would be nice if we had a profession.</li>
<li>Jon asks if this kind of approach is even relevant to a lot of most software developers.</li>
<li>Scott K mentions a discussion on the show a few years ago about board certification but wonders who would run it.</li>
<li>David says that any certification offered by a tool vendor or methodology proponent is worthless.</li>
<li>Scott K asks if there&#8217;s any overarching certifiable skills that bridge Ruby, Scala, Java, .NET, architecture, development, etc. David says that in other trades it&#8217;s unions that push things, but doesn&#8217;t want that in the software world.</li>
<li>Jon says that he sees so much disagreement on values between languages and methodologies that he wonders if our profession could agree on anything at all.</li>
<li>Scott K asks if software really is a craft, as he doesn&#8217;t  see beauty in code. David says he doesn&#8217;t see code as words but as shapes. Scott K, David and Jon discuss where the beauty really is &#8211; perhaps not the code, but the result.</li>
</ul>
</li>
<li>Jon asks how these discussions and values tie into Visual Studio tooling.
<ul>
<li>David says that tooling is a great way to take the kinds of things bleeding edge developers are excited about and turn them into things that are accepted and used by the broader community &#8211; as long as the hierarchy of people over process and process over tools is respected, it&#8217;s a great idea to make better tools.</li>
<li>Scott K asks what he sees are the most important things to fix in the tooling. David says he&#8217;d like to see development teams modeled as teams rather than differing roles. He&#8217;d like to improve the experience for the &#8220;specializing generalist.&#8221;</li>
<li>David says that he sees the tools making the rules in the real world, and if the tools are counter to our value systems we should change that.</li>
<li>Scott K says people might just be fooling lights to green and David says that&#8217;s a fireable offence. Jon asks if it&#8217;s possible to automate that by integrating TFS with Microsoft CRM.</li>
</ul>
</li>
<li><a href="https://twitter.com/codereflection">Jeff Schumacher</a> asks if he still has the awesome fire shoes.</li>
<li><a href="https://twitter.com/thecodejunkie">The Code Junkie</a> asks why someone should pick TFS over the other options when doing agile / scrum.</li>
<li><a href="https://twitter.com/brianlagunas">Brian Lagunas</a> asks  what are the downsides of TDD.</li>
<li>There is a frightening discussion of a theoretical XamlSpec testing framework.</li>
<li>Scrum effectiveness
<ul>
<li><a href="https://twitter.com/stack72">Paul Stack</a> whether scrum has become a make believe methodology companies use to pretend they&#8217;re agile.</li>
<li>David says methodologies are always abused. He likes to tell people to try scrum by the book for a few months before making changes or compromises. Jon says every company wants to believe they&#8217;re different, and that&#8217;s rarely something to cling to.</li>
<li>Scott K says he sees people focusing on tooling and this leads to &#8220;scrumbut&#8221; &#8211; the practice of doing scrum, but&#8230; David says he really tries to avoid that term &#8211; scrum is a tool.</li>
<li>Kevin says he sees Scrum as a project management methodology as opposed to XP which also focuses on the engineering side. David says that you can&#8217;t be successful separating Scrum from good technical practices.</li>
</ul>
</li>
<li>David talks about his last user group presentation before moving, says he&#8217;s not going to be travelling as much in the near future, and conversation drifts back to XamlSpec as the most useful result of this discussion.</li>
</ul>
<p>Show Links:</p>
<ul>
<li>David Starr (<a href="http://elegantcode.com/author/dstarr/">blog</a>, <a href="https://twitter.com/elegantcoder">@elegantcoder</a>)</li>
<li><a href="http://web.archive.org/web/19961111213031/http://www.nascar.com/">Nascar.com</a> in the internet archive</li>
<li><a href="http://scrum.org/">Scrum.org</a></li>
<li><a href="http://elegantcode.com/2012/06/03/subspec/">SubSpec</a></li>
<li><a href="http://www.specflow.org/specflownew/">SpecFlow</a></li>
<li><a href="http://en.wikipedia.org/wiki/Redwood_City,_California#Largest_employers">Redwood City, CA</a></li>
<li>David&#8217;s blog post: <a href="http://elegantcode.com/2012/06/03/subspec/">SubSpec</a></li>
<li>David&#8217;s blog post: <a href="http://elegantcode.com/2012/04/18/software-professional-code-of-ethics/">Software Professional Code of Ethics</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/db8qUN_7sg0" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-150-david-starr-on-the-people-practices-and-tools-of-development/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/cfuttA-CneI/HerdingCode-0150-David-Starr.mp3" fileSize="34283754" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to David Starr about how people, practices and tools factor into software development. Can developer tooling be part of the solution rather than part of the problem? What&amp;#8217;s the state of Scrum? How does Nascar fit in? Download / Listen:</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to David Starr about how people, practices and tools factor into software development. Can developer tooling be part of the solution rather than part of the problem? What&amp;#8217;s the state of Scrum? How does Nascar fit in? Download / Listen: Herding Code 150 &amp;#8211; David Starr on the People, Practices, and Tools [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-150-david-starr-on-the-people-practices-and-tools-of-development/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/cfuttA-CneI/HerdingCode-0150-David-Starr.mp3" length="34283754" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0150-David-Starr.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 149 – What I Did With My Summer Vacation</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/iWIDqIM_HLw/</link>
		<comments>http://herdingcode.com/herding-code-149-what-i-did-with-my-summer-vacation/#comments</comments>
		<pubDate>Thu, 30 Aug 2012 22:03:29 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=469</guid>
		<description><![CDATA[The guys check in after a summer hiatus with a discussion covering travel, books, e-book readers, two factor authentication, Windows 8, OSX Mountain Lion, and hover cranes. Download / Listen: Herding Code 149 &#8211; What I Did With My Summer Vacation Show Notes: Travel Jon asks starts by asking where everyone&#8217;s been travelling to over [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The guys check in after a summer hiatus with a discussion covering travel, books, e-book readers, two factor authentication, Windows 8, OSX Mountain Lion, and hover cranes.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0149-What-I-did-with-my-summer-vacation.mp3">Herding Code 149 &#8211; What I Did With My Summer Vacation</a>
<p>Show Notes:</p>
<ul>
<li>Travel</li>
<ul>
<li>Jon asks starts by asking where everyone&#8217;s been travelling to over the summer. </li>
<li>K. Scott&#8217;s basically a European at this point.</li>
<li>Jon went to Oslo, Buenos Aires, Sao Paulo, Redmond, and rural New Jersey, and Kevin survived a road trip with kids thanks to iPads. Jon really liked Buenos Aires. He talks about his Web Camps presentations in South America, including a Windows Azure Web Sites talk where he builds and deploys a classic ASP app via FTP, ASP.NET / SignalR app via Visual Studio Web Deploy, a Node.js app via git publish, and a WordPress site via WebMatrix deploy in one hour. He&#8217;s amazed by how translators can listen to obscure technical jargon and speak in another language at the same time, including prompts about when the audience should politely laugh at a failed joke.</li>
<li>Kevin survived a road trip with kids thanks to iPads. </li>
</ul>
<li>e-book reading devices</li>
<ul>
<li>Scott K has been running the CyanogenMod Android ROM on his Nook Color.</li>
<li>There&#8217;s some discussion on the benefit of a 7&quot; form factor device and rumors about a 7-ish iDevice on the way.</li>
<li>Jon and Kevin love their Kindles, and Scott K talks about what he likes about the Nook Color.</li>
<li>Scott K mentions O&#8217;Reilly&#8217;s Bookworm site, which was sadly closed down as of March 31.</li>
<li>Jon has stayed with the Kindle eInk devices for the read aloud support, which is sadly missing on all the other top ebook devices. Kevin like the long battery life.</li>
</ul>
<li>Book Reports</li>
<ul>
<li>Jon kicks off book report time mentioning <a href="http://www.amazon.com/gp/product/B0051QNLWW/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B0051QNLWW&amp;linkCode=as2&amp;tag=jongall-20">The Door into Summer</a> and <a href="http://www.amazon.com/gp/product/0385495323/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0385495323&amp;linkCode=as2&amp;tag=jongall-20">The Code Book: The Science of Secrecy from Ancient Egypt to Quantum Cryptography</a></li>
<li>Scott K has been reading <a href="http://www.amazon.com/gp/product/B007978NU6/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B007978NU6&amp;linkCode=as2&amp;tag=jongall-20">The Hobbit: 75th Anniversary Edition</a> and <a href="http://www.amazon.com/gp/product/B004WEQVDK/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B004WEQVDK&amp;linkCode=as2&amp;tag=jongall-20">The Geeks Shall Inherit the Earth: Popularity, Quirk Theory, and Why Outsiders Thrive After High School</a>.</li>
<li>Kevin read <a href="http://www.amazon.com/gp/product/B000FBJCJE/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B000FBJCJE&amp;linkCode=as2&amp;tag=jongall-20">Snow Crash</a> and <a href="https://www.amazon.com/dp/B003G4W49C/ref=as_li_ss_til?tag=jongall-20&amp;camp=0&amp;creative=0&amp;linkCode=as4&amp;creativeASIN=B003G4W49C&amp;adid=1R1DPNQN44H34EC6BWPJ&amp;">Ender&#8217;s Game</a></li>
<li>Jon kind of liked <a href="http://www.amazon.com/gp/product/B004XVN0WW/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B004XVN0WW&amp;linkCode=as2&amp;tag=jongall-20">Reamde: A Novel</a> but doesn&#8217;t like it as much as <a href="http://www.amazon.com/gp/product/B000FC11A6/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B000FC11A6&amp;linkCode=as2&amp;tag=jongall-20">Cryptonomicon</a>.</li>
</ul>
<li>Geek Travel Tips</li>
<ul>
<li>Jon and K. Scott use a checklist to make sure they don&#8217;t forget important things like chargers and adapters.</li>
<li>K. Scott doesn&#8217;t assume anything and keeps a small bit of foreign cash handy.</li>
<li>Jon and K. Scott both really like TripIt.</li>
<li>Jon talks about how he handled a cancelled flight to Buenos Aires by calling in (rather than waiting in line) and being nice.</li>
<li>Jon and K. Scott both avoid checking bags when possible.</li>
</ul>
<li>Two factor authentication. </li>
<ul>
<li>Jon tells the story about how Mat Honan&#8217;s account was hacked.</li>
<li>The guys talk about how Google Two Factor Auth works for them.</li>
<li>Jon saw an interesting tip: use a separate e-mail account for password recovery.</li>
<li>Everyone complains about two factor auth&#8217;s usability and hopes it gets easier.</li>
</ul>
<li>K. Scott talks about how Internet Explorer 10 will have Do Not Track on by default. The guys talk about their thoughts on targeted ads and tracking: a little is good, too much gets creepy.</li>
<li>Jon&#8217;s using Windows 8 RTM. </li>
<ul>
<li>The guys discuss the user interface and discoverability. Scott K worries that nobody will be able to shut their computers off.</li>
<li>Jon likes the fast install and lock screen. Scott K talks about problems with face recognition login, but it looks like that was removed before RTM.</li>
</ul>
<li>OSX Mountain Lion</li>
<ul>
<li>Jon asks what the guys think about the change OSX so that Save As also saves over the original file. Kevin talks about some of the things he like in Mountain Lion.</li>
<li>Jon and Kevin discuss the different ways the Windows and Mac communities react to changes.</li>
<li>Jon asks about AirPlay and complains that it&#8217;s difficult to stream audio from one device to another.</li>
<li>Kevin talks about the notification system.</li>
<li>Jon asks about updates to connectors.</li>
</ul>
<li>Gold Medal or Martian Hover Crane?</li>
<ul>
<li>Unanimous love for the hover crane</li>
<li>This reminds the guys of a few more books: <a href="http://www.amazon.com/gp/product/0226458083/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0226458083&amp;linkCode=as2&amp;tag=jongall-20">The Structure of Scientific Revolutions</a> and <a href="http://www.amazon.com/gp/product/0385530803/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0385530803&amp;linkCode=as2&amp;tag=jongall-20">Physics of the Future: How Science Will Shape Human Destiny and Our Daily Lives by the Year 2100</a></li>
</ul>
</ul>
<p>Show Links:</p>
<ul>
<li>&#160;<a href="http://bookworm.oreilly.com/">http://bookworm.oreilly.com/</a></li>
<li>Books</li>
<ul>
<li><a href="http://www.amazon.com/gp/product/B0051QNLWW/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B0051QNLWW&amp;linkCode=as2&amp;tag=jongall-20">The Door into Summer</a></li>
<li><a href="http://www.amazon.com/gp/product/0385495323/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0385495323&amp;linkCode=as2&amp;tag=jongall-20">The Code Book: The Science of Secrecy from Ancient Egypt to Quantum Cryptography</a></li>
<li><a href="http://www.amazon.com/gp/product/B007978NU6/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B007978NU6&amp;linkCode=as2&amp;tag=jongall-20">The Hobbit: 75th Anniversary Edition</a> </li>
<li><a href="http://www.amazon.com/gp/product/B004WEQVDK/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B004WEQVDK&amp;linkCode=as2&amp;tag=jongall-20">The Geeks Shall Inherit the Earth: Popularity, Quirk Theory, and Why Outsiders Thrive After High School</a></li>
<li><a href="http://www.amazon.com/gp/product/B000FBJCJE/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B000FBJCJE&amp;linkCode=as2&amp;tag=jongall-20">Snow Crash</a> </li>
<li><a href="https://www.amazon.com/dp/B003G4W49C/ref=as_li_ss_til?tag=jongall-20&amp;camp=0&amp;creative=0&amp;linkCode=as4&amp;creativeASIN=B003G4W49C&amp;adid=1R1DPNQN44H34EC6BWPJ&amp;">Ender&#8217;s Game</a> </li>
<li><a href="http://www.amazon.com/gp/product/B004XVN0WW/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B004XVN0WW&amp;linkCode=as2&amp;tag=jongall-20">Reamde: A Novel</a> </li>
<li><a href="http://www.amazon.com/gp/product/B000FC11A6/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B000FC11A6&amp;linkCode=as2&amp;tag=jongall-20">Cryptonomicon</a></li>
<li><!--EndFragment--><a href="http://www.amazon.com/gp/product/0226458083/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0226458083&amp;linkCode=as2&amp;tag=jongall-20">The Structure of Scientific Revolutions</a>&#160;</li>
<li><a href="http://www.amazon.com/gp/product/0385530803/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0385530803&amp;linkCode=as2&amp;tag=jongall-20">Physics of the Future: How Science Will Shape Human Destiny and Our Daily Lives by the Year 2100</a></li>
</ul>
<li>Mat Honan&#8217;s post: <a href="http://www.emptyage.com/post/28679875595/yes-i-was-hacked-hard">Yes, I was hacked. Hard.</a></li>
<li>Matt Cutts: <a href="http://www.mattcutts.com/blog/google-two-step-authentication/">Please turn on two-factor authentication</a></li>
<li>IE 10 Do Not Track post: <a href="http://www.zdnet.com/blog/btl/microsoft-to-advertisers-drop-dead/78811">Microsoft to advertisers: Drop dead</a></li>
<li><a href="http://nbergus.com/2012/02/how-i-became-amazons-pitchman-for-a-55-gallon-drum-of-personal-lubricant-on-facebook/">How I became Amazon&#8217;s pitchman for a 55-gallon drum of personal lubricant on Facebook</a></li>
<li><a href="http://macperformanceguide.com/MountainLion-SaveAs-data-destruction.html">OS X Mountain Lion: Data Loss via &#8216;Save As&#8217;</a></li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/iWIDqIM_HLw" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-149-what-i-did-with-my-summer-vacation/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/I8kkJFR32Nw/HerdingCode-0149-What-I-did-with-my-summer-vacation.mp3" fileSize="50807565" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys check in after a summer hiatus with a discussion covering travel, books, e-book readers, two factor authentication, Windows 8, OSX Mountain Lion, and hover cranes. Download / Listen: Herding Code 149 &amp;#8211; What I Did With My Summer Vacation Sho</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys check in after a summer hiatus with a discussion covering travel, books, e-book readers, two factor authentication, Windows 8, OSX Mountain Lion, and hover cranes. Download / Listen: Herding Code 149 &amp;#8211; What I Did With My Summer Vacation Show Notes: Travel Jon asks starts by asking where everyone&amp;#8217;s been travelling to over [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-149-what-i-did-with-my-summer-vacation/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/I8kkJFR32Nw/HerdingCode-0149-What-I-did-with-my-summer-vacation.mp3" length="50807565" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0149-What-I-did-with-my-summer-vacation.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 148 – Chris Hardy on Xamarin, MonoTouch and Mono For Android</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/OGYl7Q8qay0/</link>
		<comments>http://herdingcode.com/herding-code-148-chris-hardy-on-xamarin-monotouch-and-mono-for-android/#comments</comments>
		<pubDate>Fri, 24 Aug 2012 00:04:29 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=467</guid>
		<description><![CDATA[Here&#8217;s the last of K. Scott and Jon&#8217;s interviews from NDC Oslo 2012: a conversation with Chris Hardy about Xamarin, MonoTouch, Mono For Android, and mobile development. Download / Listen: Herding Code 148 &#8211; Chris Hardy on Xamarin, MonoTouch and Mono For Android Show Notes: Jon asks Chris what he does at Xamarin. Jon asks [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Here&#8217;s the last of K. Scott and Jon&#8217;s interviews from NDC Oslo 2012: a conversation with Chris Hardy about Xamarin, MonoTouch, Mono For Android, and mobile development.</p>
<p>Download / Listen:</p>
<p><a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0148-Chris-Hardy.mp3">Herding Code 148 &#8211; Chris Hardy on Xamarin, MonoTouch and Mono For Android</a>
<p>Show Notes:</p>
<ul>
<li>Jon asks Chris what he does at Xamarin. </li>
<li>Jon asks about how the development experience works when building an application using Xamarin products and targeting multiple platforms (e.g. iOS and Android) </li>
<li>Chris talks about how developers create the user interface layers &#8211; either using XCode, or just building the UI in code. He mentions PaintCode as a generator for user interface code. </li>
<li>K. Scott asks about the process of sharing logic and service code between platforms. </li>
<li>K. Scott asks how iOS and Android can call back into Mono code. </li>
<li>Jon asks about the installation experience for setting up all of the Android development dependencies. </li>
<li>Chris mentions that MonoDevelop supports Android UI design. </li>
<li>K. Scott asks about interesting things people have built with Xamarin. Chris mentions rdio and iCircuit. </li>
<li>Jon asks how developers handle platform specific issues while developing. Chris mentions several options for sharing code between platforms. </li>
<li>Jon asks how things are working under the hood &#8211; is IL being deployed? Is anything being JITted? </li>
<li>Jon asks about his opinion as a developer who works on all the main mobile platforms. Chris says he loves his iOS devices, but is interested in Windows 8. </li>
<li>Jon asks about Chris&#8217; thoughts on the publishing process between platforms. </li>
<li>Jon asks about the debugging experience &#8211; are you using emulators? How do they work? Do you get realtime debugging? </li>
</ul>
<p>Show Links:</p>
<ul>
<li>Chris Hardy (<a href="http://weblogs.asp.net/chrishardy/">blog</a>, <a href="https://twitter.com/chrisntr">@ChrisNTR</a>) </li>
<li><a href="http://xamarin.com/">Xamarin</a> </li>
<li><a href="http://xamarin.com/monotouch/">MonoTouch</a> </li>
<li><a href="http://xamarin.com/monoforandroid">Mono For Android</a> </li>
<li><a href="http://www.paintcodeapp.com/">PaintCode</a>&#160; </li>
<li><a href="http://msdn.microsoft.com/en-us/library/gg597391.aspx">Portable Class Libraries in .NET</a> </li>
</ul>
<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/OGYl7Q8qay0" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-148-chris-hardy-on-xamarin-monotouch-and-mono-for-android/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/j6FuAcDMsIo/HerdingCode-0148-Chris-Hardy.mp3" fileSize="12449318" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>Here&amp;#8217;s the last of K. Scott and Jon&amp;#8217;s interviews from NDC Oslo 2012: a conversation with Chris Hardy about Xamarin, MonoTouch, Mono For Android, and mobile development. Download / Listen: Herding Code 148 &amp;#8211; Chris Hardy on Xamarin, MonoTo</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>Here&amp;#8217;s the last of K. Scott and Jon&amp;#8217;s interviews from NDC Oslo 2012: a conversation with Chris Hardy about Xamarin, MonoTouch, Mono For Android, and mobile development. Download / Listen: Herding Code 148 &amp;#8211; Chris Hardy on Xamarin, MonoTouch and Mono For Android Show Notes: Jon asks Chris what he does at Xamarin. Jon asks [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-148-chris-hardy-on-xamarin-monotouch-and-mono-for-android/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/j6FuAcDMsIo/HerdingCode-0148-Chris-Hardy.mp3" length="12449318" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0148-Chris-Hardy.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 147 – Jakob Bradford on Organizing NDC Oslo</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/SKGoWLNxEok/</link>
		<comments>http://herdingcode.com/herding-code-147-jakob-bradford-on-organizing-ndc-oslo/#comments</comments>
		<pubDate>Tue, 21 Aug 2012 23:56:41 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=465</guid>
		<description><![CDATA[While at NDC 2012 in Oslo, Jon and K. Scott talked to Jakob Bradford about how the event was organized. Download / Listen: Herding Code 147 &#8211; Jakob Bradford on Organizing NDC Oslo Show Notes: Jon asks how NDC got started and how it&#8217;s grown. K. Scott says that other conferences feel like they&#8217;re organized [&#8230;]]]></description>
				<content:encoded><![CDATA[While at NDC 2012 in Oslo, Jon and K. Scott talked to Jakob Bradford about how the event was organized. Download / Listen: Herding Code 147 &#8211; Jakob Bradford on Organizing NDC Oslo Show Notes: Jon asks how NDC got started and how it&#8217;s grown. K. Scott says that other conferences feel like they&#8217;re organized [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/SKGoWLNxEok" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-147-jakob-bradford-on-organizing-ndc-oslo/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/KBSX9vni_LE/HerdingCode-0147-Jakob-Bradford.mp3" fileSize="8923723" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>While at NDC 2012 in Oslo, Jon and K. Scott talked to Jakob Bradford about how the event was organized. Download / Listen: Herding Code 147 &amp;#8211; Jakob Bradford on Organizing NDC Oslo Show Notes: Jon asks how NDC got started and how it&amp;#8217;s grown. K.</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>While at NDC 2012 in Oslo, Jon and K. Scott talked to Jakob Bradford about how the event was organized. Download / Listen: Herding Code 147 &amp;#8211; Jakob Bradford on Organizing NDC Oslo Show Notes: Jon asks how NDC got started and how it&amp;#8217;s grown. K. Scott says that other conferences feel like they&amp;#8217;re organized [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-147-jakob-bradford-on-organizing-ndc-oslo/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/KBSX9vni_LE/HerdingCode-0147-Jakob-Bradford.mp3" length="8923723" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0147-Jakob-Bradford.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 146 – Shay Friedman on Roslyn, IronRuby and the DLR</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/CPr18osOPV0/</link>
		<comments>http://herdingcode.com/herding-code-146-shay-friedman-on-roslyn-ironruby-and-the-dlr/#comments</comments>
		<pubDate>Fri, 03 Aug 2012 07:25:22 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=463</guid>
		<description><![CDATA[While at NDC 2012 in Oslo, Jon and K. Scott talked to Shay Friedman about Roslyn, IronRuby, and the DLR. Download / Listen: Herding Code 146 &#8211; Shay Friedman on Roslyn, IronRuby, and the DLR Show Notes: K. Scott asks Shay about the what he covered in his &#34;What? C# Could Do That?&#34; talk. Shay [&#8230;]]]></description>
				<content:encoded><![CDATA[While at NDC 2012 in Oslo, Jon and K. Scott talked to Shay Friedman about Roslyn, IronRuby, and the DLR. Download / Listen: Herding Code 146 &#8211; Shay Friedman on Roslyn, IronRuby, and the DLR Show Notes: K. Scott asks Shay about the what he covered in his &quot;What? C# Could Do That?&quot; talk. Shay [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/CPr18osOPV0" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-146-shay-friedman-on-roslyn-ironruby-and-the-dlr/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/_TDkSxjepaE/HerdingCode-0146-Shay-Friedman.mp3" fileSize="12506036" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>While at NDC 2012 in Oslo, Jon and K. Scott talked to Shay Friedman about Roslyn, IronRuby, and the DLR. Download / Listen: Herding Code 146 &amp;#8211; Shay Friedman on Roslyn, IronRuby, and the DLR Show Notes: K. Scott asks Shay about the what he covered in</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>While at NDC 2012 in Oslo, Jon and K. Scott talked to Shay Friedman about Roslyn, IronRuby, and the DLR. Download / Listen: Herding Code 146 &amp;#8211; Shay Friedman on Roslyn, IronRuby, and the DLR Show Notes: K. Scott asks Shay about the what he covered in his &amp;#34;What? C# Could Do That?&amp;#34; talk. Shay [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-146-shay-friedman-on-roslyn-ironruby-and-the-dlr/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/_TDkSxjepaE/HerdingCode-0146-Shay-Friedman.mp3" length="12506036" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0146-Shay-Friedman.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 145 – NDC Cage Match with Rob Conery (node.js/socket.io) and Damian Edwards (SignalR)</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/t9qeUwhhzac/</link>
		<comments>http://herdingcode.com/herding-code-145-ndc-cage-match-with-rob-conery-node-jssocket-io-and-damian-edwards-signalr/#comments</comments>
		<pubDate>Thu, 28 Jun 2012 14:22:52 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=455</guid>
		<description><![CDATA[While at NDC 2012 in Oslo, Jon MC&#8217;d a Cage Match between Rob Conery (Node.js and socket.io) and Damian Edwards (ASP.NET and SignalR). Immediately after the cage match ended, Jon and K. Scott caught up with them to talk about the similarities and differences between these development stacks. Download / Listen: Herding Code 145 &#8211; [&#8230;]]]></description>
				<content:encoded><![CDATA[While at NDC 2012 in Oslo, Jon MC&#8217;d a Cage Match between Rob Conery (Node.js and socket.io) and Damian Edwards (ASP.NET and SignalR). Immediately after the cage match ended, Jon and K. Scott caught up with them to talk about the similarities and differences between these development stacks. Download / Listen: Herding Code 145 &#8211; [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/t9qeUwhhzac" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-145-ndc-cage-match-with-rob-conery-node-jssocket-io-and-damian-edwards-signalr/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/efcmbG3_JrA/HerdingCode-0145-NDC-Cage-Match-with-Rob-Conery-and-Damian-Edwards-update.mp3" fileSize="13085041" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>While at NDC 2012 in Oslo, Jon MC&amp;#8217;d a Cage Match between Rob Conery (Node.js and socket.io) and Damian Edwards (ASP.NET and SignalR). Immediately after the cage match ended, Jon and K. Scott caught up with them to talk about the similarities and dif</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>While at NDC 2012 in Oslo, Jon MC&amp;#8217;d a Cage Match between Rob Conery (Node.js and socket.io) and Damian Edwards (ASP.NET and SignalR). Immediately after the cage match ended, Jon and K. Scott caught up with them to talk about the similarities and differences between these development stacks. Download / Listen: Herding Code 145 &amp;#8211; [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-145-ndc-cage-match-with-rob-conery-node-jssocket-io-and-damian-edwards-signalr/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/efcmbG3_JrA/HerdingCode-0145-NDC-Cage-Match-with-Rob-Conery-and-Damian-Edwards-update.mp3" length="13085041" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0145-NDC-Cage-Match-with-Rob-Conery-and-Damian-Edwards-update.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 144 – GitHub for Windows with Tim Clem, Paul Betts and Phil Haack</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/keYgEL0wdZM/</link>
		<comments>http://herdingcode.com/herding-code-144-github-for-windows-with-tim-clem-paul-betts-and-phil-haack/#comments</comments>
		<pubDate>Fri, 15 Jun 2012 15:06:24 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=453</guid>
		<description><![CDATA[In this episode, the guys talk to Tim Clem, Paul Betts and Phil Haack about GitHub for Windows. Download / Listen: Herding Code 144 &#8211; GitHub for Windows with Tim Clem, Paul Betts and Phil Haack Show Notes: The guys start off talking about why there is a need for GitHub for Windows. Kevin asks [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode, the guys talk to Tim Clem, Paul Betts and Phil Haack about GitHub for Windows. Download / Listen: Herding Code 144 &#8211; GitHub for Windows with Tim Clem, Paul Betts and Phil Haack Show Notes: The guys start off talking about why there is a need for GitHub for Windows. Kevin asks [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/keYgEL0wdZM" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-144-github-for-windows-with-tim-clem-paul-betts-and-phil-haack/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/KlN4yK9R3vw/HerdingCode-0144-GitHub-for-Windows.mp3" fileSize="45253871" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode, the guys talk to Tim Clem, Paul Betts and Phil Haack about GitHub for Windows. Download / Listen: Herding Code 144 &amp;#8211; GitHub for Windows with Tim Clem, Paul Betts and Phil Haack Show Notes: The guys start off talking about why there </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode, the guys talk to Tim Clem, Paul Betts and Phil Haack about GitHub for Windows. Download / Listen: Herding Code 144 &amp;#8211; GitHub for Windows with Tim Clem, Paul Betts and Phil Haack Show Notes: The guys start off talking about why there is a need for GitHub for Windows. Kevin asks [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-144-github-for-windows-with-tim-clem-paul-betts-and-phil-haack/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/KlN4yK9R3vw/HerdingCode-0144-GitHub-for-Windows.mp3" length="45253871" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0144-GitHub-for-Windows.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 143 – Paul Stack on Continuous Delivery</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/JDsfMf_8CEk/</link>
		<comments>http://herdingcode.com/herding-code-143-paul-stack-on-continuous-delivery/#comments</comments>
		<pubDate>Fri, 11 May 2012 19:42:07 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=447</guid>
		<description><![CDATA[The guys talk to Paul Stack about Continuous Deployment. Download / Listen: Herding Code 143 &#8211; Paul Stack on Continuous Delivery K. Scott asks Paul for a description of what Continuous Delivery is. Paul talks about the differences between Continuous Testing, Continuous Integration, Continuous Delivery and Continuous Deployment. Scott brings up the difficulties that databases [&#8230;]]]></description>
				<content:encoded><![CDATA[The guys talk to Paul Stack about Continuous Deployment. Download / Listen: Herding Code 143 &#8211; Paul Stack on Continuous Delivery K. Scott asks Paul for a description of what Continuous Delivery is. Paul talks about the differences between Continuous Testing, Continuous Integration, Continuous Delivery and Continuous Deployment. Scott brings up the difficulties that databases [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/JDsfMf_8CEk" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-143-paul-stack-on-continuous-delivery/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/WExBYspJrgU/HerdingCode-0143-Paul-Stack-on-Continuous-Delivery.mp3" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys talk to Paul Stack about Continuous Deployment. Download / Listen: Herding Code 143 &amp;#8211; Paul Stack on Continuous Delivery K. Scott asks Paul for a description of what Continuous Delivery is. Paul talks about the differences between Continuous</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys talk to Paul Stack about Continuous Deployment. Download / Listen: Herding Code 143 &amp;#8211; Paul Stack on Continuous Delivery K. Scott asks Paul for a description of what Continuous Delivery is. Paul talks about the differences between Continuous Testing, Continuous Integration, Continuous Delivery and Continuous Deployment. Scott brings up the difficulties that databases [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-143-paul-stack-on-continuous-delivery/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/WExBYspJrgU/HerdingCode-0143-Paul-Stack-on-Continuous-Delivery.mp3" length="0" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0143-Paul-Stack-on-Continuous-Delivery.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 142 – Scott Guthrie on the ASP.NET MVC, Web API, and Razor Open Source Announcement</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/saoeB-az-og/</link>
		<comments>http://herdingcode.com/herding-code-142-scott-guthrie-on-the-asp-net-mvc-web-api-and-razor-open-source-announcement/#comments</comments>
		<pubDate>Mon, 23 Apr 2012 23:00:48 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=443</guid>
		<description><![CDATA[The gang talks to Scott Guthrie about the recent announcement that ASP.NET MVC, Web API, and Razor are being developed in public, open source repositories using git and will accept external code contributions. It&#8217;s an action packed show, jam packed with information and guys named Scott. Download / Listen: Herding Code 142 &#8211; Scott Guthrie [&#8230;]]]></description>
				<content:encoded><![CDATA[The gang talks to Scott Guthrie about the recent announcement that ASP.NET MVC, Web API, and Razor are being developed in public, open source repositories using git and will accept external code contributions. It&#8217;s an action packed show, jam packed with information and guys named Scott. Download / Listen: Herding Code 142 &#8211; Scott Guthrie [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/saoeB-az-og" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-142-scott-guthrie-on-the-asp-net-mvc-web-api-and-razor-open-source-announcement/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/tuo359iGnmw/HerdingCode-0142-Scott-Guthrie-on-ASP.NET-Web-API-Razor-Open-Source-Announcement.mp3" fileSize="29720045" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The gang talks to Scott Guthrie about the recent announcement that ASP.NET MVC, Web API, and Razor are being developed in public, open source repositories using git and will accept external code contributions. It&amp;#8217;s an action packed show, jam packed </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The gang talks to Scott Guthrie about the recent announcement that ASP.NET MVC, Web API, and Razor are being developed in public, open source repositories using git and will accept external code contributions. It&amp;#8217;s an action packed show, jam packed with information and guys named Scott. Download / Listen: Herding Code 142 &amp;#8211; Scott Guthrie [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-142-scott-guthrie-on-the-asp-net-mvc-web-api-and-razor-open-source-announcement/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/tuo359iGnmw/HerdingCode-0142-Scott-Guthrie-on-ASP.NET-Web-API-Razor-Open-Source-Announcement.mp3" length="29720045" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0142-Scott-Guthrie-on-ASP.NET-Web-API-Razor-Open-Source-Announcement.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 141 – Lightning Round with Hadi Hariri</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/s4Jdukms8do/</link>
		<comments>http://herdingcode.com/herding-code-141-lightning-round-with-hadi-hariri/#comments</comments>
		<pubDate>Wed, 11 Apr 2012 23:12:07 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=439</guid>
		<description><![CDATA[K Scott wraps up his series of lightning round interviews from Sofware Passion Summit by interviewing Hadi Hariri. Download / Listen: Herding Code 140 &#8211; Lightning Round with Hadi Hariri Show Notes: K Scott asks Hadi about EasyHttp. Hadi explains some of the problems and annoyances EasyHttp solves. Configuring the web request was a pain [&#8230;]]]></description>
				<content:encoded><![CDATA[K Scott wraps up his series of lightning round interviews from Sofware Passion Summit by interviewing Hadi Hariri. Download / Listen: Herding Code 140 &#8211; Lightning Round with Hadi Hariri Show Notes: K Scott asks Hadi about EasyHttp. Hadi explains some of the problems and annoyances EasyHttp solves. Configuring the web request was a pain [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/s4Jdukms8do" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-141-lightning-round-with-hadi-hariri/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/M82fdqllINA/HerdingCode-0141-Hadi-Hariri.mp3" fileSize="11048021" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>K Scott wraps up his series of lightning round interviews from Sofware Passion Summit by interviewing Hadi Hariri. Download / Listen: Herding Code 140 &amp;#8211; Lightning Round with Hadi Hariri Show Notes: K Scott asks Hadi about EasyHttp. Hadi explains som</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>K Scott wraps up his series of lightning round interviews from Sofware Passion Summit by interviewing Hadi Hariri. Download / Listen: Herding Code 140 &amp;#8211; Lightning Round with Hadi Hariri Show Notes: K Scott asks Hadi about EasyHttp. Hadi explains some of the problems and annoyances EasyHttp solves. Configuring the web request was a pain [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-141-lightning-round-with-hadi-hariri/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/M82fdqllINA/HerdingCode-0141-Hadi-Hariri.mp3" length="11048021" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0141-Hadi-Hariri.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 140 – Lightning Round with Morten Kromberg on APL</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/0pYiLE_0FH0/</link>
		<comments>http://herdingcode.com/herding-code-140-lightning-round-with-morten-kromberg-on-apl/#comments</comments>
		<pubDate>Wed, 11 Apr 2012 22:46:05 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=435</guid>
		<description><![CDATA[While at Software Passion Summit, K Scott continues a series of lightning round interviews with Morten Kromberg, discussing APL. Download / Listen: Herding Code 140 &#8211; Lightning Round with Morten Kromberg Show Notes: Morten describes the history and purpose of APL. Did you know that APL stands for &#34;A Programming Language&#34;? The first book about [&#8230;]]]></description>
				<content:encoded><![CDATA[While at Software Passion Summit, K Scott continues a series of lightning round interviews with Morten Kromberg, discussing APL. Download / Listen: Herding Code 140 &#8211; Lightning Round with Morten Kromberg Show Notes: Morten describes the history and purpose of APL. Did you know that APL stands for &quot;A Programming Language&quot;? The first book about [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/0pYiLE_0FH0" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-140-lightning-round-with-morten-kromberg-on-apl/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/_V9VTIKRLiQ/HerdingCode-0140-Morten-Kromberg.mp3" fileSize="8154401" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>While at Software Passion Summit, K Scott continues a series of lightning round interviews with Morten Kromberg, discussing APL. Download / Listen: Herding Code 140 &amp;#8211; Lightning Round with Morten Kromberg Show Notes: Morten describes the history and </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>While at Software Passion Summit, K Scott continues a series of lightning round interviews with Morten Kromberg, discussing APL. Download / Listen: Herding Code 140 &amp;#8211; Lightning Round with Morten Kromberg Show Notes: Morten describes the history and purpose of APL. Did you know that APL stands for &amp;#34;A Programming Language&amp;#34;? The first book about [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-140-lightning-round-with-morten-kromberg-on-apl/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/_V9VTIKRLiQ/HerdingCode-0140-Morten-Kromberg.mp3" length="8154401" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0140-Morten-Kromberg.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 139 – Lightning Round with Roy Osherove on his new book, Notes to a software team leader</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/FwLNuRJfwL4/</link>
		<comments>http://herdingcode.com/herding-code-139-lightning-round-with-roy-osherove-on-his-new-book-notes-to-a-software-team-leader/#comments</comments>
		<pubDate>Wed, 11 Apr 2012 22:39:12 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=430</guid>
		<description><![CDATA[While at Software Passion Summit, K Scott continues a series of lightning round interviews with Roy Osherove discussing Roy&#8217;s new book, Notes to a software team leader. Download / Listen: Herding Code 139 &#8211; Lightning Round with Roy Osherove Show Notes: K Scott asks Roy about his new book. Roy talks about the LeanPub approach. [&#8230;]]]></description>
				<content:encoded><![CDATA[While at Software Passion Summit, K Scott continues a series of lightning round interviews with Roy Osherove discussing Roy&#8217;s new book, Notes to a software team leader. Download / Listen: Herding Code 139 &#8211; Lightning Round with Roy Osherove Show Notes: K Scott asks Roy about his new book. Roy talks about the LeanPub approach. [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/FwLNuRJfwL4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-139-lightning-round-with-roy-osherove-on-his-new-book-notes-to-a-software-team-leader/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/asSFQkFtjqM/HerdingCode-0139-Roy-Osherove.mp3" fileSize="9898202" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>While at Software Passion Summit, K Scott continues a series of lightning round interviews with Roy Osherove discussing Roy&amp;#8217;s new book, Notes to a software team leader. Download / Listen: Herding Code 139 &amp;#8211; Lightning Round with Roy Osherove Sh</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>While at Software Passion Summit, K Scott continues a series of lightning round interviews with Roy Osherove discussing Roy&amp;#8217;s new book, Notes to a software team leader. Download / Listen: Herding Code 139 &amp;#8211; Lightning Round with Roy Osherove Show Notes: K Scott asks Roy about his new book. Roy talks about the LeanPub approach. [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-139-lightning-round-with-roy-osherove-on-his-new-book-notes-to-a-software-team-leader/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/asSFQkFtjqM/HerdingCode-0139-Roy-Osherove.mp3" length="9898202" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0139-Roy-Osherove.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 138 – Lightning Round with Douglas Crockford</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/cHg4oTVXhuY/</link>
		<comments>http://herdingcode.com/herding-code-138-lightning-round-with-douglas-crockford/#comments</comments>
		<pubDate>Wed, 11 Apr 2012 22:36:39 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=428</guid>
		<description><![CDATA[While at Software Passion Summit, K Scott did a series of four Lightning Round interviews, starting with Douglas Crockford. Download / Listen: Herding Code 138 &#8211; Douglas Crockford Show Notes: K Scott asks Douglas what he meant when he said that the human brain wasn&#8217;t designed for this sort of work? What were we designed [&#8230;]]]></description>
				<content:encoded><![CDATA[While at Software Passion Summit, K Scott did a series of four Lightning Round interviews, starting with Douglas Crockford. Download / Listen: Herding Code 138 &#8211; Douglas Crockford Show Notes: K Scott asks Douglas what he meant when he said that the human brain wasn&#8217;t designed for this sort of work? What were we designed [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/cHg4oTVXhuY" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-138-lightning-round-with-douglas-crockford/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/KCeYa-RCspE/HerdingCode-0138-Douglas-Crockford.mp3" fileSize="4894316" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>While at Software Passion Summit, K Scott did a series of four Lightning Round interviews, starting with Douglas Crockford. Download / Listen: Herding Code 138 &amp;#8211; Douglas Crockford Show Notes: K Scott asks Douglas what he meant when he said that the </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>While at Software Passion Summit, K Scott did a series of four Lightning Round interviews, starting with Douglas Crockford. Download / Listen: Herding Code 138 &amp;#8211; Douglas Crockford Show Notes: K Scott asks Douglas what he meant when he said that the human brain wasn&amp;#8217;t designed for this sort of work? What were we designed [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-138-lightning-round-with-douglas-crockford/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/KCeYa-RCspE/HerdingCode-0138-Douglas-Crockford.mp3" length="4894316" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0138-Douglas-Crockford.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 137 – Mass Assignment, New New iPad, JavaScript libraries, Windows 8, Visual Studio, and Sad Trombones</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/TOF3ylA_M_M/</link>
		<comments>http://herdingcode.com/herding-code-137-mass-assignment-new-new-ipad-javascript-libraries-windows-8-visual-studio-and-sad-trombones/#comments</comments>
		<pubDate>Thu, 29 Mar 2012 00:46:46 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=418</guid>
		<description><![CDATA[Oh, hey. A discussion show. Haven&#8217;t done one of those for a while. Bonus: recorded during the day so K Scott&#8217;s awake. Download / Listen: Herding Code 137: Mass Assignment, New New iPad, JavaScript libraries, Windows 8, Visual Studio, and Sad Trombones Show Notes: K Scott asks everyone&#8217;s opinions on the GitHub / Ruby on [&#8230;]]]></description>
				<content:encoded><![CDATA[Oh, hey. A discussion show. Haven&#8217;t done one of those for a while. Bonus: recorded during the day so K Scott&#8217;s awake. Download / Listen: Herding Code 137: Mass Assignment, New New iPad, JavaScript libraries, Windows 8, Visual Studio, and Sad Trombones Show Notes: K Scott asks everyone&#8217;s opinions on the GitHub / Ruby on [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/TOF3ylA_M_M" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-137-mass-assignment-new-new-ipad-javascript-libraries-windows-8-visual-studio-and-sad-trombones/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/BUZLnmUAzEc/HerdingCode-0137-Mass-Assignment-New-New-iPad-JavaScript-libraries-Windows-8-Visual-Studio-and-Sad-Trombones.mp3" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>Oh, hey. A discussion show. Haven&amp;#8217;t done one of those for a while. Bonus: recorded during the day so K Scott&amp;#8217;s awake. Download / Listen: Herding Code 137: Mass Assignment, New New iPad, JavaScript libraries, Windows 8, Visual Studio, and Sad T</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>Oh, hey. A discussion show. Haven&amp;#8217;t done one of those for a while. Bonus: recorded during the day so K Scott&amp;#8217;s awake. Download / Listen: Herding Code 137: Mass Assignment, New New iPad, JavaScript libraries, Windows 8, Visual Studio, and Sad Trombones Show Notes: K Scott asks everyone&amp;#8217;s opinions on the GitHub / Ruby on [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-137-mass-assignment-new-new-ipad-javascript-libraries-windows-8-visual-studio-and-sad-trombones/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/BUZLnmUAzEc/HerdingCode-0137-Mass-Assignment-New-New-iPad-JavaScript-libraries-Windows-8-Visual-Studio-and-Sad-Trombones.mp3" length="0" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0137-Mass-Assignment-New-New-iPad-JavaScript-libraries-Windows-8-Visual-Studio-and-Sad-Trombones.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 136: Code52 with Paul Jenkins, Brendan Forster, and Andrew Tobin</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/dagDZHUEqec/</link>
		<comments>http://herdingcode.com/herding-code-136-code52-with-paul-jenkins-brendan-forster-and-andrew-tobin/#comments</comments>
		<pubDate>Sat, 10 Mar 2012 00:52:20 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=411</guid>
		<description><![CDATA[In this episode, Jon and Scott K talk talk with the guys behind Code52, an effort to spin up a new open source project every week for a year. Download / Listen: Herding Code 136: Code52 with Paul Jenkins, Brendan Forster, and Andrew Tobin Show Notes: Jon starts by asking how this whole idea got [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode, Jon and Scott K talk talk with the guys behind Code52, an effort to spin up a new open source project every week for a year. Download / Listen: Herding Code 136: Code52 with Paul Jenkins, Brendan Forster, and Andrew Tobin Show Notes: Jon starts by asking how this whole idea got [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/dagDZHUEqec" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-136-code52-with-paul-jenkins-brendan-forster-and-andrew-tobin/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/MvKEj_zEc88/HerdingCode-0136-Code52.mp3" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode, Jon and Scott K talk talk with the guys behind Code52, an effort to spin up a new open source project every week for a year. Download / Listen: Herding Code 136: Code52 with Paul Jenkins, Brendan Forster, and Andrew Tobin Show Notes: Jon </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode, Jon and Scott K talk talk with the guys behind Code52, an effort to spin up a new open source project every week for a year. Download / Listen: Herding Code 136: Code52 with Paul Jenkins, Brendan Forster, and Andrew Tobin Show Notes: Jon starts by asking how this whole idea got [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-136-code52-with-paul-jenkins-brendan-forster-and-andrew-tobin/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/MvKEj_zEc88/HerdingCode-0136-Code52.mp3" length="0" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0136-Code52.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 135: Remco Mulder and Jeff Schumacher on Continuous Testing</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/Ew_3H-C3dCQ/</link>
		<comments>http://herdingcode.com/herding-code-135-remco-mulder-and-jeff-schumacher-on-continuous-testing/#comments</comments>
		<pubDate>Mon, 27 Feb 2012 19:32:33 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=403</guid>
		<description><![CDATA[In this episode, the guys talk with Remco Mulder (author of NCrunch) and Jeff Schumacher (author of Giles) about continuous testing in .NET. Download / Listen: Herding Code 135: Remco Mulder and Jeff Schumacher on Continuous Testing Show Notes: Scott K kicks things off with a horrible old school BASIC joke. Remco explains how NCrunch [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode, the guys talk with Remco Mulder (author of NCrunch) and Jeff Schumacher (author of Giles) about continuous testing in .NET. Download / Listen: Herding Code 135: Remco Mulder and Jeff Schumacher on Continuous Testing Show Notes: Scott K kicks things off with a horrible old school BASIC joke. Remco explains how NCrunch [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/Ew_3H-C3dCQ" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-135-remco-mulder-and-jeff-schumacher-on-continuous-testing/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/P1oa_cUSGvw/HerdingCode-0135-Continuous-Testing.mp3" fileSize="44774810" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode, the guys talk with Remco Mulder (author of NCrunch) and Jeff Schumacher (author of Giles) about continuous testing in .NET. Download / Listen: Herding Code 135: Remco Mulder and Jeff Schumacher on Continuous Testing Show Notes: Scott K ki</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode, the guys talk with Remco Mulder (author of NCrunch) and Jeff Schumacher (author of Giles) about continuous testing in .NET. Download / Listen: Herding Code 135: Remco Mulder and Jeff Schumacher on Continuous Testing Show Notes: Scott K kicks things off with a horrible old school BASIC joke. Remco explains how NCrunch [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-135-remco-mulder-and-jeff-schumacher-on-continuous-testing/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/P1oa_cUSGvw/HerdingCode-0135-Continuous-Testing.mp3" length="44774810" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0135-Continuous-Testing.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 134: Brad Wilson on ASP.NET 4 Beta and ASP.NET Web API</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/-7iZuRJwKuE/</link>
		<comments>http://herdingcode.com/herding-code-134-brad-wilson-on-asp-net-4-beta-and-asp-net-web-api/#comments</comments>
		<pubDate>Fri, 17 Feb 2012 21:15:37 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=396</guid>
		<description><![CDATA[In this episode, Jon talks to Brad Wilson about the ASP.NET MVC 4 Beta release. Download / Listen: Herding Code 134: Brad Wilson on ASP.NET 4 Beta and ASP.NET Web API Show Notes: Brad starts with a rundown of what was in ASP.NET MVC 4 Developer Preview, including HTML5 Default Template features, Adaptive Rendering, Mobile [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode, Jon talks to Brad Wilson about the ASP.NET MVC 4 Beta release. Download / Listen: Herding Code 134: Brad Wilson on ASP.NET 4 Beta and ASP.NET Web API Show Notes: Brad starts with a rundown of what was in ASP.NET MVC 4 Developer Preview, including HTML5 Default Template features, Adaptive Rendering, Mobile [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/-7iZuRJwKuE" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-134-brad-wilson-on-asp-net-4-beta-and-asp-net-web-api/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/YqsowN6yYbQ/HerdingCode-0134-Brad-Wilson-on-ASP.NET-MVC-4-Beta.mp3" fileSize="27254433" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode, Jon talks to Brad Wilson about the ASP.NET MVC 4 Beta release. Download / Listen: Herding Code 134: Brad Wilson on ASP.NET 4 Beta and ASP.NET Web API Show Notes: Brad starts with a rundown of what was in ASP.NET MVC 4 Developer Preview, i</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode, Jon talks to Brad Wilson about the ASP.NET MVC 4 Beta release. Download / Listen: Herding Code 134: Brad Wilson on ASP.NET 4 Beta and ASP.NET Web API Show Notes: Brad starts with a rundown of what was in ASP.NET MVC 4 Developer Preview, including HTML5 Default Template features, Adaptive Rendering, Mobile [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-134-brad-wilson-on-asp-net-4-beta-and-asp-net-web-api/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/YqsowN6yYbQ/HerdingCode-0134-Brad-Wilson-on-ASP.NET-MVC-4-Beta.mp3" length="27254433" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0134-Brad-Wilson-on-ASP.NET-MVC-4-Beta.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 133: Derick Bailey on Backbone.js</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/wVTreocEkAk/</link>
		<comments>http://herdingcode.com/herding-code-133-derick-bailey-on-backbone-js/#comments</comments>
		<pubDate>Fri, 03 Feb 2012 23:26:45 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=390</guid>
		<description><![CDATA[In this episode, the guys talk with Derick Bailey (consultant and founder of watchmecode.net, where he sells JavaScript themed screen casts) about Backbone.js, which is a popular JavaScript framework. Download / Listen: Herding Code 133: Derick Bailey on Backbone.js Show Notes: Derick starts off by explaining what Backbone is not: a JavaScript MVC framework. Backbone [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode, the guys talk with Derick Bailey (consultant and founder of watchmecode.net, where he sells JavaScript themed screen casts) about Backbone.js, which is a popular JavaScript framework. Download / Listen: Herding Code 133: Derick Bailey on Backbone.js Show Notes: Derick starts off by explaining what Backbone is not: a JavaScript MVC framework. Backbone [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/wVTreocEkAk" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-133-derick-bailey-on-backbone-js/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/wuXlPCEQpD4/HerdingCode-0133-Derick-Bailey-on-Backbone.mp3" fileSize="46352545" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode, the guys talk with Derick Bailey (consultant and founder of watchmecode.net, where he sells JavaScript themed screen casts) about Backbone.js, which is a popular JavaScript framework. Download / Listen: Herding Code 133: Derick Bailey on </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode, the guys talk with Derick Bailey (consultant and founder of watchmecode.net, where he sells JavaScript themed screen casts) about Backbone.js, which is a popular JavaScript framework. Download / Listen: Herding Code 133: Derick Bailey on Backbone.js Show Notes: Derick starts off by explaining what Backbone is not: a JavaScript MVC framework. Backbone [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-133-derick-bailey-on-backbone-js/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/wuXlPCEQpD4/HerdingCode-0133-Derick-Bailey-on-Backbone.mp3" length="46352545" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0133-Derick-Bailey-on-Backbone.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 132: Phil Haack, Keith Dahlby and Paul Betts on Git for Windows developers</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/QLnq5npMVyM/</link>
		<comments>http://herdingcode.com/herding-code-132-phil-haack-keith-dahlby-and-paul-betts-on-git-for-windows-developers/#comments</comments>
		<pubDate>Fri, 20 Jan 2012 21:33:12 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=384</guid>
		<description><![CDATA[In this episode, they guys talk with Phil Haack and Paul Betts (both new GitHubbers) and Keith Dahlby (author of posh-git, a set of PowerShell scripts which provide Git/PowerShell integration) about using Git on Windows. Download / Listen: Herding Code 132: Phil Haack, Keith Dahlby and Paul Betts on Git for Windows developers Show Notes: [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode, they guys talk with Phil Haack and Paul Betts (both new GitHubbers) and Keith Dahlby (author of posh-git, a set of PowerShell scripts which provide Git/PowerShell integration) about using Git on Windows. Download / Listen: Herding Code 132: Phil Haack, Keith Dahlby and Paul Betts on Git for Windows developers Show Notes: [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/QLnq5npMVyM" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-132-phil-haack-keith-dahlby-and-paul-betts-on-git-for-windows-developers/feed/</wfw:commentRss>
		<slash:comments>18</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/LMkY8Ie37iI/HerdingCode-0132-Phil-Haack-Keith-Dahlby-and-Paul-Betts-on-Git-for-Windows-developers.mp3" fileSize="61383043" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode, they guys talk with Phil Haack and Paul Betts (both new GitHubbers) and Keith Dahlby (author of posh-git, a set of PowerShell scripts which provide Git/PowerShell integration) about using Git on Windows. Download / Listen: Herding Code 13</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode, they guys talk with Phil Haack and Paul Betts (both new GitHubbers) and Keith Dahlby (author of posh-git, a set of PowerShell scripts which provide Git/PowerShell integration) about using Git on Windows. Download / Listen: Herding Code 132: Phil Haack, Keith Dahlby and Paul Betts on Git for Windows developers Show Notes: [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-132-phil-haack-keith-dahlby-and-paul-betts-on-git-for-windows-developers/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/LMkY8Ie37iI/HerdingCode-0132-Phil-Haack-Keith-Dahlby-and-Paul-Betts-on-Git-for-Windows-developers.mp3" length="61383043" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0132-Phil-Haack-Keith-Dahlby-and-Paul-Betts-on-Git-for-Windows-developers.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 131: Chris Williams and Matthew Podwysocki on the Javascript community</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/FXsFpMerbKM/</link>
		<comments>http://herdingcode.com/herding-code-131-chris-williams-and-matthew-podwysocki-on-the-javascript-community/#comments</comments>
		<pubDate>Wed, 04 Jan 2012 20:01:00 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=380</guid>
		<description><![CDATA[In this episode, the guys talk to Chris Williams (organizer of jsConf) and Matthew Podwysocki about the Javascript community, fighting negativity in the programmer community, emerging Javascript trends, and the merits of spring beers. Jon asks Chris to catch us up with what&#8217;s happened since we last talked to him, just after jsConf.us 2010. Chris [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode, the guys talk to Chris Williams (organizer of jsConf) and Matthew Podwysocki about the Javascript community, fighting negativity in the programmer community, emerging Javascript trends, and the merits of spring beers. Jon asks Chris to catch us up with what&#8217;s happened since we last talked to him, just after jsConf.us 2010. Chris [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/FXsFpMerbKM" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-131-chris-williams-and-matthew-podwysocki-on-the-javascript-community/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/O_6JSMq8a_0/HerdingCode-0131-Chris-Williams-and-Matthew-Podwysocki-on-the-Javascript-community.mp3" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode, the guys talk to Chris Williams (organizer of jsConf) and Matthew Podwysocki about the Javascript community, fighting negativity in the programmer community, emerging Javascript trends, and the merits of spring beers. Jon asks Chris to ca</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode, the guys talk to Chris Williams (organizer of jsConf) and Matthew Podwysocki about the Javascript community, fighting negativity in the programmer community, emerging Javascript trends, and the merits of spring beers. Jon asks Chris to catch us up with what&amp;#8217;s happened since we last talked to him, just after jsConf.us 2010. Chris [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-131-chris-williams-and-matthew-podwysocki-on-the-javascript-community/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/O_6JSMq8a_0/HerdingCode-0131-Chris-Williams-and-Matthew-Podwysocki-on-the-Javascript-community.mp3" length="0" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0131-Chris-Williams-and-Matthew-Podwysocki-on-the-Javascript-community.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 130: Dave Weaver on Loggr – a realtime analytics service built with MVC, MongoDB and SignalR</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/GVlkKKqnwLE/</link>
		<comments>http://herdingcode.com/herding-code-130-dave-weaver-on-loggr-a-realtime-analytics-service-built-with-mvc-mongodb-and-signalr/#comments</comments>
		<pubDate>Mon, 02 Jan 2012 20:56:44 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=375</guid>
		<description><![CDATA[In this episode, Jon Galloway and Kevin Dente talk to Dave Weaver about Loggr, a complete logging, analytics and notification system that will easily bolt on to your application. Dave runs Markkup, a consulting company and is building Loggr, SaaS application that provides real time logging and monitoring. He was one of the founders of [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode, Jon Galloway and Kevin Dente talk to Dave Weaver about Loggr, a complete logging, analytics and notification system that will easily bolt on to your application. Dave runs Markkup, a consulting company and is building Loggr, SaaS application that provides real time logging and monitoring. He was one of the founders of [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/GVlkKKqnwLE" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-130-dave-weaver-on-loggr-a-realtime-analytics-service-built-with-mvc-mongodb-and-signalr/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/usQ4yZhAStg/HerdingCode-0130-Dave-Weaver-on-Loggr-a-realtime-analytics-service-built-with-MVC-MongoDB-and-SignalR.mp3" fileSize="44783981" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode, Jon Galloway and Kevin Dente talk to Dave Weaver about Loggr, a complete logging, analytics and notification system that will easily bolt on to your application. Dave runs Markkup, a consulting company and is building Loggr, SaaS applicat</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode, Jon Galloway and Kevin Dente talk to Dave Weaver about Loggr, a complete logging, analytics and notification system that will easily bolt on to your application. Dave runs Markkup, a consulting company and is building Loggr, SaaS application that provides real time logging and monitoring. He was one of the founders of [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-130-dave-weaver-on-loggr-a-realtime-analytics-service-built-with-mvc-mongodb-and-signalr/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/usQ4yZhAStg/HerdingCode-0130-Dave-Weaver-on-Loggr-a-realtime-analytics-service-built-with-MVC-MongoDB-and-SignalR.mp3" length="44783981" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0130-Dave-Weaver-on-Loggr-a-realtime-analytics-service-built-with-MVC-MongoDB-and-SignalR.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 129: Rob Reynolds on Chocolatey and the Chuck Norris Frameworks</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/8kLjbDrsVzA/</link>
		<comments>http://herdingcode.com/herding-code-129-rob-reynolds-on-chocolatey-and-the-chuck-norris-frameworks/#comments</comments>
		<pubDate>Tue, 13 Dec 2011 18:12:30 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=373</guid>
		<description><![CDATA[In this episode, Jon Galloway, Kevin Dente and guest host John Sheehan talk to Rob Reynolds about Chocolatey (a Machine Package Manager, somewhat like apt-get for Windows), as well as Rob&#8217;s Chuck Norris frameworks for project setup, management, deployment, and more. Rob talks about how Nu helped shape the direction of NuGet. Chocolatey is a [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode, Jon Galloway, Kevin Dente and guest host John Sheehan talk to Rob Reynolds about Chocolatey (a Machine Package Manager, somewhat like apt-get for Windows), as well as Rob&#8217;s Chuck Norris frameworks for project setup, management, deployment, and more. Rob talks about how Nu helped shape the direction of NuGet. Chocolatey is a [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/8kLjbDrsVzA" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-129-rob-reynolds-on-chocolatey-and-the-chuck-norris-frameworks/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/RtQqsp7EPQc/HerdingCode-0129-Rob-Reynolds-on-Chocolatey-and-the-Chuck-Norris-Frameworks.mp3" fileSize="40077645" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode, Jon Galloway, Kevin Dente and guest host John Sheehan talk to Rob Reynolds about Chocolatey (a Machine Package Manager, somewhat like apt-get for Windows), as well as Rob&amp;#8217;s Chuck Norris frameworks for project setup, management, depl</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode, Jon Galloway, Kevin Dente and guest host John Sheehan talk to Rob Reynolds about Chocolatey (a Machine Package Manager, somewhat like apt-get for Windows), as well as Rob&amp;#8217;s Chuck Norris frameworks for project setup, management, deployment, and more. Rob talks about how Nu helped shape the direction of NuGet. Chocolatey is a [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-129-rob-reynolds-on-chocolatey-and-the-chuck-norris-frameworks/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/RtQqsp7EPQc/HerdingCode-0129-Rob-Reynolds-on-Chocolatey-and-the-Chuck-Norris-Frameworks.mp3" length="40077645" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0129-Rob-Reynolds-on-Chocolatey-and-the-Chuck-Norris-Frameworks.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 128: Corey Haines on Global Day of Coderetreat (December 3)</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/Ss4qh9HBfA4/</link>
		<comments>http://herdingcode.com/herding-code-128-corey-haines-on-global-day-of-coderetreat-december-3/#comments</comments>
		<pubDate>Sat, 26 Nov 2011 23:13:32 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=369</guid>
		<description><![CDATA[On this episode of Herding Code, Scott K, Jon, and Kevin talk to Corey Haines about the Global Day of Coderetreat event being held in 90+ cities on December 3. Scott asks Corey to start by explaining his software journeyman thing, or as Scott calls it &#8220;couch surfing in return for coding.&#8221; Corey describes how he transitioned [&#8230;]]]></description>
				<content:encoded><![CDATA[On this episode of Herding Code, Scott K, Jon, and Kevin talk to Corey Haines about the Global Day of Coderetreat event being held in 90+ cities on December 3. Scott asks Corey to start by explaining his software journeyman thing, or as Scott calls it &#8220;couch surfing in return for coding.&#8221; Corey describes how he transitioned [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/Ss4qh9HBfA4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-128-corey-haines-on-global-day-of-coderetreat-december-3/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/QEdBGkUHvUs/HerdingCode-0128-Corey-Haines-on-Global-Day-of-Coderetreat.mp3" fileSize="40616315" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>On this episode of Herding Code, Scott K, Jon, and Kevin talk to Corey Haines about the Global Day of Coderetreat event being held in 90+ cities on December 3. Scott asks Corey to start by explaining his software journeyman thing, or as Scott calls it &amp;#8</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>On this episode of Herding Code, Scott K, Jon, and Kevin talk to Corey Haines about the Global Day of Coderetreat event being held in 90+ cities on December 3. Scott asks Corey to start by explaining his software journeyman thing, or as Scott calls it &amp;#8220;couch surfing in return for coding.&amp;#8221; Corey describes how he transitioned [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-128-corey-haines-on-global-day-of-coderetreat-december-3/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/QEdBGkUHvUs/HerdingCode-0128-Corey-Haines-on-Global-Day-of-Coderetreat.mp3" length="40616315" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0128-Corey-Haines-on-Global-Day-of-Coderetreat.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 127: Setting up your Computer and Work Area</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/rqx1LtK2RWA/</link>
		<comments>http://herdingcode.com/herding-code-128-setting-up-your-computer-and-work-area/#comments</comments>
		<pubDate>Tue, 22 Nov 2011 19:20:45 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=364</guid>
		<description><![CDATA[On this episode of Herding Code, the guys discuss computer and work area setup, from installation and file management to ergonomic work areas and animated GIF&#8217;s. Kevin and K Scott both just got MacBooks, they discuss what they are doing with them, such as using the emulator to test HTML5 apps for iPhone/iPad. Jon asks, [&#8230;]]]></description>
				<content:encoded><![CDATA[On this episode of Herding Code, the guys discuss computer and work area setup, from installation and file management to ergonomic work areas and animated GIF&#8217;s. Kevin and K Scott both just got MacBooks, they discuss what they are doing with them, such as using the emulator to test HTML5 apps for iPhone/iPad. Jon asks, [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/rqx1LtK2RWA" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-128-setting-up-your-computer-and-work-area/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/hrS6hILVp60/HerdingCode-0127-Computer-and-work-area-setup.mp3" fileSize="49585041" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>On this episode of Herding Code, the guys discuss computer and work area setup, from installation and file management to ergonomic work areas and animated GIF&amp;#8217;s. Kevin and K Scott both just got MacBooks, they discuss what they are doing with them, s</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>On this episode of Herding Code, the guys discuss computer and work area setup, from installation and file management to ergonomic work areas and animated GIF&amp;#8217;s. Kevin and K Scott both just got MacBooks, they discuss what they are doing with them, such as using the emulator to test HTML5 apps for iPhone/iPad. Jon asks, [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-128-setting-up-your-computer-and-work-area/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/hrS6hILVp60/HerdingCode-0127-Computer-and-work-area-setup.mp3" length="49585041" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0127-Computer-and-work-area-setup.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 126: Jeff Atwood on the overlap of Video Games and Learning</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/MCcDM1w7mP0/</link>
		<comments>http://herdingcode.com/herding-code-126-jeff-atwood-on-the-overlap-of-video-games-and-learning/#comments</comments>
		<pubDate>Tue, 15 Nov 2011 00:38:57 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=363</guid>
		<description><![CDATA[On this episode of Herding Code, the guys talk to Jeff Atwood about the intersection of video games and learning, along the way discussing music, learning to program, casual games, bleeding edge games about bleeding (Battlefield 3), Kinect, Wii, and retro games. Jeff talks about video games as a gateway to programming. Jon and Jeff [&#8230;]]]></description>
				<content:encoded><![CDATA[On this episode of Herding Code, the guys talk to Jeff Atwood about the intersection of video games and learning, along the way discussing music, learning to program, casual games, bleeding edge games about bleeding (Battlefield 3), Kinect, Wii, and retro games. Jeff talks about video games as a gateway to programming. Jon and Jeff [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/MCcDM1w7mP0" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-126-jeff-atwood-on-the-overlap-of-video-games-and-learning/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/lnbodBjcxtg/HerdingCode-0126-Jeff-Atwood-on-Games-and-Gamification.mp3" fileSize="61827291" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>On this episode of Herding Code, the guys talk to Jeff Atwood about the intersection of video games and learning, along the way discussing music, learning to program, casual games, bleeding edge games about bleeding (Battlefield 3), Kinect, Wii, and retro</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>On this episode of Herding Code, the guys talk to Jeff Atwood about the intersection of video games and learning, along the way discussing music, learning to program, casual games, bleeding edge games about bleeding (Battlefield 3), Kinect, Wii, and retro games. Jeff talks about video games as a gateway to programming. Jon and Jeff [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-126-jeff-atwood-on-the-overlap-of-video-games-and-learning/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/lnbodBjcxtg/HerdingCode-0126-Jeff-Atwood-on-Games-and-Gamification.mp3" length="61827291" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0126-Jeff-Atwood-on-Games-and-Gamification.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 125: Truffler with Joel Abrahamsson, Marcus Granstrom and Henrik Lindstrom</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/Am-JgeV3alk/</link>
		<comments>http://herdingcode.com/herding-code-125-truffler-with-joel-abrahamsson-marcus-granstrom-and-henrik-lindstrom/#comments</comments>
		<pubDate>Fri, 04 Nov 2011 21:40:38 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=360</guid>
		<description><![CDATA[On this episode of Herding Code, the guys talk to Joel Abrahamsson, Marcus Granström and Henrik Lindström about Truffler, a solution for building advanced search and querying functionality for websites and other data-centric systems. They talk about their backgrounds and combining their different skills to build something pretty awesome. K. Scott says Truffler has a [&#8230;]]]></description>
				<content:encoded><![CDATA[On this episode of Herding Code, the guys talk to Joel Abrahamsson, Marcus Granström and Henrik Lindström about Truffler, a solution for building advanced search and querying functionality for websites and other data-centric systems. They talk about their backgrounds and combining their different skills to build something pretty awesome. K. Scott says Truffler has a [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/Am-JgeV3alk" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-125-truffler-with-joel-abrahamsson-marcus-granstrom-and-henrik-lindstrom/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/BFFAiif_WLs/HerdingCode-0125-Truffler.mp3" fileSize="26738371" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>On this episode of Herding Code, the guys talk to Joel Abrahamsson, Marcus Granström and Henrik Lindström about Truffler, a solution for building advanced search and querying functionality for websites and other data-centric systems. They talk about their</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>On this episode of Herding Code, the guys talk to Joel Abrahamsson, Marcus Granström and Henrik Lindström about Truffler, a solution for building advanced search and querying functionality for websites and other data-centric systems. They talk about their backgrounds and combining their different skills to build something pretty awesome. K. Scott says Truffler has a [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-125-truffler-with-joel-abrahamsson-marcus-granstrom-and-henrik-lindstrom/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/BFFAiif_WLs/HerdingCode-0125-Truffler.mp3" length="26738371" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0125-Truffler.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 124: Anthony van der Hoorn and Nik Molnar on Glimpse</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/7kgumKkT9ZI/</link>
		<comments>http://herdingcode.com/herding-code-124-anthony-van-der-hoorn-and-nik-molnar-on-glimpse/#comments</comments>
		<pubDate>Mon, 24 Oct 2011 21:01:33 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=355</guid>
		<description><![CDATA[On this episode, the guys talk to Anthony van der Hoorn and Nik Molnar about Glimpse, which allows you to debug your web site or web service right in the browser. Jon asks why Glimpse was created. Anthony gives a high-level explanation of what Glimpse does. Glimpse is for your server what Firebug is for [&#8230;]]]></description>
				<content:encoded><![CDATA[On this episode, the guys talk to Anthony van der Hoorn and Nik Molnar about Glimpse, which allows you to debug your web site or web service right in the browser. Jon asks why Glimpse was created. Anthony gives a high-level explanation of what Glimpse does. Glimpse is for your server what Firebug is for [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/7kgumKkT9ZI" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-124-anthony-van-der-hoorn-and-nik-molnar-on-glimpse/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/KZHMwxi3b70/HerdingCode-0124-Anthony-van-der-Hoorn-and-Nik-Molnar-on-Glimpse.mp3" fileSize="47267831" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>On this episode, the guys talk to Anthony van der Hoorn and Nik Molnar about Glimpse, which allows you to debug your web site or web service right in the browser. Jon asks why Glimpse was created. Anthony gives a high-level explanation of what Glimpse doe</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>On this episode, the guys talk to Anthony van der Hoorn and Nik Molnar about Glimpse, which allows you to debug your web site or web service right in the browser. Jon asks why Glimpse was created. Anthony gives a high-level explanation of what Glimpse does. Glimpse is for your server what Firebug is for [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-124-anthony-van-der-hoorn-and-nik-molnar-on-glimpse/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/KZHMwxi3b70/HerdingCode-0124-Anthony-van-der-Hoorn-and-Nik-Molnar-on-Glimpse.mp3" length="47267831" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0124-Anthony-van-der-Hoorn-and-Nik-Molnar-on-Glimpse.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 123: Andreas Håkansson and Steven Robbins on NancyFx</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/TWChyyLoSl4/</link>
		<comments>http://herdingcode.com/herding-code-123-andreas-hakansson-and-steven-robbins-on-nancyfx/#comments</comments>
		<pubDate>Mon, 17 Oct 2011 21:18:12 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=350</guid>
		<description><![CDATA[On this episode, the guys talk to Andreas and Steven about Nancy, a lightweight, low-ceremony, framework for building HTTP based services on .Net and Mono. Scott Koon asks why Nancy was developed and what are the problems going up against ASP.NET. Andreas explains Nancy is a lighter approach and doesn&#8217;t get in the way. Andreas [&#8230;]]]></description>
				<content:encoded><![CDATA[On this episode, the guys talk to Andreas and Steven about Nancy, a lightweight, low-ceremony, framework for building HTTP based services on .Net and Mono. Scott Koon asks why Nancy was developed and what are the problems going up against ASP.NET. Andreas explains Nancy is a lighter approach and doesn&#8217;t get in the way. Andreas [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/TWChyyLoSl4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-123-andreas-hakansson-and-steven-robbins-on-nancyfx/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/u5OwOje67oc/HerdingCode-0123-Andreas-Hakansson-and-Steven-Robbins-on-NancyFx.mp3" fileSize="34995281" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>On this episode, the guys talk to Andreas and Steven about Nancy, a lightweight, low-ceremony, framework for building HTTP based services on .Net and Mono. Scott Koon asks why Nancy was developed and what are the problems going up against ASP.NET. Andreas</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>On this episode, the guys talk to Andreas and Steven about Nancy, a lightweight, low-ceremony, framework for building HTTP based services on .Net and Mono. Scott Koon asks why Nancy was developed and what are the problems going up against ASP.NET. Andreas explains Nancy is a lighter approach and doesn&amp;#8217;t get in the way. Andreas [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-123-andreas-hakansson-and-steven-robbins-on-nancyfx/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/u5OwOje67oc/HerdingCode-0123-Andreas-Hakansson-and-Steven-Robbins-on-NancyFx.mp3" length="34995281" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0123-Andreas-Hakansson-and-Steven-Robbins-on-NancyFx.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 122: Bert Belder on porting Node.js to Windows</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/8kZJGXUE9nY/</link>
		<comments>http://herdingcode.com/herding-code-122-bert-belder-on-porting-node-js-to-windows/#comments</comments>
		<pubDate>Tue, 11 Oct 2011 18:57:36 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=347</guid>
		<description><![CDATA[This episode of Herding Code the guys talk to Bert Belder, a Node.js developer who&#8217;s working on the native Windows port. Kevin asks how Bert got started with Node.js. Bert explains that he was working on a PHP based system which had a good amount of logic in Javascript, and he started looking to node [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code the guys talk to Bert Belder, a Node.js developer who&#8217;s working on the native Windows port. Kevin asks how Bert got started with Node.js. Bert explains that he was working on a PHP based system which had a good amount of logic in Javascript, and he started looking to node [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/8kZJGXUE9nY" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-122-bert-belder-on-porting-node-js-to-windows/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/z-0TDqoZfgA/HerdingCode-0122-Bert-Belder-on-porting-nodejs-to-Windows.mp3" fileSize="29509163" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code the guys talk to Bert Belder, a Node.js developer who&amp;#8217;s working on the native Windows port. Kevin asks how Bert got started with Node.js. Bert explains that he was working on a PHP based system which had a good amount of</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code the guys talk to Bert Belder, a Node.js developer who&amp;#8217;s working on the native Windows port. Kevin asks how Bert got started with Node.js. Bert explains that he was working on a PHP based system which had a good amount of logic in Javascript, and he started looking to node [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-122-bert-belder-on-porting-node-js-to-windows/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/z-0TDqoZfgA/HerdingCode-0122-Bert-Belder-on-porting-nodejs-to-Windows.mp3" length="29509163" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0122-Bert-Belder-on-porting-nodejs-to-Windows.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 121: Sara Chipps updates us on Girl Develop It at one year</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/x-_FOV824nE/</link>
		<comments>http://herdingcode.com/herding-code-121-sara-chipps-updates-us-on-girl-develop-it-at-one-year/#comments</comments>
		<pubDate>Fri, 23 Sep 2011 20:18:53 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=346</guid>
		<description><![CDATA[This episode of Herding Code Kevin and Jon catch up with Sara Chipps to find out how Girl Develop It is going. Kevin jumps right into it by asking Sara about what&#8217;s been going on over the past year. Sara goes back to what was on their minds as they were first getting started with [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code Kevin and Jon catch up with Sara Chipps to find out how Girl Develop It is going. Kevin jumps right into it by asking Sara about what&#8217;s been going on over the past year. Sara goes back to what was on their minds as they were first getting started with [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/x-_FOV824nE" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-121-sara-chipps-updates-us-on-girl-develop-it-at-one-year/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/DgOqT7HyPos/HerdingCode-0121-Sara-Chipps-updates-us-on-Girl-Develop-It.mp3" fileSize="34795145" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code Kevin and Jon catch up with Sara Chipps to find out how Girl Develop It is going. Kevin jumps right into it by asking Sara about what&amp;#8217;s been going on over the past year. Sara goes back to what was on their minds as they </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code Kevin and Jon catch up with Sara Chipps to find out how Girl Develop It is going. Kevin jumps right into it by asking Sara about what&amp;#8217;s been going on over the past year. Sara goes back to what was on their minds as they were first getting started with [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-121-sara-chipps-updates-us-on-girl-develop-it-at-one-year/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/DgOqT7HyPos/HerdingCode-0121-Sara-Chipps-updates-us-on-Girl-Develop-It.mp3" length="34795145" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0121-Sara-Chipps-updates-us-on-Girl-Develop-It.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 120: Ryan Stewart on RIAs and All Things Adobe</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/ynD7iYpxck8/</link>
		<comments>http://herdingcode.com/herding-code-120-ryan-stewart-on-rias-and-all-things-adobe/#comments</comments>
		<pubDate>Tue, 13 Sep 2011 03:48:53 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=343</guid>
		<description><![CDATA[This episode of Herding Code the guys talk to Ryan Stewart, a developer evangelist at Adobe. Scott K asks about the pricing of Adobe products. Ryan explains why things are priced as they are and talks about the subscription model alternative. Jon talks about the open other free or inexpensive alternatives for beginning Adobe development [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code the guys talk to Ryan Stewart, a developer evangelist at Adobe. Scott K asks about the pricing of Adobe products. Ryan explains why things are priced as they are and talks about the subscription model alternative. Jon talks about the open other free or inexpensive alternatives for beginning Adobe development [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/ynD7iYpxck8" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-120-ryan-stewart-on-rias-and-all-things-adobe/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/_Nz_bhD0WDM/HerdingCode-0120-Ryan-Stewart-on-RIAs-and-all-things-Adobe.mp3" fileSize="40310009" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code the guys talk to Ryan Stewart, a developer evangelist at Adobe. Scott K asks about the pricing of Adobe products. Ryan explains why things are priced as they are and talks about the subscription model alternative. Jon talks ab</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code the guys talk to Ryan Stewart, a developer evangelist at Adobe. Scott K asks about the pricing of Adobe products. Ryan explains why things are priced as they are and talks about the subscription model alternative. Jon talks about the open other free or inexpensive alternatives for beginning Adobe development [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-120-ryan-stewart-on-rias-and-all-things-adobe/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/_Nz_bhD0WDM/HerdingCode-0120-Ryan-Stewart-on-RIAs-and-all-things-Adobe.mp3" length="40310009" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0120-Ryan-Stewart-on-RIAs-and-all-things-Adobe.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 119: On The Writing Technical Books (with Jesse Liberty, Phil Haack, and Brad Wilson)</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/LL3JFJQa4sI/</link>
		<comments>http://herdingcode.com/herding-code-119-on-the-writing-technical-books-with-jesse-liberty-phil-haack-and-brad-wilson-2/#comments</comments>
		<pubDate>Sat, 27 Aug 2011 03:47:41 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=342</guid>
		<description><![CDATA[This episode of Herding Code the guys talk to Jesse Liberty, Phil Haack, and Brad Wilson about writing technical books. Jesse has written dozens of technical books, and both Brad and Phil worked with Jon and K. Scott on the recently released ASP.NET Professional MVC 3 book. What&#8217;s it like to write a book? Why [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code the guys talk to Jesse Liberty, Phil Haack, and Brad Wilson about writing technical books. Jesse has written dozens of technical books, and both Brad and Phil worked with Jon and K. Scott on the recently released ASP.NET Professional MVC 3 book. What&#8217;s it like to write a book? Why [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/LL3JFJQa4sI" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-119-on-the-writing-technical-books-with-jesse-liberty-phil-haack-and-brad-wilson-2/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/Devt-UVpDpE/HerdingCode-0119-On-The-Writing-Of-Technical-Books.mp3" fileSize="43245014" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code the guys talk to Jesse Liberty, Phil Haack, and Brad Wilson about writing technical books. Jesse has written dozens of technical books, and both Brad and Phil worked with Jon and K. Scott on the recently released ASP.NET Profe</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code the guys talk to Jesse Liberty, Phil Haack, and Brad Wilson about writing technical books. Jesse has written dozens of technical books, and both Brad and Phil worked with Jon and K. Scott on the recently released ASP.NET Professional MVC 3 book. What&amp;#8217;s it like to write a book? Why [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-119-on-the-writing-technical-books-with-jesse-liberty-phil-haack-and-brad-wilson-2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/Devt-UVpDpE/HerdingCode-0119-On-The-Writing-Of-Technical-Books.mp3" length="43245014" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0119-On-The-Writing-Of-Technical-Books.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 118: Paul Betts on SassAndCoffee</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/HiEzZBqmAwA/</link>
		<comments>http://herdingcode.com/herding-code-118-paul-betts-on-sassandcoffee/#comments</comments>
		<pubDate>Thu, 11 Aug 2011 01:54:08 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=334</guid>
		<description><![CDATA[This episode of Herding Code the guys talk to Paul Betts about SassAndCoffee, a NuGet package that adds runtime Sass and CoffeeScript compilation to ASP.NET. Jon asks Paul about his role on the Office Labs team [Spoiler alert! Since this podcast, Paul has started a new job at GitHub!] Jon asks Paul about why he [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code the guys talk to Paul Betts about SassAndCoffee, a NuGet package that adds runtime Sass and CoffeeScript compilation to ASP.NET. Jon asks Paul about his role on the Office Labs team [Spoiler alert! Since this podcast, Paul has started a new job at GitHub!] Jon asks Paul about why he [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/HiEzZBqmAwA" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-118-paul-betts-on-sassandcoffee/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/uqQPEiwmdYU/HerdingCode-0118-Paul-Betts-on-SassAndCoffee.mp3" fileSize="56397351" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code the guys talk to Paul Betts about SassAndCoffee, a NuGet package that adds runtime Sass and CoffeeScript compilation to ASP.NET. Jon asks Paul about his role on the Office Labs team [Spoiler alert! Since this podcast, Paul has</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code the guys talk to Paul Betts about SassAndCoffee, a NuGet package that adds runtime Sass and CoffeeScript compilation to ASP.NET. Jon asks Paul about his role on the Office Labs team [Spoiler alert! Since this podcast, Paul has started a new job at GitHub!] Jon asks Paul about why he [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-118-paul-betts-on-sassandcoffee/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/uqQPEiwmdYU/HerdingCode-0118-Paul-Betts-on-SassAndCoffee.mp3" length="56397351" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0118-Paul-Betts-on-SassAndCoffee.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 117: Llewellyn Falco on Approval Tests</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/X8tWDItthiE/</link>
		<comments>http://herdingcode.com/herding-code-117-llewellyn-falcon-on-approval-tests/#comments</comments>
		<pubDate>Thu, 21 Jul 2011 04:17:03 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=329</guid>
		<description><![CDATA[This episode of Herding Code the guys talk to Llewellyn Falco about Acceptance Tests, an interesting testing framework for .NET, Java, Ruby, and PHP. Jon talks about how much he enjoyed Llewellyn’s talk on refactoring legacy code at So Cal Code Camp, and was especially intrigued by Approval Tests. Llewellyn explains how Approval Tests got started at a weekly [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code the guys talk to Llewellyn Falco about Acceptance Tests, an interesting testing framework for .NET, Java, Ruby, and PHP. Jon talks about how much he enjoyed Llewellyn’s talk on refactoring legacy code at So Cal Code Camp, and was especially intrigued by Approval Tests. Llewellyn explains how Approval Tests got started at a weekly [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/X8tWDItthiE" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-117-llewellyn-falcon-on-approval-tests/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/n5BhwdzW13A/HerdingCode-0117-Llewellyn-Falco-on-Approval-Tests.mp3" fileSize="50081414" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code the guys talk to Llewellyn Falco about Acceptance Tests, an interesting testing framework for .NET, Java, Ruby, and PHP. Jon talks about how much he enjoyed Llewellyn’s talk on refactoring legacy code at So Cal Code Camp, and </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code the guys talk to Llewellyn Falco about Acceptance Tests, an interesting testing framework for .NET, Java, Ruby, and PHP. Jon talks about how much he enjoyed Llewellyn’s talk on refactoring legacy code at So Cal Code Camp, and was especially intrigued by Approval Tests. Llewellyn explains how Approval Tests got started at a weekly [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-117-llewellyn-falcon-on-approval-tests/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/n5BhwdzW13A/HerdingCode-0117-Llewellyn-Falco-on-Approval-Tests.mp3" length="50081414" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0117-Llewellyn-Falco-on-Approval-Tests.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 116: Eric Lawrence on Fiddler, IE Internals, and HTTP</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/qwHK5w66F7I/</link>
		<comments>http://herdingcode.com/herding-code-116-eric-lawrence-on-fiddler-ie-internals-and-http/#comments</comments>
		<pubDate>Fri, 01 Jul 2011 22:12:50 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=328</guid>
		<description><![CDATA[This episode of Herding Code the guys talk to Eric Lawrence, the author of the popular Fiddler web debugging proxy. Eric&#8217;s also a member of the Internet Explorer team and developer of several popular freeware tools. Eric explains how he&#8217;s been working on &#8211; and now runs &#8211; the team that works on the networking [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code the guys talk to Eric Lawrence, the author of the popular Fiddler web debugging proxy. Eric&#8217;s also a member of the Internet Explorer team and developer of several popular freeware tools. Eric explains how he&#8217;s been working on &#8211; and now runs &#8211; the team that works on the networking [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/qwHK5w66F7I" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-116-eric-lawrence-on-fiddler-ie-internals-and-http/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/3RGKkovMYm8/HerdingCode-0116-Eric-Lawrence-on-Fiddler-IE-Internals-and-HTTP.mp3" fileSize="64471796" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code the guys talk to Eric Lawrence, the author of the popular Fiddler web debugging proxy. Eric&amp;#8217;s also a member of the Internet Explorer team and developer of several popular freeware tools. Eric explains how he&amp;#8217;s been</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code the guys talk to Eric Lawrence, the author of the popular Fiddler web debugging proxy. Eric&amp;#8217;s also a member of the Internet Explorer team and developer of several popular freeware tools. Eric explains how he&amp;#8217;s been working on &amp;#8211; and now runs &amp;#8211; the team that works on the networking [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-116-eric-lawrence-on-fiddler-ie-internals-and-http/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/3RGKkovMYm8/HerdingCode-0116-Eric-Lawrence-on-Fiddler-IE-Internals-and-HTTP.mp3" length="64471796" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0116-Eric-Lawrence-on-Fiddler-IE-Internals-and-HTTP.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 115: RESTravaganza with Darrel Miller, Glenn Block, and John Sheehan</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/o2mRlhbUDes/</link>
		<comments>http://herdingcode.com/herding-code-115-restravaganza-with-darrel-miller-glenn-block-and-john-sheehan/#comments</comments>
		<pubDate>Wed, 22 Jun 2011 00:12:19 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=327</guid>
		<description><![CDATA[This episode of Herding Code the guys talk REST with Glenn Block (who&#8217;s driving the WCF Web APIs), Darrel Miller (a REST expert with a lot of real world production experience), and John Sheehan (author of RestSharp) about what REST really is and what practical value it really offers in real world, production applications. Jon [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code the guys talk REST with Glenn Block (who&#8217;s driving the WCF Web APIs), Darrel Miller (a REST expert with a lot of real world production experience), and John Sheehan (author of RestSharp) about what REST really is and what practical value it really offers in real world, production applications. Jon [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/o2mRlhbUDes" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-115-restravaganza-with-darrel-miller-glenn-block-and-john-sheehan/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/k6n7t2DPUQQ/HerdingCode-0115-RESTravaganza-with-Darrel-Miller--Glenn-Block--John-Sheehan.mp3" fileSize="50049509" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code the guys talk REST with Glenn Block (who&amp;#8217;s driving the WCF Web APIs), Darrel Miller (a REST expert with a lot of real world production experience), and John Sheehan (author of RestSharp) about what REST really is and wha</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code the guys talk REST with Glenn Block (who&amp;#8217;s driving the WCF Web APIs), Darrel Miller (a REST expert with a lot of real world production experience), and John Sheehan (author of RestSharp) about what REST really is and what practical value it really offers in real world, production applications. Jon [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-115-restravaganza-with-darrel-miller-glenn-block-and-john-sheehan/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/k6n7t2DPUQQ/HerdingCode-0115-RESTravaganza-with-Darrel-Miller--Glenn-Block--John-Sheehan.mp3" length="50049509" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0115-RESTravaganza-with-Darrel-Miller--Glenn-Block--John-Sheehan.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 114: Trevor Burnham on CoffeeScript</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/jMOy7LYWMO0/</link>
		<comments>http://herdingcode.com/herding-code-114-trevor-burnham-on-coffeescript/#comments</comments>
		<pubDate>Tue, 14 Jun 2011 23:05:05 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=321</guid>
		<description><![CDATA[This episode of Herding Code the guys talk to Trevor Burnham about Coffeescript, &#8220;a little language that compiles into JavaScript.&#8221; Kevin asks Trevor to explain what CoffeeScript is. Trevor explains how CoffeeScript helps you to write the same code you would have in JavaScript, but more quickly and with less effort. Kevin ask if people [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code the guys talk to Trevor Burnham about Coffeescript, &#8220;a little language that compiles into JavaScript.&#8221; Kevin asks Trevor to explain what CoffeeScript is. Trevor explains how CoffeeScript helps you to write the same code you would have in JavaScript, but more quickly and with less effort. Kevin ask if people [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/jMOy7LYWMO0" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-114-trevor-burnham-on-coffeescript/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/2yX0mq5J_tE/HerdingCode-0114-Trevor-Burnham-on-CoffeeScript.mp3" fileSize="37429330" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code the guys talk to Trevor Burnham about Coffeescript, &amp;#8220;a little language that compiles into JavaScript.&amp;#8221; Kevin asks Trevor to explain what CoffeeScript is. Trevor explains how CoffeeScript helps you to write the same</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code the guys talk to Trevor Burnham about Coffeescript, &amp;#8220;a little language that compiles into JavaScript.&amp;#8221; Kevin asks Trevor to explain what CoffeeScript is. Trevor explains how CoffeeScript helps you to write the same code you would have in JavaScript, but more quickly and with less effort. Kevin ask if people [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-114-trevor-burnham-on-coffeescript/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/2yX0mq5J_tE/HerdingCode-0114-Trevor-Burnham-on-CoffeeScript.mp3" length="37429330" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0114-Trevor-Burnham-on-CoffeeScript.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 113: Mark Russinovich on Zero Day and Computer Security</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/Vzi5wmgztjQ/</link>
		<comments>http://herdingcode.com/herding-code-113-mark-russinovich-on-zero-day-and-computer-security/#comments</comments>
		<pubDate>Fri, 27 May 2011 22:16:34 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=320</guid>
		<description><![CDATA[This episode of Herding Code the guys talk to Mark Russinovich about his new book (Zero Day), modern malware like Stuxnet, his experiences discovering the Sony rootkit, Sysinternals tools, and computer security in general. K Scott asks Mark about how he decided to write Zero Day. Mark talks about how early, unsophisticated viruses still caused [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code the guys talk to Mark Russinovich about his new book (Zero Day), modern malware like Stuxnet, his experiences discovering the Sony rootkit, Sysinternals tools, and computer security in general. K Scott asks Mark about how he decided to write Zero Day. Mark talks about how early, unsophisticated viruses still caused [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/Vzi5wmgztjQ" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-113-mark-russinovich-on-zero-day-and-computer-security/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/APNSNN69iYQ/HerdingCode-0113-Mark-Russinovich-on-Zero-Day-and-Computer-Security.mp3" fileSize="31794971" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code the guys talk to Mark Russinovich about his new book (Zero Day), modern malware like Stuxnet, his experiences discovering the Sony rootkit, Sysinternals tools, and computer security in general. K Scott asks Mark about how he d</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code the guys talk to Mark Russinovich about his new book (Zero Day), modern malware like Stuxnet, his experiences discovering the Sony rootkit, Sysinternals tools, and computer security in general. K Scott asks Mark about how he decided to write Zero Day. Mark talks about how early, unsophisticated viruses still caused [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-113-mark-russinovich-on-zero-day-and-computer-security/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/APNSNN69iYQ/HerdingCode-0113-Mark-Russinovich-on-Zero-Day-and-Computer-Security.mp3" length="31794971" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0113-Mark-Russinovich-on-Zero-Day-and-Computer-Security.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 112: Josh Arnold and Jeremy Miller on FubuMVC</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/brQfSyw7ZmU/</link>
		<comments>http://herdingcode.com/herding-code-112-josh-arnold-and-jeremy-miller-on-fubumvc/#comments</comments>
		<pubDate>Tue, 24 May 2011 21:41:41 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=319</guid>
		<description><![CDATA[This episode of Herding Code the guys talk to Josh Arnold and Jeremy Miller about what&#8217;s new with FubuMVC. Jeremy Miller explains why FubuMVC &#34;deserves to exist&#34; and explains how compositional architecture and conventions help in building complex systems. Josh talks about how FubuMVC diagnostics help in understanding how the conventions are being applied how [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code the guys talk to Josh Arnold and Jeremy Miller about what&#8217;s new with FubuMVC. Jeremy Miller explains why FubuMVC &quot;deserves to exist&quot; and explains how compositional architecture and conventions help in building complex systems. Josh talks about how FubuMVC diagnostics help in understanding how the conventions are being applied how [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/brQfSyw7ZmU" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-112-josh-arnold-and-jeremy-miller-on-fubumvc/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/3QLbNDbhvDQ/HerdingCode-0112-Josh-Arnold-and-Jeremy-Miller-on-FubuMVC.mp3" fileSize="40585602" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code the guys talk to Josh Arnold and Jeremy Miller about what&amp;#8217;s new with FubuMVC. Jeremy Miller explains why FubuMVC &amp;#34;deserves to exist&amp;#34; and explains how compositional architecture and conventions help in building co</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code the guys talk to Josh Arnold and Jeremy Miller about what&amp;#8217;s new with FubuMVC. Jeremy Miller explains why FubuMVC &amp;#34;deserves to exist&amp;#34; and explains how compositional architecture and conventions help in building complex systems. Josh talks about how FubuMVC diagnostics help in understanding how the conventions are being applied how [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-112-josh-arnold-and-jeremy-miller-on-fubumvc/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/3QLbNDbhvDQ/HerdingCode-0112-Josh-Arnold-and-Jeremy-Miller-on-FubuMVC.mp3" length="40585602" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0112-Josh-Arnold-and-Jeremy-Miller-on-FubuMVC.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 111: John Papa on the Open Source Fest at MIX11</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/v2uDD8azuts/</link>
		<comments>http://herdingcode.com/herding-code-111-john-papa-on-the-open-source-fest-at-mix11/#comments</comments>
		<pubDate>Wed, 04 May 2011 20:55:03 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=318</guid>
		<description><![CDATA[This episode of Herding Code the guys talk to John Papa about the Open Source Fest he put together at MIX11. Jon asks how the whole thing got started, and if John encountered any friction within Microsoft in getting this set up. John describes the event and calls out some of the winners from the [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code the guys talk to John Papa about the Open Source Fest he put together at MIX11. Jon asks how the whole thing got started, and if John encountered any friction within Microsoft in getting this set up. John describes the event and calls out some of the winners from the [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/v2uDD8azuts" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-111-john-papa-on-the-open-source-fest-at-mix11/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/5uTEeGfg1VE/HerdingCode-0111-John-Papa-on-Open-Source-Fest.mp3" fileSize="31449782" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code the guys talk to John Papa about the Open Source Fest he put together at MIX11. Jon asks how the whole thing got started, and if John encountered any friction within Microsoft in getting this set up. John describes the event a</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code the guys talk to John Papa about the Open Source Fest he put together at MIX11. Jon asks how the whole thing got started, and if John encountered any friction within Microsoft in getting this set up. John describes the event and calls out some of the winners from the [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-111-john-papa-on-the-open-source-fest-at-mix11/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/5uTEeGfg1VE/HerdingCode-0111-John-Papa-on-Open-Source-Fest.mp3" length="31449782" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0111-John-Papa-on-Open-Source-Fest.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 110: Geoff Dalgas and Jarrod Dixon take us behind the scenes at StackExchange</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/BeTok_lciM4/</link>
		<comments>http://herdingcode.com/herding-code-110-geoff-dalgas-and-jarrod-dixon-take-us-behind-the-scenes-at-stackexchange/#comments</comments>
		<pubDate>Mon, 25 Apr 2011 17:19:16 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=315</guid>
		<description><![CDATA[This episode of Herding Code Kevin and Jon sit down with Geoff and Jarrod at MIX to talk about their experiences from helping to build the first StackOverflow site up through today&#8217;s fast paced world of StackExchanges and gold plated Lamborghinis. Note: We recorded in quietest spot we could find &#8211; there&#8217;s some background noise, [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code Kevin and Jon sit down with Geoff and Jarrod at MIX to talk about their experiences from helping to build the first StackOverflow site up through today&#8217;s fast paced world of StackExchanges and gold plated Lamborghinis. Note: We recorded in quietest spot we could find &#8211; there&#8217;s some background noise, [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/BeTok_lciM4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-110-geoff-dalgas-and-jarrod-dixon-take-us-behind-the-scenes-at-stackexchange/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/5riG_WCzK8w/HerdingCode-0110-Geoff-Dalgas-and-Jarrod-Dixon-on-StackExchange.mp3" fileSize="33503518" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code Kevin and Jon sit down with Geoff and Jarrod at MIX to talk about their experiences from helping to build the first StackOverflow site up through today&amp;#8217;s fast paced world of StackExchanges and gold plated Lamborghinis. N</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code Kevin and Jon sit down with Geoff and Jarrod at MIX to talk about their experiences from helping to build the first StackOverflow site up through today&amp;#8217;s fast paced world of StackExchanges and gold plated Lamborghinis. Note: We recorded in quietest spot we could find &amp;#8211; there&amp;#8217;s some background noise, [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-110-geoff-dalgas-and-jarrod-dixon-take-us-behind-the-scenes-at-stackexchange/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/5riG_WCzK8w/HerdingCode-0110-Geoff-Dalgas-and-Jarrod-Dixon-on-StackExchange.mp3" length="33503518" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0110-Geoff-Dalgas-and-Jarrod-Dixon-on-StackExchange.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 109: Harmony Hackathon</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/7FoEhS5TAaY/</link>
		<comments>http://herdingcode.com/herding-code-109-harmony-hackathon/#comments</comments>
		<pubDate>Wed, 20 Apr 2011 23:20:27 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=310</guid>
		<description><![CDATA[This episode of Herding Code the guys talk to the organizers of the Harmony Hackathon: twelve developers coding madly for 48 hours, trying to build an application for the non-profit Harmony Hill cancer retreat center. Eric talks about the Harmony Hackathon came together and what they were trying to accomplis. Jon asks about how things [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code the guys talk to the organizers of the Harmony Hackathon: twelve developers coding madly for 48 hours, trying to build an application for the non-profit Harmony Hill cancer retreat center. Eric talks about the Harmony Hackathon came together and what they were trying to accomplis. Jon asks about how things [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/7FoEhS5TAaY" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-109-harmony-hackathon/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/oNP2JoQf0GU/HerdingCode-0109-Harmony-Hackathon.mp3" fileSize="49352598" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code the guys talk to the organizers of the Harmony Hackathon: twelve developers coding madly for 48 hours, trying to build an application for the non-profit Harmony Hill cancer retreat center. Eric talks about the Harmony Hackatho</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code the guys talk to the organizers of the Harmony Hackathon: twelve developers coding madly for 48 hours, trying to build an application for the non-profit Harmony Hill cancer retreat center. Eric talks about the Harmony Hackathon came together and what they were trying to accomplis. Jon asks about how things [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-109-harmony-hackathon/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/oNP2JoQf0GU/HerdingCode-0109-Harmony-Hackathon.mp3" length="49352598" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0109-Harmony-Hackathon.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 108: Jin Yang and Nathan Bowers on Web Design</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/EATiYjQV5Ik/</link>
		<comments>http://herdingcode.com/herding-code-108-jin-yang-and-nathan-bowers-on-web-design/#comments</comments>
		<pubDate>Fri, 25 Mar 2011 00:15:54 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=309</guid>
		<description><![CDATA[This episode of Herding Code continues a discussion / argument that Jon started with Jin Yang and Nathan Bowers on Twitter a few weeks ago after reading a post he liked from a product designer at Quora about how they don&#8217;t use Photoshop in their design process. What&#8217;s the role of visual design in the [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code continues a discussion / argument that Jon started with Jin Yang and Nathan Bowers on Twitter a few weeks ago after reading a post he liked from a product designer at Quora about how they don&#8217;t use Photoshop in their design process. What&#8217;s the role of visual design in the [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/EATiYjQV5Ik" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-108-jin-yang-and-nathan-bowers-on-web-design/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/FA2bCRfft7s/HerdingCode-0108-Jin-Yang-and-Nathan-Bowers-on-User-Experience-Design.mp3" fileSize="50059991" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code continues a discussion / argument that Jon started with Jin Yang and Nathan Bowers on Twitter a few weeks ago after reading a post he liked from a product designer at Quora about how they don&amp;#8217;t use Photoshop in their des</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code continues a discussion / argument that Jon started with Jin Yang and Nathan Bowers on Twitter a few weeks ago after reading a post he liked from a product designer at Quora about how they don&amp;#8217;t use Photoshop in their design process. What&amp;#8217;s the role of visual design in the [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-108-jin-yang-and-nathan-bowers-on-web-design/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/FA2bCRfft7s/HerdingCode-0108-Jin-Yang-and-Nathan-Bowers-on-User-Experience-Design.mp3" length="50059991" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0108-Jin-Yang-and-Nathan-Bowers-on-User-Experience-Design.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 107: Apple Subscription fees, Nokia, Reflector, Mono, Watson, CardSpace, and IE9 RC</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/EzWBFqwj9NA/</link>
		<comments>http://herdingcode.com/herding-code-107-apple-subscription-fees-nokia-reflector-mono-watson-cardspace-and-ie9-rc/#comments</comments>
		<pubDate>Thu, 10 Mar 2011 08:20:39 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=306</guid>
		<description><![CDATA[In this episode of Herding Code, the guys talk nonsense for over an hour. Topic: The Apple Store 30% fee for App Subscriptions &#8211; who&#8217;s surprised, what apps will it affect, etc. The conversation shifts to Kindle, and whether content focused apps can move to HTML only. Topic: Windows Mobile deal with Nokia &#8211; will [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode of Herding Code, the guys talk nonsense for over an hour. Topic: The Apple Store 30% fee for App Subscriptions &#8211; who&#8217;s surprised, what apps will it affect, etc. The conversation shifts to Kindle, and whether content focused apps can move to HTML only. Topic: Windows Mobile deal with Nokia &#8211; will [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/EzWBFqwj9NA" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-107-apple-subscription-fees-nokia-reflector-mono-watson-cardspace-and-ie9-rc/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/yELObLxZPZs/HerdingCode-0107-Apple-Subscription-fees-Nokia-Reflector-Mono-Watson-CardSpace-IE9-RC.mp3" fileSize="56137280" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode of Herding Code, the guys talk nonsense for over an hour. Topic: The Apple Store 30% fee for App Subscriptions &amp;#8211; who&amp;#8217;s surprised, what apps will it affect, etc. The conversation shifts to Kindle, and whether content focused app</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode of Herding Code, the guys talk nonsense for over an hour. Topic: The Apple Store 30% fee for App Subscriptions &amp;#8211; who&amp;#8217;s surprised, what apps will it affect, etc. The conversation shifts to Kindle, and whether content focused apps can move to HTML only. Topic: Windows Mobile deal with Nokia &amp;#8211; will [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-107-apple-subscription-fees-nokia-reflector-mono-watson-cardspace-and-ie9-rc/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/yELObLxZPZs/HerdingCode-0107-Apple-Subscription-fees-Nokia-Reflector-Mono-Watson-CardSpace-IE9-RC.mp3" length="56137280" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0107-Apple-Subscription-fees-Nokia-Reflector-Mono-Watson-CardSpace-IE9-RC.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 106: Mark Rendle on Simple.Data</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/arX2DM9KFBE/</link>
		<comments>http://herdingcode.com/herding-code-106-mark-rendle-on-simple-data/#comments</comments>
		<pubDate>Tue, 22 Feb 2011 21:12:41 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=305</guid>
		<description><![CDATA[In this episode of Herding Code, the guys speak with Mark Rendle about his Simple.Data and Fix projects. The show begins with Mark&#8217;s Simple.Data elevator pitch in which he explains that Simple.Data is an ORM without the O, the R or the M. Jon asks about Mark&#8217;s heavy use of dynamic types in the Simple.Data [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode of Herding Code, the guys speak with Mark Rendle about his Simple.Data and Fix projects. The show begins with Mark&#8217;s Simple.Data elevator pitch in which he explains that Simple.Data is an ORM without the O, the R or the M. Jon asks about Mark&#8217;s heavy use of dynamic types in the Simple.Data [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/arX2DM9KFBE" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-106-mark-rendle-on-simple-data/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/zBoTU-_Dj7c/HerdingCode-0106-Mark-Rendle-on-Simple-Data.mp3" fileSize="45888007" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode of Herding Code, the guys speak with Mark Rendle about his Simple.Data and Fix projects. The show begins with Mark&amp;#8217;s Simple.Data elevator pitch in which he explains that Simple.Data is an ORM without the O, the R or the M. Jon asks a</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode of Herding Code, the guys speak with Mark Rendle about his Simple.Data and Fix projects. The show begins with Mark&amp;#8217;s Simple.Data elevator pitch in which he explains that Simple.Data is an ORM without the O, the R or the M. Jon asks about Mark&amp;#8217;s heavy use of dynamic types in the Simple.Data [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-106-mark-rendle-on-simple-data/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/zBoTU-_Dj7c/HerdingCode-0106-Mark-Rendle-on-Simple-Data.mp3" length="45888007" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0106-Mark-Rendle-on-Simple-Data.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 105: Brad Wilson on MVC 3</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/xLfWa8jZy-0/</link>
		<comments>http://herdingcode.com/herding-code-105-brad-wilson-on-mvc-3/#comments</comments>
		<pubDate>Mon, 14 Feb 2011 23:51:41 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=304</guid>
		<description><![CDATA[In this episode of Herding Code, the guys talk to ASP.NET team member and repeat guest Brad Wilson about what&#8217;s new in ASP.NET MVC 3, BDD-style testing with SpecFlow and WaitN, and the latest release of xUnit.net. Jon begins the show by sharing Brad&#8217;s bio and then dives right in asking about ASP.NET MVC 3 [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode of Herding Code, the guys talk to ASP.NET team member and repeat guest Brad Wilson about what&#8217;s new in ASP.NET MVC 3, BDD-style testing with SpecFlow and WaitN, and the latest release of xUnit.net. Jon begins the show by sharing Brad&#8217;s bio and then dives right in asking about ASP.NET MVC 3 [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/xLfWa8jZy-0" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-105-brad-wilson-on-mvc-3/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/yKvb5leIkek/HerdingCode-0105-Brad-Wilson-on-MVC-3.mp3" fileSize="54684780" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode of Herding Code, the guys talk to ASP.NET team member and repeat guest Brad Wilson about what&amp;#8217;s new in ASP.NET MVC 3, BDD-style testing with SpecFlow and WaitN, and the latest release of xUnit.net. Jon begins the show by sharing Brad</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode of Herding Code, the guys talk to ASP.NET team member and repeat guest Brad Wilson about what&amp;#8217;s new in ASP.NET MVC 3, BDD-style testing with SpecFlow and WaitN, and the latest release of xUnit.net. Jon begins the show by sharing Brad&amp;#8217;s bio and then dives right in asking about ASP.NET MVC 3 [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-105-brad-wilson-on-mvc-3/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/yKvb5leIkek/HerdingCode-0105-Brad-Wilson-on-MVC-3.mp3" length="54684780" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0105-Brad-Wilson-on-MVC-3.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 104: Rob Eisenberg on Caliburn Micro</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/wldKLtOwHn4/</link>
		<comments>http://herdingcode.com/herding-code-104-rob-eisenberg-on-caliburn-micro/#comments</comments>
		<pubDate>Mon, 07 Feb 2011 07:59:01 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=303</guid>
		<description><![CDATA[You remember Rob Eisenberg from Herding Code Show #57 when he talked presentation patterns along with Jeremy Miller, Ward Bell and Glenn Block. Well, in this episode of Herding Code, the conversation continues as Rob talks with the guys about Caliburn.Micro, an opinionated MVVM framework for WPF, Silverlight and WP7. Kevin kicks off this week&#8217;s [&#8230;]]]></description>
				<content:encoded><![CDATA[You remember Rob Eisenberg from Herding Code Show #57 when he talked presentation patterns along with Jeremy Miller, Ward Bell and Glenn Block. Well, in this episode of Herding Code, the conversation continues as Rob talks with the guys about Caliburn.Micro, an opinionated MVVM framework for WPF, Silverlight and WP7. Kevin kicks off this week&#8217;s [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/wldKLtOwHn4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-104-rob-eisenberg-on-caliburn-micro/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/usLxVO0AZ58/HerdingCode-0104-Rob-Eisenberg-on-Caliburn-Micro.mp3" fileSize="50176882" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>You remember Rob Eisenberg from Herding Code Show #57 when he talked presentation patterns along with Jeremy Miller, Ward Bell and Glenn Block. Well, in this episode of Herding Code, the conversation continues as Rob talks with the guys about Caliburn.Mic</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>You remember Rob Eisenberg from Herding Code Show #57 when he talked presentation patterns along with Jeremy Miller, Ward Bell and Glenn Block. Well, in this episode of Herding Code, the conversation continues as Rob talks with the guys about Caliburn.Micro, an opinionated MVVM framework for WPF, Silverlight and WP7. Kevin kicks off this week&amp;#8217;s [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-104-rob-eisenberg-on-caliburn-micro/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/usLxVO0AZ58/HerdingCode-0104-Rob-Eisenberg-on-Caliburn-Micro.mp3" length="50176882" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0104-Rob-Eisenberg-on-Caliburn-Micro.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 103: Seb Lambla on OpenEverything</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/RV0eKiXR6H4/</link>
		<comments>http://herdingcode.com/herding-code-103-seb-lambla-on-openeverything/#comments</comments>
		<pubDate>Tue, 25 Jan 2011 18:20:51 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=301</guid>
		<description><![CDATA[In this episode of Herding Code, the guys talk with &#8220;self-congratulatory, self-proclaimed, egotistical doofus&#8221; Sebastien Lambla about OpenRasta, OpenWrap and Open Web Interface for .NET (OWIN.) K Scott kicks off the show asking Seb about his most popular OSS project &#8211; OpenRasta provides the 30 second elevator pitch and touches on his web framework which [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode of Herding Code, the guys talk with &#8220;self-congratulatory, self-proclaimed, egotistical doofus&#8221; Sebastien Lambla about OpenRasta, OpenWrap and Open Web Interface for .NET (OWIN.) K Scott kicks off the show asking Seb about his most popular OSS project &#8211; OpenRasta provides the 30 second elevator pitch and touches on his web framework which [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/RV0eKiXR6H4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-103-seb-lambla-on-openeverything/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/9qGOa8ptDcU/HerdingCode-0103-Seb-Lambla-on-OpenEverything.mp3" fileSize="53469594" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode of Herding Code, the guys talk with &amp;#8220;self-congratulatory, self-proclaimed, egotistical doofus&amp;#8221; Sebastien Lambla about OpenRasta, OpenWrap and Open Web Interface for .NET (OWIN.) K Scott kicks off the show asking Seb about his m</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode of Herding Code, the guys talk with &amp;#8220;self-congratulatory, self-proclaimed, egotistical doofus&amp;#8221; Sebastien Lambla about OpenRasta, OpenWrap and Open Web Interface for .NET (OWIN.) K Scott kicks off the show asking Seb about his most popular OSS project &amp;#8211; OpenRasta provides the 30 second elevator pitch and touches on his web framework which [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-103-seb-lambla-on-openeverything/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/9qGOa8ptDcU/HerdingCode-0103-Seb-Lambla-on-OpenEverything.mp3" length="53469594" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0103-Seb-Lambla-on-OpenEverything.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 102: Tim Caswell on Node.js</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/p-ivxGbZUI4/</link>
		<comments>http://herdingcode.com/herding-code-102-tim-caswell-on-node-js/#comments</comments>
		<pubDate>Wed, 19 Jan 2011 00:24:30 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=299</guid>
		<description><![CDATA[In this episode of Herding Code, the guys talk with avid open source contributor Tim Caswell about Node.js for which he is a community leader.&#160; Listen in as the guys dig into node.js and what it has to offer. Tim gives the node.js elevator pitch and begins to explain what node offers &#8211; like event [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode of Herding Code, the guys talk with avid open source contributor Tim Caswell about Node.js for which he is a community leader.&#160; Listen in as the guys dig into node.js and what it has to offer. Tim gives the node.js elevator pitch and begins to explain what node offers &#8211; like event [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/p-ivxGbZUI4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-102-tim-caswell-on-node-js/feed/</wfw:commentRss>
		<slash:comments>14</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/CQNRxtTNo20/HerdingCode-0102-Tim-Caswell-on-Node-js.mp3" fileSize="37266544" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode of Herding Code, the guys talk with avid open source contributor Tim Caswell about Node.js for which he is a community leader.&amp;#160; Listen in as the guys dig into node.js and what it has to offer. Tim gives the node.js elevator pitch and </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode of Herding Code, the guys talk with avid open source contributor Tim Caswell about Node.js for which he is a community leader.&amp;#160; Listen in as the guys dig into node.js and what it has to offer. Tim gives the node.js elevator pitch and begins to explain what node offers &amp;#8211; like event [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-102-tim-caswell-on-node-js/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/CQNRxtTNo20/HerdingCode-0102-Tim-Caswell-on-Node-js.mp3" length="37266544" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0102-Tim-Caswell-on-Node-js.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 101: Kelly Sommers on Mobile Development and User Interface design</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/NCp-Z-zCfPs/</link>
		<comments>http://herdingcode.com/herding-code-101-kelly-sommers-on-mobile-development-and-user-interface-design/#comments</comments>
		<pubDate>Fri, 14 Jan 2011 23:15:40 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=298</guid>
		<description><![CDATA[In this episode of Herding Code, the guys talk to Kelly Sommers. Jon asks Kelly about her first big post, What fuels my passion for technology &#38; writing code Kelly talks about her experience getting started on Twitter Jon asks Kelly about her post on how desktop UI&#8217;s feel boring compared to mobile UI&#8217;s Jon [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode of Herding Code, the guys talk to Kelly Sommers. Jon asks Kelly about her first big post, What fuels my passion for technology &amp; writing code Kelly talks about her experience getting started on Twitter Jon asks Kelly about her post on how desktop UI&#8217;s feel boring compared to mobile UI&#8217;s Jon [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/NCp-Z-zCfPs" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-101-kelly-sommers-on-mobile-development-and-user-interface-design/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/RkSmeLR5zpE/HerdingCode-0101-Kelly-Sommers.mp3" fileSize="57171031" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode of Herding Code, the guys talk to Kelly Sommers. Jon asks Kelly about her first big post, What fuels my passion for technology &amp;#38; writing code Kelly talks about her experience getting started on Twitter Jon asks Kelly about her post on </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode of Herding Code, the guys talk to Kelly Sommers. Jon asks Kelly about her first big post, What fuels my passion for technology &amp;#38; writing code Kelly talks about her experience getting started on Twitter Jon asks Kelly about her post on how desktop UI&amp;#8217;s feel boring compared to mobile UI&amp;#8217;s Jon [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-101-kelly-sommers-on-mobile-development-and-user-interface-design/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/RkSmeLR5zpE/HerdingCode-0101-Kelly-Sommers.mp3" length="57171031" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0101-Kelly-Sommers.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 100: One Hundredth Show Celebration with Queen Beatrix</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/nqqsySZ0rIM/</link>
		<comments>http://herdingcode.com/herding-code-100-one-hundredth-show-celebration-with-queen-beatrix/#comments</comments>
		<pubDate>Sun, 02 Jan 2011 08:48:49 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=297</guid>
		<description><![CDATA[One hundred shows! Her Majesty Queen Beatrix shows up and talks with the gang about the previous 99 shows. Jon summarizes the server logs and beatboxes, K Scott talks about his jetset life via a flaky internet connection, Kevin reveals that this isn&#8217;t the podcast he thought he was signing up for, and Scott K [&#8230;]]]></description>
				<content:encoded><![CDATA[One hundred shows! Her Majesty Queen Beatrix shows up and talks with the gang about the previous 99 shows. Jon summarizes the server logs and beatboxes, K Scott talks about his jetset life via a flaky internet connection, Kevin reveals that this isn&#8217;t the podcast he thought he was signing up for, and Scott K [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/nqqsySZ0rIM" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-100-one-hundredth-show-celebration-with-queen-beatrix/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/Y-21B6zSyRI/HerdingCode-0100-One-Hundredth-Show.mp3" fileSize="38797212" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>One hundred shows! Her Majesty Queen Beatrix shows up and talks with the gang about the previous 99 shows. Jon summarizes the server logs and beatboxes, K Scott talks about his jetset life via a flaky internet connection, Kevin reveals that this isn&amp;#8217</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>One hundred shows! Her Majesty Queen Beatrix shows up and talks with the gang about the previous 99 shows. Jon summarizes the server logs and beatboxes, K Scott talks about his jetset life via a flaky internet connection, Kevin reveals that this isn&amp;#8217;t the podcast he thought he was signing up for, and Scott K [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-100-one-hundredth-show-celebration-with-queen-beatrix/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/Y-21B6zSyRI/HerdingCode-0100-One-Hundredth-Show.mp3" length="38797212" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0100-One-Hundredth-Show.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 99: David Ebbo on NuGet</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/lgeB-EyQ9xw/</link>
		<comments>http://herdingcode.com/herding-code-99-david-ebbo-on-nuget/#comments</comments>
		<pubDate>Thu, 02 Dec 2010 00:18:24 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=296</guid>
		<description><![CDATA[In this episode of Herding Code, the guys talk to David Ebbo, an architect on the Microsoft Web Platform and Tools team, about NuGet, a new open source package management system for the .NET platform. David describes the history of NuGet &#8211; how NuGet evolved from a web-based feature for use in ASP.NET Web Pages [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode of Herding Code, the guys talk to David Ebbo, an architect on the Microsoft Web Platform and Tools team, about NuGet, a new open source package management system for the .NET platform. David describes the history of NuGet &#8211; how NuGet evolved from a web-based feature for use in ASP.NET Web Pages [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/lgeB-EyQ9xw" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-99-david-ebbo-on-nuget/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/Q_zcoibexvM/HerdingCode-0099-David-Ebbo-on-NuGet.mp3" fileSize="43039775" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode of Herding Code, the guys talk to David Ebbo, an architect on the Microsoft Web Platform and Tools team, about NuGet, a new open source package management system for the .NET platform. David describes the history of NuGet &amp;#8211; how NuGet</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode of Herding Code, the guys talk to David Ebbo, an architect on the Microsoft Web Platform and Tools team, about NuGet, a new open source package management system for the .NET platform. David describes the history of NuGet &amp;#8211; how NuGet evolved from a web-based feature for use in ASP.NET Web Pages [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-99-david-ebbo-on-nuget/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/Q_zcoibexvM/HerdingCode-0099-David-Ebbo-on-NuGet.mp3" length="43039775" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0099-David-Ebbo-on-NuGet.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 98: Dale Ragan on Moncai</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/DWkOBSiWHWw/</link>
		<comments>http://herdingcode.com/herding-code-98-dale-ragan-on-moncai/#comments</comments>
		<pubDate>Mon, 29 Nov 2010 08:17:48 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=294</guid>
		<description><![CDATA[In the previous episode, when the guys were talking to Jackson Harper about Manos de Mono, he mentioned that Dale Ragan was doing cooking up something really exciting for hosting ASP.NET web applications with support for deployment via Git or Mercurial. So, they called him up and recorded a show right then and there. Jackson [&#8230;]]]></description>
				<content:encoded><![CDATA[In the previous episode, when the guys were talking to Jackson Harper about Manos de Mono, he mentioned that Dale Ragan was doing cooking up something really exciting for hosting ASP.NET web applications with support for deployment via Git or Mercurial. So, they called him up and recorded a show right then and there. Jackson [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/DWkOBSiWHWw" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-98-dale-ragan-on-moncai/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/xO7t3PUcIXk/HerdingCode-0098-Dale-Ragan-on-Moncai.mp3" fileSize="22812224" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In the previous episode, when the guys were talking to Jackson Harper about Manos de Mono, he mentioned that Dale Ragan was doing cooking up something really exciting for hosting ASP.NET web applications with support for deployment via Git or Mercurial. S</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In the previous episode, when the guys were talking to Jackson Harper about Manos de Mono, he mentioned that Dale Ragan was doing cooking up something really exciting for hosting ASP.NET web applications with support for deployment via Git or Mercurial. So, they called him up and recorded a show right then and there. Jackson [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-98-dale-ragan-on-moncai/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/xO7t3PUcIXk/HerdingCode-0098-Dale-Ragan-on-Moncai.mp3" length="22812224" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0098-Dale-Ragan-on-Moncai.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 97: Jackson Harper on Manos de Mono</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/mRf2JOkC_rg/</link>
		<comments>http://herdingcode.com/herding-code-97-jackson-harper-on-manos-de-mono/#comments</comments>
		<pubDate>Tue, 16 Nov 2010 00:29:43 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=293</guid>
		<description><![CDATA[In this episode of Herding Code, the guys talk with Jackson Harper about Manos de Mono, his lightweight web application framework that runs on Mono. The goal of Manos is to simplify the entire process of creating, managing and updating a web application from prototyping and design to deployment.&#160; Manos aims to be Simple, Testable, [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode of Herding Code, the guys talk with Jackson Harper about Manos de Mono, his lightweight web application framework that runs on Mono. The goal of Manos is to simplify the entire process of creating, managing and updating a web application from prototyping and design to deployment.&#160; Manos aims to be Simple, Testable, [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/mRf2JOkC_rg" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-97-jackson-harper-on-manos-de-mono/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/G556Qrp8hKk/HerdingCode-0097-Jackson-Harper-on-Manos.mp3" fileSize="21043557" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode of Herding Code, the guys talk with Jackson Harper about Manos de Mono, his lightweight web application framework that runs on Mono. The goal of Manos is to simplify the entire process of creating, managing and updating a web application f</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode of Herding Code, the guys talk with Jackson Harper about Manos de Mono, his lightweight web application framework that runs on Mono. The goal of Manos is to simplify the entire process of creating, managing and updating a web application from prototyping and design to deployment.&amp;#160; Manos aims to be Simple, Testable, [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-97-jackson-harper-on-manos-de-mono/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/G556Qrp8hKk/HerdingCode-0097-Jackson-Harper-on-Manos.mp3" length="21043557" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0097-Jackson-Harper-on-Manos.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 96: Eric Sink on Veracity and DVCS</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/VCC_cGXM-RA/</link>
		<comments>http://herdingcode.com/herding-code-96-eric-sink-on-veracity-and-dvcs/#comments</comments>
		<pubDate>Tue, 02 Nov 2010 03:32:16 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=288</guid>
		<description><![CDATA[This week on Herding Code, the guys talk with Eric Sink, cofounder of SourceGear, about Veracity and Distributed Version Control Systems. Listen in and learn about Veracity&#8217;s architecture including pluggable layers and a unique approach to data storage all built on an impressive technical stack. And get an answer to the question that everyone&#8217;s asking [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, the guys talk with Eric Sink, cofounder of SourceGear, about Veracity and Distributed Version Control Systems. Listen in and learn about Veracity&#8217;s architecture including pluggable layers and a unique approach to data storage all built on an impressive technical stack. And get an answer to the question that everyone&#8217;s asking [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/VCC_cGXM-RA" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-96-eric-sink-on-veracity-and-dvcs/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/BZ4zvyri46Y/HerdingCode-0096-Eric-Sink-on-Veracity-and-DVCS.mp3" fileSize="33604084" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk with Eric Sink, cofounder of SourceGear, about Veracity and Distributed Version Control Systems. Listen in and learn about Veracity&amp;#8217;s architecture including pluggable layers and a unique approach to data stor</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk with Eric Sink, cofounder of SourceGear, about Veracity and Distributed Version Control Systems. Listen in and learn about Veracity&amp;#8217;s architecture including pluggable layers and a unique approach to data storage all built on an impressive technical stack. And get an answer to the question that everyone&amp;#8217;s asking [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-96-eric-sink-on-veracity-and-dvcs/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/BZ4zvyri46Y/HerdingCode-0096-Eric-Sink-on-Veracity-and-DVCS.mp3" length="33604084" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0096-Eric-Sink-on-Veracity-and-DVCS.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 95: MonoDroid with Miguel and the Mono gang</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/FPyCMf-AvHc/</link>
		<comments>http://herdingcode.com/herding-code-95-monodroid-with-miguel-and-the-mono-gang/#comments</comments>
		<pubDate>Thu, 14 Oct 2010 19:21:59 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=286</guid>
		<description><![CDATA[Hey, it&#8217;s a bunch of Mono guys! That&#8217;s always fun. This time they&#8217;re talking about MonoDroid. Joining the gang this week are Miguel de Icaza, Joseph Hill, Geoff Norton, and Mike Kestner talk about developing .NET applications for the Android platform with Mono. Jon asks about where MonoDroid is at in the product lifecycle. Jon [&#8230;]]]></description>
				<content:encoded><![CDATA[Hey, it&#8217;s a bunch of Mono guys! That&#8217;s always fun. This time they&#8217;re talking about MonoDroid. Joining the gang this week are Miguel de Icaza, Joseph Hill, Geoff Norton, and Mike Kestner talk about developing .NET applications for the Android platform with Mono. Jon asks about where MonoDroid is at in the product lifecycle. Jon [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/FPyCMf-AvHc" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-95-monodroid-with-miguel-and-the-mono-gang/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/1NG6oxUgU7s/HerdingCode-0095-MonoDroid-with-Miguel-de-Icaza-and-the-Mono-gang.mp3" fileSize="47358185" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>Hey, it&amp;#8217;s a bunch of Mono guys! That&amp;#8217;s always fun. This time they&amp;#8217;re talking about MonoDroid. Joining the gang this week are Miguel de Icaza, Joseph Hill, Geoff Norton, and Mike Kestner talk about developing .NET applications for the And</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>Hey, it&amp;#8217;s a bunch of Mono guys! That&amp;#8217;s always fun. This time they&amp;#8217;re talking about MonoDroid. Joining the gang this week are Miguel de Icaza, Joseph Hill, Geoff Norton, and Mike Kestner talk about developing .NET applications for the Android platform with Mono. Jon asks about where MonoDroid is at in the product lifecycle. Jon [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-95-monodroid-with-miguel-and-the-mono-gang/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/1NG6oxUgU7s/HerdingCode-0095-MonoDroid-with-Miguel-de-Icaza-and-the-Mono-gang.mp3" length="47358185" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0095-MonoDroid-with-Miguel-de-Icaza-and-the-Mono-gang.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 94: Silverlight and HTML5</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/O7dykZk1vHY/</link>
		<comments>http://herdingcode.com/herding-code-94-silverlight-and-html5/#comments</comments>
		<pubDate>Fri, 01 Oct 2010 21:51:33 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=281</guid>
		<description><![CDATA[This week on Herding Code, the guys talk to Adam Kinney and Rick Barraza about how Silverlight fits into a world where HTML5 is finally becoming a reality. Jon asks about Adam and Rick&#8217;s opinions on the recent post on the Silverlight Team Blog about the future of Silverlight Adam talks about he sees consumer [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, the guys talk to Adam Kinney and Rick Barraza about how Silverlight fits into a world where HTML5 is finally becoming a reality. Jon asks about Adam and Rick&#8217;s opinions on the recent post on the Silverlight Team Blog about the future of Silverlight Adam talks about he sees consumer [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/O7dykZk1vHY" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-94-silverlight-and-html5/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/kFNA9gLpdiE/HerdingCode-0094-Silverlight-and-HTML5.mp3" fileSize="44025611" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk to Adam Kinney and Rick Barraza about how Silverlight fits into a world where HTML5 is finally becoming a reality. Jon asks about Adam and Rick&amp;#8217;s opinions on the recent post on the Silverlight Team Blog about</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk to Adam Kinney and Rick Barraza about how Silverlight fits into a world where HTML5 is finally becoming a reality. Jon asks about Adam and Rick&amp;#8217;s opinions on the recent post on the Silverlight Team Blog about the future of Silverlight Adam talks about he sees consumer [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-94-silverlight-and-html5/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/kFNA9gLpdiE/HerdingCode-0094-Silverlight-and-HTML5.mp3" length="44025611" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0094-Silverlight-and-HTML5.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 93: Computer Errors, Home Media, and The Fall of The Roman Empire</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/XBSslZXyVhQ/</link>
		<comments>http://herdingcode.com/herding-code-93-computer-errors-home-media-and-the-fall-of-the-roman-empire/#comments</comments>
		<pubDate>Tue, 21 Sep 2010 07:03:31 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=277</guid>
		<description><![CDATA[This week on Herding Code, it’s story time. Have you ever fallen victim to a software glitch?&#160; Are you frustrated by those green screens which are still running social security, the IRS and the DMV?&#160; Ever dealt with a medical database? Or maybe you owned a Zune on December 31, 2008? If so, you’ll want [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, it’s story time. Have you ever fallen victim to a software glitch?&#160; Are you frustrated by those green screens which are still running social security, the IRS and the DMV?&#160; Ever dealt with a medical database? Or maybe you owned a Zune on December 31, 2008? If so, you’ll want [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/XBSslZXyVhQ" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-93-computer-errors-home-media-and-the-fall-of-the-roman-empire/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/Su7CRtaunUs/HerdingCode-0093-Computer-Errors--Home-Media--and-The-Fall-of-The-Roman-Empire.mp3" fileSize="45592411" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, it’s story time. Have you ever fallen victim to a software glitch?&amp;#160; Are you frustrated by those green screens which are still running social security, the IRS and the DMV?&amp;#160; Ever dealt with a medical database? Or maybe </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, it’s story time. Have you ever fallen victim to a software glitch?&amp;#160; Are you frustrated by those green screens which are still running social security, the IRS and the DMV?&amp;#160; Ever dealt with a medical database? Or maybe you owned a Zune on December 31, 2008? If so, you’ll want [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-93-computer-errors-home-media-and-the-fall-of-the-roman-empire/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/Su7CRtaunUs/HerdingCode-0093-Computer-Errors--Home-Media--and-The-Fall-of-The-Roman-Empire.mp3" length="45592411" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0093-Computer-Errors--Home-Media--and-The-Fall-of-The-Roman-Empire.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 92: Dru Sellers and Rob Reynolds on Nu</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/eK_j57zZInM/</link>
		<comments>http://herdingcode.com/herding-code-92-dru-sellers-and-rob-reynolds-on-nu/#comments</comments>
		<pubDate>Fri, 27 Aug 2010 01:57:15 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=272</guid>
		<description><![CDATA[This week on Herding Code, Kevin, Jon and Scott K speak with Dru Sellers and Rob Reynolds about Nu, a  .NET package management system designed to solve your open source distribution/consumption issues. The guys discuss how package management is handled in other communities, namely Ruby, and how the .NET world can benefit from these same [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, Kevin, Jon and Scott K speak with Dru Sellers and Rob Reynolds about Nu, a  .NET package management system designed to solve your open source distribution/consumption issues. The guys discuss how package management is handled in other communities, namely Ruby, and how the .NET world can benefit from these same [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/eK_j57zZInM" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-92-dru-sellers-and-rob-reynolds-on-nu/feed/</wfw:commentRss>
		<slash:comments>10</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/Flig-d5Xnis/HerdingCode-0092-Dru-Sellers-and-Rob-Reynolds-on-Nu.mp3" fileSize="33903635" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, Kevin, Jon and Scott K speak with Dru Sellers and Rob Reynolds about Nu, a  .NET package management system designed to solve your open source distribution/consumption issues. The guys discuss how package management is handled in</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, Kevin, Jon and Scott K speak with Dru Sellers and Rob Reynolds about Nu, a  .NET package management system designed to solve your open source distribution/consumption issues. The guys discuss how package management is handled in other communities, namely Ruby, and how the .NET world can benefit from these same [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-92-dru-sellers-and-rob-reynolds-on-nu/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/Flig-d5Xnis/HerdingCode-0092-Dru-Sellers-and-Rob-Reynolds-on-Nu.mp3" length="33903635" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0092-Dru-Sellers-and-Rob-Reynolds-on-Nu.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 91: Listener-Powered Lightning Round</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/lkTMGjOmAFA/</link>
		<comments>http://herdingcode.com/herding-code-91-listener-powered-lightning-round/#comments</comments>
		<pubDate>Thu, 19 Aug 2010 18:18:24 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=269</guid>
		<description><![CDATA[This week on Herding Code, K Scott, Jon, Kevin, and Scott K field your questions. That&#8217;s right – it’s a Listener-Powered Lightning Round! Whether you were interested in their opinions on Microsoft LightSwitch, energy drinks or how the current economic downturn affects quality and craftsmanship, this week’s conversation is being directed by you! Thanks, listeners, [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, K Scott, Jon, Kevin, and Scott K field your questions. That&#8217;s right – it’s a Listener-Powered Lightning Round! Whether you were interested in their opinions on Microsoft LightSwitch, energy drinks or how the current economic downturn affects quality and craftsmanship, this week’s conversation is being directed by you! Thanks, listeners, [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/lkTMGjOmAFA" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-91-listener-powered-lightning-round/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/I-BVG5Ra7uk/HerdingCode-0091-Listener-powered-Lightning-Round.mp3" fileSize="37731753" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, K Scott, Jon, Kevin, and Scott K field your questions. That&amp;#8217;s right – it’s a Listener-Powered Lightning Round! Whether you were interested in their opinions on Microsoft LightSwitch, energy drinks or how the current econom</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, K Scott, Jon, Kevin, and Scott K field your questions. That&amp;#8217;s right – it’s a Listener-Powered Lightning Round! Whether you were interested in their opinions on Microsoft LightSwitch, energy drinks or how the current economic downturn affects quality and craftsmanship, this week’s conversation is being directed by you! Thanks, listeners, [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-91-listener-powered-lightning-round/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/I-BVG5Ra7uk/HerdingCode-0091-Listener-powered-Lightning-Round.mp3" length="37731753" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0091-Listener-powered-Lightning-Round.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 90: Sara Chipps on Girl Develop IT and Girls Developing Software</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/fSl7j3XGQVU/</link>
		<comments>http://herdingcode.com/herding-code-90-sara-chipps-on-girl-develop-it-and-girls-developing-software/#comments</comments>
		<pubDate>Thu, 12 Aug 2010 20:09:40 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=266</guid>
		<description><![CDATA[This week on Herding Code, the boys talk with Sara Chipps about Girl Develop IT, a comfortable place where women can learn at their own pace and not be afraid to ask &#34;stupid questions.&#34; Listen in as Sara talks about repairing the wide gender gap in development through her series of classes which help women [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, the boys talk with Sara Chipps about Girl Develop IT, a comfortable place where women can learn at their own pace and not be afraid to ask &quot;stupid questions.&quot; Listen in as Sara talks about repairing the wide gender gap in development through her series of classes which help women [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/fSl7j3XGQVU" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-90-sara-chipps-on-girl-develop-it-and-girls-developing-software/feed/</wfw:commentRss>
		<slash:comments>13</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/SqYozYIWFxg/HerdingCode-0090-Sara-Chipps-on-GirlDevelopIt-and-Girls-Developing-Software.mp3" fileSize="33580649" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the boys talk with Sara Chipps about Girl Develop IT, a comfortable place where women can learn at their own pace and not be afraid to ask &amp;#34;stupid questions.&amp;#34; Listen in as Sara talks about repairing the wide gender gap i</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the boys talk with Sara Chipps about Girl Develop IT, a comfortable place where women can learn at their own pace and not be afraid to ask &amp;#34;stupid questions.&amp;#34; Listen in as Sara talks about repairing the wide gender gap in development through her series of classes which help women [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-90-sara-chipps-on-girl-develop-it-and-girls-developing-software/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/SqYozYIWFxg/HerdingCode-0090-Sara-Chipps-on-GirlDevelopIt-and-Girls-Developing-Software.mp3" length="33580649" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0090-Sara-Chipps-on-GirlDevelopIt-and-Girls-Developing-Software.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 89: Vaidy Gopalakrishnan on IIS Developer Express</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/vk6rV_cK-3s/</link>
		<comments>http://herdingcode.com/herding-code-89-vaidy-gopalakrishnan-on-iis-developer-express/#comments</comments>
		<pubDate>Thu, 05 Aug 2010 05:04:17 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=265</guid>
		<description><![CDATA[This week on Herding Code, the guys talk with Vaidy Gopalakrishnan about IIS Developer Express. The show kicks off by explaining the IIS Developer Express name.&#160; Why not just IIS Express? Vaidy provides an overview of IIS Developer Express and explains it is a lightweight, self-contained version of IIS for web developers.&#160;&#160; Vaidy speaks about [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, the guys talk with Vaidy Gopalakrishnan about IIS Developer Express. The show kicks off by explaining the IIS Developer Express name.&#160; Why not just IIS Express? Vaidy provides an overview of IIS Developer Express and explains it is a lightweight, self-contained version of IIS for web developers.&#160;&#160; Vaidy speaks about [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/vk6rV_cK-3s" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-89-vaidy-gopalakrishnan-on-iis-developer-express/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/ZGgQFhKUABY/HerdingCode-0089-Vaidy%20Gopalakrishnan-on-IIS-Developer-Express.mp3" fileSize="26252653" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk with Vaidy Gopalakrishnan about IIS Developer Express. The show kicks off by explaining the IIS Developer Express name.&amp;#160; Why not just IIS Express? Vaidy provides an overview of IIS Developer Express and explai</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk with Vaidy Gopalakrishnan about IIS Developer Express. The show kicks off by explaining the IIS Developer Express name.&amp;#160; Why not just IIS Express? Vaidy provides an overview of IIS Developer Express and explains it is a lightweight, self-contained version of IIS for web developers.&amp;#160;&amp;#160; Vaidy speaks about [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-89-vaidy-gopalakrishnan-on-iis-developer-express/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/ZGgQFhKUABY/HerdingCode-0089-Vaidy%20Gopalakrishnan-on-IIS-Developer-Express.mp3" length="26252653" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0089-Vaidy%20Gopalakrishnan-on-IIS-Developer-Express.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 88: Julie Lerman on Entity Framework 4</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/8RiNnBUdyFo/</link>
		<comments>http://herdingcode.com/herding-code-88-julie-lerman-on-entity-framework-4/#comments</comments>
		<pubDate>Wed, 21 Jul 2010 00:26:42 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=264</guid>
		<description><![CDATA[This week on Herding Code, the guys talk with Microsoft MVP, MSDN Magazine columnist and Programming Entity Framework author Julie Lerman about what’s new in Entity Framework 4.&#160; The show begins with Julie providing a broad look at the new features and improvements around the EF designer, the run-time, POCO support and disconnected entities. Julie [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, the guys talk with Microsoft MVP, MSDN Magazine columnist and Programming Entity Framework author Julie Lerman about what’s new in Entity Framework 4.&#160; The show begins with Julie providing a broad look at the new features and improvements around the EF designer, the run-time, POCO support and disconnected entities. Julie [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/8RiNnBUdyFo" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-88-julie-lerman-on-entity-framework-4/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/T31KlvEmL_o/HerdingCode-0088-Julie-Lerman-on-Entity-Framework-4.mp3" fileSize="63274530" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk with Microsoft MVP, MSDN Magazine columnist and Programming Entity Framework author Julie Lerman about what’s new in Entity Framework 4.&amp;#160; The show begins with Julie providing a broad look at the new features a</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk with Microsoft MVP, MSDN Magazine columnist and Programming Entity Framework author Julie Lerman about what’s new in Entity Framework 4.&amp;#160; The show begins with Julie providing a broad look at the new features and improvements around the EF designer, the run-time, POCO support and disconnected entities. Julie [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-88-julie-lerman-on-entity-framework-4/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/T31KlvEmL_o/HerdingCode-0088-Julie-Lerman-on-Entity-Framework-4.mp3" length="63274530" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0088-Julie-Lerman-on-Entity-Framework-4.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 87: Jeff Atwood on Area 51 and Stack Overflow</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/P0W5fig8mv4/</link>
		<comments>http://herdingcode.com/herding-code-87-jeff-atwood-on-area-51-and-stack-overflow/#comments</comments>
		<pubDate>Thu, 08 Jul 2010 22:56:55 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=263</guid>
		<description><![CDATA[This week on Herding Code, the guys talk with Jeff Atwood about his new Area 51 venture, the running of Stack Overflow, the community of Q &#38; A sites, and memories of the glockenspiel. Jeff walks us through the genesis of Stack Overflow and how it begot Server Fault, Super User, Stack Exchange and now [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, the guys talk with Jeff Atwood about his new Area 51 venture, the running of Stack Overflow, the community of Q &amp; A sites, and memories of the glockenspiel. Jeff walks us through the genesis of Stack Overflow and how it begot Server Fault, Super User, Stack Exchange and now [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/P0W5fig8mv4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-87-jeff-atwood-on-area-51-and-stack-overflow/feed/</wfw:commentRss>
		<slash:comments>11</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/JnQutMoNcDg/HerdingCode-0087-Jeff-Atwood-on-Area-51-and-Stack-Overflow.mp3" fileSize="50575129" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk with Jeff Atwood about his new Area 51 venture, the running of Stack Overflow, the community of Q &amp;#38; A sites, and memories of the glockenspiel. Jeff walks us through the genesis of Stack Overflow and how it bego</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk with Jeff Atwood about his new Area 51 venture, the running of Stack Overflow, the community of Q &amp;#38; A sites, and memories of the glockenspiel. Jeff walks us through the genesis of Stack Overflow and how it begot Server Fault, Super User, Stack Exchange and now [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-87-jeff-atwood-on-area-51-and-stack-overflow/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/JnQutMoNcDg/HerdingCode-0087-Jeff-Atwood-on-Area-51-and-Stack-Overflow.mp3" length="50575129" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0087-Jeff-Atwood-on-Area-51-and-Stack-Overflow.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 86: Saqib Shaikh on Accessibility and Developing with Limited Sight</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/cdqnES34q-w/</link>
		<comments>http://herdingcode.com/herding-code-86-saqib-shaikh-on-accessibility-and-developing-with-limited-sight/#comments</comments>
		<pubDate>Sun, 27 Jun 2010 12:12:14 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=258</guid>
		<description><![CDATA[While at Web Camps London, Jon talks to Saqib Shaikh about how he&#8217;s able to develop with limited sight and what developers can do to make our applications more accessible. Saqib talks about his role on the Bing Team, data mining and deep links. Jon and Saqib talk about solving problems with a little help [&#8230;]]]></description>
				<content:encoded><![CDATA[While at Web Camps London, Jon talks to Saqib Shaikh about how he&#8217;s able to develop with limited sight and what developers can do to make our applications more accessible. Saqib talks about his role on the Bing Team, data mining and deep links. Jon and Saqib talk about solving problems with a little help [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/cdqnES34q-w" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-86-saqib-shaikh-on-accessibility-and-developing-with-limited-sight/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/nCycdl4kak0/HerdingCode-0086-Saqib-Shaikh-on-Accessibility-and-Developing-With-Limited-Sight.mp3" fileSize="9483796" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>While at Web Camps London, Jon talks to Saqib Shaikh about how he&amp;#8217;s able to develop with limited sight and what developers can do to make our applications more accessible. Saqib talks about his role on the Bing Team, data mining and deep links. Jon </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>While at Web Camps London, Jon talks to Saqib Shaikh about how he&amp;#8217;s able to develop with limited sight and what developers can do to make our applications more accessible. Saqib talks about his role on the Bing Team, data mining and deep links. Jon and Saqib talk about solving problems with a little help [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-86-saqib-shaikh-on-accessibility-and-developing-with-limited-sight/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/nCycdl4kak0/HerdingCode-0086-Saqib-Shaikh-on-Accessibility-and-Developing-With-Limited-Sight.mp3" length="9483796" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0086-Saqib-Shaikh-on-Accessibility-and-Developing-With-Limited-Sight.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 85: Clint Nelsen on Startup Weekend</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/oGaQTX4JeBU/</link>
		<comments>http://herdingcode.com/herding-code-85-clint-nelsen-on-startup-weekend/#comments</comments>
		<pubDate>Sun, 27 Jun 2010 12:11:13 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=257</guid>
		<description><![CDATA[While at Web Camps London, Jon grabs a quick 15 minute interview with Clint Nelsen to talk about Startup Weekend . Clint gives the elevator pitch and a brief history of Startup Weekend. Jon talks about how they are incorporating Startup Weekend into Web Camps. The guys talk about project implementation. Clint talks about Startup [&#8230;]]]></description>
				<content:encoded><![CDATA[While at Web Camps London, Jon grabs a quick 15 minute interview with Clint Nelsen to talk about Startup Weekend . Clint gives the elevator pitch and a brief history of Startup Weekend. Jon talks about how they are incorporating Startup Weekend into Web Camps. The guys talk about project implementation. Clint talks about Startup [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/oGaQTX4JeBU" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-85-clint-nelsen-on-startup-weekend/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/yPkY236uRQw/HerdingCode-0085-Clint-Nelsen-on-Startup-Weekend.mp3" fileSize="9914230" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>While at Web Camps London, Jon grabs a quick 15 minute interview with Clint Nelsen to talk about Startup Weekend . Clint gives the elevator pitch and a brief history of Startup Weekend. Jon talks about how they are incorporating Startup Weekend into Web C</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>While at Web Camps London, Jon grabs a quick 15 minute interview with Clint Nelsen to talk about Startup Weekend . Clint gives the elevator pitch and a brief history of Startup Weekend. Jon talks about how they are incorporating Startup Weekend into Web Camps. The guys talk about project implementation. Clint talks about Startup [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-85-clint-nelsen-on-startup-weekend/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/yPkY236uRQw/HerdingCode-0085-Clint-Nelsen-on-Startup-Weekend.mp3" length="9914230" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0085-Clint-Nelsen-on-Startup-Weekend.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 84: Ex-Microsoft Developer Panel with Mike Moore, Jeff Cohen, and Scott Bellware</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/-UVUMCpgDmQ/</link>
		<comments>http://herdingcode.com/herding-code-84-ex-microsoft-developer-panel-with-mike-moore-jeff-cohen-and-scott-bellware/#comments</comments>
		<pubDate>Sun, 27 Jun 2010 12:10:48 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>
		<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=256</guid>
		<description><![CDATA[This week on Herding Code, the guys talk to Jeff Cohen, Mike Moore, and Scott Bellware about why and how they&#8217;ve moved away from Microsoft development and into the Ruby community. K Scott asks the guests about why they switched. Jeff talks about how his switch from desktop development on Windows to Rails development started [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, the guys talk to Jeff Cohen, Mike Moore, and Scott Bellware about why and how they&#8217;ve moved away from Microsoft development and into the Ruby community. K Scott asks the guests about why they switched. Jeff talks about how his switch from desktop development on Windows to Rails development started [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/-UVUMCpgDmQ" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-84-ex-microsoft-developer-panel-with-mike-moore-jeff-cohen-and-scott-bellware/feed/</wfw:commentRss>
		<slash:comments>37</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/_yDMUbPX4yw/HerdingCode-0084-Ex-Microsoft-Developer-Panel-with-Mike-Moore-Jeff-Cohen-and-Scott-Bellware.mp3" fileSize="47941908" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk to Jeff Cohen, Mike Moore, and Scott Bellware about why and how they&amp;#8217;ve moved away from Microsoft development and into the Ruby community. K Scott asks the guests about why they switched. Jeff talks about how</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk to Jeff Cohen, Mike Moore, and Scott Bellware about why and how they&amp;#8217;ve moved away from Microsoft development and into the Ruby community. K Scott asks the guests about why they switched. Jeff talks about how his switch from desktop development on Windows to Rails development started [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-84-ex-microsoft-developer-panel-with-mike-moore-jeff-cohen-and-scott-bellware/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/_yDMUbPX4yw/HerdingCode-0084-Ex-Microsoft-Developer-Panel-with-Mike-Moore-Jeff-Cohen-and-Scott-Bellware.mp3" length="47941908" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0084-Ex-Microsoft-Developer-Panel-with-Mike-Moore-Jeff-Cohen-and-Scott-Bellware.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 83: Ayende Rahien on RavenDB</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/pj0MCjCc0Yo/</link>
		<comments>http://herdingcode.com/herding-code-83-ayende-rahien-on-ravendb/#comments</comments>
		<pubDate>Sun, 13 Jun 2010 00:29:56 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=255</guid>
		<description><![CDATA[This week on Herding Code, the guys talk with Ayende Rahien (a.k.a. Oren Eini) about RavenDB, a new Open Source (with a commercial option) document database for the .NET/Windows platform. The shows starts with a general definition of document databases.&#160; Ayende then contrasts RavenDB with two other popular document databases, Mongo and CouchDB, and comments [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, the guys talk with Ayende Rahien (a.k.a. Oren Eini) about RavenDB, a new Open Source (with a commercial option) document database for the .NET/Windows platform. The shows starts with a general definition of document databases.&#160; Ayende then contrasts RavenDB with two other popular document databases, Mongo and CouchDB, and comments [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/pj0MCjCc0Yo" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-83-ayende-rahien-on-ravendb/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/OttBPAO76Wo/HerdingCode-0083-Ayende-Rahien-on-RavenDB.mp3" fileSize="48173920" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys talk with Ayende Rahien (a.k.a. Oren Eini) about RavenDB, a new Open Source (with a commercial option) document database for the .NET/Windows platform. The shows starts with a general definition of document databases.&amp;#</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys talk with Ayende Rahien (a.k.a. Oren Eini) about RavenDB, a new Open Source (with a commercial option) document database for the .NET/Windows platform. The shows starts with a general definition of document databases.&amp;#160; Ayende then contrasts RavenDB with two other popular document databases, Mongo and CouchDB, and comments [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-83-ayende-rahien-on-ravendb/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/OttBPAO76Wo/HerdingCode-0083-Ayende-Rahien-on-RavenDB.mp3" length="48173920" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0083-Ayende-Rahien-on-RavenDB.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 82: Cory Foy and Will Green Compare .NET and Ruby Development</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/LLfSTXTMy-w/</link>
		<comments>http://herdingcode.com/herding-code-82-cory-foy-and-will-green-compare-net-and-ruby-development/#comments</comments>
		<pubDate>Sun, 06 Jun 2010 22:37:59 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=254</guid>
		<description><![CDATA[This week on Herding Code, Cory Foy and Will Green join the guys to discuss general differences between .NET and Ruby development approaches. Is the grass always greener on the other side? Listen in on this week&#8217;s talk about how languages, frameworks, tools and cultures shape the way we implement .NET and Ruby solutions and [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, Cory Foy and Will Green join the guys to discuss general differences between .NET and Ruby development approaches. Is the grass always greener on the other side? Listen in on this week&#8217;s talk about how languages, frameworks, tools and cultures shape the way we implement .NET and Ruby solutions and [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/LLfSTXTMy-w" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-82-cory-foy-and-will-green-compare-net-and-ruby-development/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/Y9ui2vh2UXo/HerdingCode-0082-Cory-Foy-and-Will-Green-Compare-NET-and-Ruby-Development.mp3" fileSize="38479513" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, Cory Foy and Will Green join the guys to discuss general differences between .NET and Ruby development approaches. Is the grass always greener on the other side? Listen in on this week&amp;#8217;s talk about how languages, framework</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, Cory Foy and Will Green join the guys to discuss general differences between .NET and Ruby development approaches. Is the grass always greener on the other side? Listen in on this week&amp;#8217;s talk about how languages, frameworks, tools and cultures shape the way we implement .NET and Ruby solutions and [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-82-cory-foy-and-will-green-compare-net-and-ruby-development/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/Y9ui2vh2UXo/HerdingCode-0082-Cory-Foy-and-Will-Green-Compare-NET-and-Ruby-Development.mp3" length="38479513" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0082-Cory-Foy-and-Will-Green-Compare-NET-and-Ruby-Development.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 81: Simplicity, balance, and focus in teaching software development</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/Bp5SSBh_IhQ/</link>
		<comments>http://herdingcode.com/herding-code-81-simplicity-balance-and-focus-in-teaching-software-development/#comments</comments>
		<pubDate>Tue, 25 May 2010 07:38:19 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=253</guid>
		<description><![CDATA[This week on Herding Code, the guys discuss compare notes on how to teach software development topics. Is hands-on instruction key? How much should you simplify to focus on mechanics? How do you teach, and how do you like to learn? Jon talks about his impressions on the effectiveness of hands-on learning at Web Camp [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, the guys discuss compare notes on how to teach software development topics. Is hands-on instruction key? How much should you simplify to focus on mechanics? How do you teach, and how do you like to learn? Jon talks about his impressions on the effectiveness of hands-on learning at Web Camp [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/Bp5SSBh_IhQ" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-81-simplicity-balance-and-focus-in-teaching-software-development/feed/</wfw:commentRss>
		<slash:comments>14</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/B9DjZpIj71Y/HerdingCode-0081-Simplicity-balance-and-focus-in-teaching-software-development.mp3" fileSize="23763241" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys discuss compare notes on how to teach software development topics. Is hands-on instruction key? How much should you simplify to focus on mechanics? How do you teach, and how do you like to learn? Jon talks about his imp</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys discuss compare notes on how to teach software development topics. Is hands-on instruction key? How much should you simplify to focus on mechanics? How do you teach, and how do you like to learn? Jon talks about his impressions on the effectiveness of hands-on learning at Web Camp [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-81-simplicity-balance-and-focus-in-teaching-software-development/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/B9DjZpIj71Y/HerdingCode-0081-Simplicity-balance-and-focus-in-teaching-software-development.mp3" length="23763241" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0081-Simplicity-balance-and-focus-in-teaching-software-development.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 80: RxJS with Jeffrey van Gogh and Matt Podwysocki</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/UbTaR9AF5xU/</link>
		<comments>http://herdingcode.com/herding-code-80-rxjs-with-jeffrey-van-gogh-and-matt-podwysocki/#comments</comments>
		<pubDate>Wed, 19 May 2010 01:10:27 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=252</guid>
		<description><![CDATA[This week on Herding Code, the guys speak with Jeffrey van Gogh and Matt Podwysocki about the Reactive Extensions for Javascript. Matt talks about how he&#8217;s been involved with RxJS. Jeffrey talks about how RxJS and Reactive Extensions came out of the the Volta project. Matt talks about how RxJS simplifies the callback model in [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, the guys speak with Jeffrey van Gogh and Matt Podwysocki about the Reactive Extensions for Javascript. Matt talks about how he&#8217;s been involved with RxJS. Jeffrey talks about how RxJS and Reactive Extensions came out of the the Volta project. Matt talks about how RxJS simplifies the callback model in [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/UbTaR9AF5xU" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-80-rxjs-with-jeffrey-van-gogh-and-matt-podwysocki/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/u6FQub34hm8/HerdingCode-0080-RxJS-with-Jeffrey-van-Gogh-and-Matt-Podwysocki.mp3" fileSize="39902727" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys speak with Jeffrey van Gogh and Matt Podwysocki about the Reactive Extensions for Javascript. Matt talks about how he&amp;#8217;s been involved with RxJS. Jeffrey talks about how RxJS and Reactive Extensions came out of the</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys speak with Jeffrey van Gogh and Matt Podwysocki about the Reactive Extensions for Javascript. Matt talks about how he&amp;#8217;s been involved with RxJS. Jeffrey talks about how RxJS and Reactive Extensions came out of the the Volta project. Matt talks about how RxJS simplifies the callback model in [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-80-rxjs-with-jeffrey-van-gogh-and-matt-podwysocki/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/u6FQub34hm8/HerdingCode-0080-RxJS-with-Jeffrey-van-Gogh-and-Matt-Podwysocki.mp3" length="39902727" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0080-RxJS-with-Jeffrey-van-Gogh-and-Matt-Podwysocki.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 79: JSConf Recap with Chris Williams, Rey Bango and Matt Podwysocki</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/y_zJCFXODjs/</link>
		<comments>http://herdingcode.com/herding-code-79-jsconf-recap-with-chris-williams-rey-bango-and-matt-podwysocki/#comments</comments>
		<pubDate>Sun, 02 May 2010 07:47:12 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=251</guid>
		<description><![CDATA[This week on Herding Code, the guys speak with Chris Williams, Rey Bango and Matt Podwysocki about this year&#8217;s JSConf. Chris begins the show with a conference overview which will leave you chomping at the bit for JSConf 2011 registration to open. Hackers&#8217; Lounge. Multiple tracks. One killer speaker list. Hyper-caffeinated, hyper-intoxicated privates! Salmagundi. And [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, the guys speak with Chris Williams, Rey Bango and Matt Podwysocki about this year&#8217;s JSConf. Chris begins the show with a conference overview which will leave you chomping at the bit for JSConf 2011 registration to open. Hackers&#8217; Lounge. Multiple tracks. One killer speaker list. Hyper-caffeinated, hyper-intoxicated privates! Salmagundi. And [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/y_zJCFXODjs" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-79-jsconf-recap-with-chris-williams-rey-bango-and-matt-podwysocki/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/UuqsnncRfpo/HerdingCode-0079-JSConf-Recap-with-Chris-Williams-Rey-Bango-and-Matt-Podwysocki.mp3" fileSize="45535681" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the guys speak with Chris Williams, Rey Bango and Matt Podwysocki about this year&amp;#8217;s JSConf. Chris begins the show with a conference overview which will leave you chomping at the bit for JSConf 2011 registration to open. Ha</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the guys speak with Chris Williams, Rey Bango and Matt Podwysocki about this year&amp;#8217;s JSConf. Chris begins the show with a conference overview which will leave you chomping at the bit for JSConf 2011 registration to open. Hackers&amp;#8217; Lounge. Multiple tracks. One killer speaker list. Hyper-caffeinated, hyper-intoxicated privates! Salmagundi. And [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-79-jsconf-recap-with-chris-williams-rey-bango-and-matt-podwysocki/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/UuqsnncRfpo/HerdingCode-0079-JSConf-Recap-with-Chris-Williams-Rey-Bango-and-Matt-Podwysocki.mp3" length="45535681" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0079-JSConf-Recap-with-Chris-Williams-Rey-Bango-and-Matt-Podwysocki.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 78: Ruby on Rails, View Engines, Web Security, Section 3.3.1 and Visual Studio 2010 with Rob Conery</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/lLQSXscKL1E/</link>
		<comments>http://herdingcode.com/herding-code-78-ruby-on-rails-view-engines-web-security-section-3-3-1-and-visual-studio-2010-with-rob-conery/#comments</comments>
		<pubDate>Tue, 20 Apr 2010 21:36:37 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=247</guid>
		<description><![CDATA[This week on Herding Code, Jon, Kevin, Scott K and Rob Conery discuss Ruby on Rails, using dynamic languages to write views, web security, advanced javascript techniques, recent Twitter news, Section 3.3.1 and the official release of Visual Studio 2010. The show begins with talk of Kevin&#8217;s recent dabbling into Ruby on Rails. The guys [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, Jon, Kevin, Scott K and Rob Conery discuss Ruby on Rails, using dynamic languages to write views, web security, advanced javascript techniques, recent Twitter news, Section 3.3.1 and the official release of Visual Studio 2010. The show begins with talk of Kevin&#8217;s recent dabbling into Ruby on Rails. The guys [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/lLQSXscKL1E" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-78-ruby-on-rails-view-engines-web-security-section-3-3-1-and-visual-studio-2010-with-rob-conery/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/ZB-NmWmpXtw/HerdingCode-0078-Ruby-on-Rails-View-Engines-Web-Security-etc-with-Rob-Conery.mp3" fileSize="46136764" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, Jon, Kevin, Scott K and Rob Conery discuss Ruby on Rails, using dynamic languages to write views, web security, advanced javascript techniques, recent Twitter news, Section 3.3.1 and the official release of Visual Studio 2010. T</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, Jon, Kevin, Scott K and Rob Conery discuss Ruby on Rails, using dynamic languages to write views, web security, advanced javascript techniques, recent Twitter news, Section 3.3.1 and the official release of Visual Studio 2010. The show begins with talk of Kevin&amp;#8217;s recent dabbling into Ruby on Rails. The guys [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-78-ruby-on-rails-view-engines-web-security-section-3-3-1-and-visual-studio-2010-with-rob-conery/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/ZB-NmWmpXtw/HerdingCode-0078-Ruby-on-Rails-View-Engines-Web-Security-etc-with-Rob-Conery.mp3" length="46136764" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0078-Ruby-on-Rails-View-Engines-Web-Security-etc-with-Rob-Conery.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 77: Eric Hexter on MvcConf, C4MVC, and MvcContrib</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/wVSMe035ltM/</link>
		<comments>http://herdingcode.com/herding-code-77-eric-hexter-on-mvcconf-c4mvc-and-mvccontrib/#comments</comments>
		<pubDate>Mon, 05 Apr 2010 18:12:36 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=245</guid>
		<description><![CDATA[This week on Herding Code, Jon, Kevin and Scott K discuss MvcConf, C4MVC and MvcContrib with, open source and community extraordinaire, Eric Hexter.&#160; Eric talks about his role as consultant and Director of Open Source at Headspring. The guys walk through Hexter&#8217;s impressive resume.&#160;&#160; Eric is the co-founder of MVCContrib, he established the Community for [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, Jon, Kevin and Scott K discuss MvcConf, C4MVC and MvcContrib with, open source and community extraordinaire, Eric Hexter.&#160; Eric talks about his role as consultant and Director of Open Source at Headspring. The guys walk through Hexter&#8217;s impressive resume.&#160;&#160; Eric is the co-founder of MVCContrib, he established the Community for [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/wVSMe035ltM" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-77-eric-hexter-on-mvcconf-c4mvc-and-mvccontrib/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/w2k4tbQbCe0/HerdingCode-0077-Eric-Hexter-on-MvcConf-C4MVC-and-MvcContrib.mp3" fileSize="31852700" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, Jon, Kevin and Scott K discuss MvcConf, C4MVC and MvcContrib with, open source and community extraordinaire, Eric Hexter.&amp;#160; Eric talks about his role as consultant and Director of Open Source at Headspring. The guys walk thr</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, Jon, Kevin and Scott K discuss MvcConf, C4MVC and MvcContrib with, open source and community extraordinaire, Eric Hexter.&amp;#160; Eric talks about his role as consultant and Director of Open Source at Headspring. The guys walk through Hexter&amp;#8217;s impressive resume.&amp;#160;&amp;#160; Eric is the co-founder of MVCContrib, he established the Community for [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-77-eric-hexter-on-mvcconf-c4mvc-and-mvccontrib/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/w2k4tbQbCe0/HerdingCode-0077-Eric-Hexter-on-MvcConf-C4MVC-and-MvcContrib.mp3" length="31852700" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0077-Eric-Hexter-on-MvcConf-C4MVC-and-MvcContrib.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 76: John Sheehan on RestSharp</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/RFMehM88aQk/</link>
		<comments>http://herdingcode.com/herding-code-76-john-sheehan-on-restsharp/#comments</comments>
		<pubDate>Fri, 02 Apr 2010 03:43:57 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=244</guid>
		<description><![CDATA[This week on Herding Code, John Sheehan joins the cast for a conversation about his open source project, RestSharp. The gang dives into REST and .NET open source. Makes sense, right? And the show wraps with talk of OData and a MIX10-inspired Lightning Round. John talks about his exciting new evangelist job at Twilio. Twillo [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, John Sheehan joins the cast for a conversation about his open source project, RestSharp. The gang dives into REST and .NET open source. Makes sense, right? And the show wraps with talk of OData and a MIX10-inspired Lightning Round. John talks about his exciting new evangelist job at Twilio. Twillo [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/RFMehM88aQk" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-76-john-sheehan-on-restsharp/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/Y7LYBMOjs2w/HerdingCode-0076-John-Sheehan-on-RestSharp.mp3" fileSize="41983485" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, John Sheehan joins the cast for a conversation about his open source project, RestSharp. The gang dives into REST and .NET open source. Makes sense, right? And the show wraps with talk of OData and a MIX10-inspired Lightning Rou</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, John Sheehan joins the cast for a conversation about his open source project, RestSharp. The gang dives into REST and .NET open source. Makes sense, right? And the show wraps with talk of OData and a MIX10-inspired Lightning Round. John talks about his exciting new evangelist job at Twilio. Twillo [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-76-john-sheehan-on-restsharp/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/Y7LYBMOjs2w/HerdingCode-0076-John-Sheehan-on-RestSharp.mp3" length="41983485" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0076-John-Sheehan-on-RestSharp.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 75: Barry Dorrans on Developer Security</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/2UMLXG0VcjY/</link>
		<comments>http://herdingcode.com/herding-code-75-barry-dorrans-on-developer-security/#comments</comments>
		<pubDate>Fri, 05 Mar 2010 23:08:49 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=243</guid>
		<description><![CDATA[This week on Herding Code, Barry Dorrans educates, entertains, insults and scares us with his expert commentary on application security, threat modeling, analysis tools and common attacks.&#160; You&#8217;ve been waiting for this show.&#160; I just know it.&#160; Listen in as Barry talks security, pimps his new book, and comments on his new position at Microsoft, [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, Barry Dorrans educates, entertains, insults and scares us with his expert commentary on application security, threat modeling, analysis tools and common attacks.&#160; You&#8217;ve been waiting for this show.&#160; I just know it.&#160; Listen in as Barry talks security, pimps his new book, and comments on his new position at Microsoft, [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/2UMLXG0VcjY" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-75-barry-dorrans-on-developer-security/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/aif2D1RqN9c/HerdingCode-0075-Barry-Dorrans-on-Developer-Security.mp3" fileSize="44057465" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, Barry Dorrans educates, entertains, insults and scares us with his expert commentary on application security, threat modeling, analysis tools and common attacks.&amp;#160; You&amp;#8217;ve been waiting for this show.&amp;#160; I just know i</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, Barry Dorrans educates, entertains, insults and scares us with his expert commentary on application security, threat modeling, analysis tools and common attacks.&amp;#160; You&amp;#8217;ve been waiting for this show.&amp;#160; I just know it.&amp;#160; Listen in as Barry talks security, pimps his new book, and comments on his new position at Microsoft, [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-75-barry-dorrans-on-developer-security/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/aif2D1RqN9c/HerdingCode-0075-Barry-Dorrans-on-Developer-Security.mp3" length="44057465" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0075-Barry-Dorrans-on-Developer-Security.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 74: Javier Lozano on MVC Turbine and Composed Applications</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/PzzQm8ILN-s/</link>
		<comments>http://herdingcode.com/herding-code-74-javier-lozano-on-mvc-turbine-and-composed-applications/#comments</comments>
		<pubDate>Tue, 23 Feb 2010 01:27:48 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=240</guid>
		<description><![CDATA[This week on Herding Code, K Scott leads a conversation with ASP.NET Insider and MVP, Javier Lozano, about his open source project, MVC Turbine, and extensibility and composition with ASP.NET MVC. Javier provides a twitter-like overview of his open source project: &#8220;MVC Turbine helps you build modular applications on top of ASP.NET MVC and that&#8217;s [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, K Scott leads a conversation with ASP.NET Insider and MVP, Javier Lozano, about his open source project, MVC Turbine, and extensibility and composition with ASP.NET MVC. Javier provides a twitter-like overview of his open source project: &#8220;MVC Turbine helps you build modular applications on top of ASP.NET MVC and that&#8217;s [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/PzzQm8ILN-s" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-74-javier-lozano-on-mvc-turbine-and-composed-applications/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/5FjYpAob9_Q/HerdingCode-0074-Javier-Lozano-on-MVC-Turbine-and-Composed-Applications.mp3" fileSize="41875956" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, K Scott leads a conversation with ASP.NET Insider and MVP, Javier Lozano, about his open source project, MVC Turbine, and extensibility and composition with ASP.NET MVC. Javier provides a twitter-like overview of his open source</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, K Scott leads a conversation with ASP.NET Insider and MVP, Javier Lozano, about his open source project, MVC Turbine, and extensibility and composition with ASP.NET MVC. Javier provides a twitter-like overview of his open source project: &amp;#8220;MVC Turbine helps you build modular applications on top of ASP.NET MVC and that&amp;#8217;s [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-74-javier-lozano-on-mvc-turbine-and-composed-applications/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/5FjYpAob9_Q/HerdingCode-0074-Javier-Lozano-on-MVC-Turbine-and-Composed-Applications.mp3" length="41875956" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0074-Javier-Lozano-on-MVC-Turbine-and-Composed-Applications.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 73: Daniel Plaisted on Model-Based Testing in Action on the MEF Team</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/IaBJJ0KMrT8/</link>
		<comments>http://herdingcode.com/herding-code-73-daniel-plaisted-on-model-based-testing-in-action-on-the-mef-team/#comments</comments>
		<pubDate>Sun, 14 Feb 2010 21:02:57 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=239</guid>
		<description><![CDATA[This week on Herding Code, Jon leads a discussion with Daniel Plaisted about Model-Based Testing and the progressive practices of the MEF team. Daniel speaks of the primary development roles at Microsoft and how the MEF team addresses testing concerns. Guess what.&#160; Developers write tests, too. Daniel talks about Model-Based Testing and validation of transitions [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, Jon leads a discussion with Daniel Plaisted about Model-Based Testing and the progressive practices of the MEF team. Daniel speaks of the primary development roles at Microsoft and how the MEF team addresses testing concerns. Guess what.&#160; Developers write tests, too. Daniel talks about Model-Based Testing and validation of transitions [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/IaBJJ0KMrT8" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-73-daniel-plaisted-on-model-based-testing-in-action-on-the-mef-team/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/TLytmIRk4gs/HerdingCode-0073-Daniel-Plaisted-on-Model-Based-Testing-in-Action-on-the-MEF-Team.mp3" fileSize="25680243" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, Jon leads a discussion with Daniel Plaisted about Model-Based Testing and the progressive practices of the MEF team. Daniel speaks of the primary development roles at Microsoft and how the MEF team addresses testing concerns. Gu</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, Jon leads a discussion with Daniel Plaisted about Model-Based Testing and the progressive practices of the MEF team. Daniel speaks of the primary development roles at Microsoft and how the MEF team addresses testing concerns. Guess what.&amp;#160; Developers write tests, too. Daniel talks about Model-Based Testing and validation of transitions [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-73-daniel-plaisted-on-model-based-testing-in-action-on-the-mef-team/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/TLytmIRk4gs/HerdingCode-0073-Daniel-Plaisted-on-Model-Based-Testing-in-Action-on-the-MEF-Team.mp3" length="25680243" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0073-Daniel-Plaisted-on-Model-Based-Testing-in-Action-on-the-MEF-Team.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 72: Questioning Uncle Bob, Clojure Magic, Mercurial Support at Codeplex, Thoughts About the iPad and Handerpants</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/aAKxDUZNoYc/</link>
		<comments>http://herdingcode.com/herding-code-72-questioning-uncle-bob-clojure-magic-mercurial-support-at-codeplex-thoughts-about-the-ipad-and-handerpants/#comments</comments>
		<pubDate>Sun, 07 Feb 2010 01:26:33 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=238</guid>
		<description><![CDATA[This week on Herding Code, the gang discusses Uncle Bob&#8217;s self-titled blatherings about DI, IoC and Mocking, Clojure and polyglot programming, managed javascript, and recent support for Mercurial at Codeplex. The show finishes up with another K Scott Lightning Round with questions about the iPad and non-technical blog recommendations. Uncle Bob recently published two articles [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, the gang discusses Uncle Bob&#8217;s self-titled blatherings about DI, IoC and Mocking, Clojure and polyglot programming, managed javascript, and recent support for Mercurial at Codeplex. The show finishes up with another K Scott Lightning Round with questions about the iPad and non-technical blog recommendations. Uncle Bob recently published two articles [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/aAKxDUZNoYc" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-72-questioning-uncle-bob-clojure-magic-mercurial-support-at-codeplex-thoughts-about-the-ipad-and-handerpants/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/oAqM-2itUIo/HerdingCode-0072-Bob-Clojure-Mercurial-iPad-Handerpants.mp3" fileSize="33083011" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, the gang discusses Uncle Bob&amp;#8217;s self-titled blatherings about DI, IoC and Mocking, Clojure and polyglot programming, managed javascript, and recent support for Mercurial at Codeplex. The show finishes up with another K Scot</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, the gang discusses Uncle Bob&amp;#8217;s self-titled blatherings about DI, IoC and Mocking, Clojure and polyglot programming, managed javascript, and recent support for Mercurial at Codeplex. The show finishes up with another K Scott Lightning Round with questions about the iPad and non-technical blog recommendations. Uncle Bob recently published two articles [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-72-questioning-uncle-bob-clojure-magic-mercurial-support-at-codeplex-thoughts-about-the-ipad-and-handerpants/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/oAqM-2itUIo/HerdingCode-0072-Bob-Clojure-Mercurial-iPad-Handerpants.mp3" length="33083011" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0072-Bob-Clojure-Mercurial-iPad-Handerpants.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 71: James Avery and Rob Conery on NoSQL and a bunch of other stuff</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/g1WUidLa8CI/</link>
		<comments>http://herdingcode.com/herding-code-71-james-avery-and-rob-conery-on-nosql-and-a-bunch-of-other-stuff/#comments</comments>
		<pubDate>Mon, 01 Feb 2010 07:30:54 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>
		<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=234</guid>
		<description><![CDATA[This week on Herding Code, James Avery and Rob Conery join the cast in a lively discussion about NoSQL, TekPub, the new DotNetKicks and the technical debate du jour, ASP.NET Web Forms vs ASP.NET MVC. Kevin asks Rob and James to share their views on NoSQL and the use of object and document databases.&#160; James [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, James Avery and Rob Conery join the cast in a lively discussion about NoSQL, TekPub, the new DotNetKicks and the technical debate du jour, ASP.NET Web Forms vs ASP.NET MVC. Kevin asks Rob and James to share their views on NoSQL and the use of object and document databases.&#160; James [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/g1WUidLa8CI" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-71-james-avery-and-rob-conery-on-nosql-and-a-bunch-of-other-stuff/feed/</wfw:commentRss>
		<slash:comments>40</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/YSgA7AiP6UE/HerdingCode-0071-James-Avery-and-Rob-Conery-on-NoSQL-and-a-bunch-of-other-stuff.mp3" fileSize="47183318" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, James Avery and Rob Conery join the cast in a lively discussion about NoSQL, TekPub, the new DotNetKicks and the technical debate du jour, ASP.NET Web Forms vs ASP.NET MVC. Kevin asks Rob and James to share their views on NoSQL </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, James Avery and Rob Conery join the cast in a lively discussion about NoSQL, TekPub, the new DotNetKicks and the technical debate du jour, ASP.NET Web Forms vs ASP.NET MVC. Kevin asks Rob and James to share their views on NoSQL and the use of object and document databases.&amp;#160; James [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-71-james-avery-and-rob-conery-on-nosql-and-a-bunch-of-other-stuff/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/YSgA7AiP6UE/HerdingCode-0071-James-Avery-and-Rob-Conery-on-NoSQL-and-a-bunch-of-other-stuff.mp3" length="47183318" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0071-James-Avery-and-Rob-Conery-on-NoSQL-and-a-bunch-of-other-stuff.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 70: Sean Chambers on Migrations in .NET</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/rzDbWYxcdwA/</link>
		<comments>http://herdingcode.com/herding-code-70-sean-chambers-on-migrations-in-net/#comments</comments>
		<pubDate>Mon, 25 Jan 2010 07:06:30 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=233</guid>
		<description><![CDATA[This week on Herding Code, we talk to Sean Chambers about migrations in .NET with Fluent Migrator. Sean talks about how Fluent Migrator originated from Migrator.NET Sean discusses how the benefits of a semantic model in Fluent Migrator K Scott and Sean discuss how you&#8217;d start using Fluent Migrator in a project Sean talks about [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, we talk to Sean Chambers about migrations in .NET with Fluent Migrator. Sean talks about how Fluent Migrator originated from Migrator.NET Sean discusses how the benefits of a semantic model in Fluent Migrator K Scott and Sean discuss how you&#8217;d start using Fluent Migrator in a project Sean talks about [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/rzDbWYxcdwA" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-70-sean-chambers-on-migrations-in-net/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/U8Vm0PqmEcc/HerdingCode-0070-Sean-Chambers-on-Migrations-in-dotNET.mp3" fileSize="32928110" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, we talk to Sean Chambers about migrations in .NET with Fluent Migrator. Sean talks about how Fluent Migrator originated from Migrator.NET Sean discusses how the benefits of a semantic model in Fluent Migrator K Scott and Sean di</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, we talk to Sean Chambers about migrations in .NET with Fluent Migrator. Sean talks about how Fluent Migrator originated from Migrator.NET Sean discusses how the benefits of a semantic model in Fluent Migrator K Scott and Sean discuss how you&amp;#8217;d start using Fluent Migrator in a project Sean talks about [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-70-sean-chambers-on-migrations-in-net/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/U8Vm0PqmEcc/HerdingCode-0070-Sean-Chambers-on-Migrations-in-dotNET.mp3" length="32928110" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0070-Sean-Chambers-on-Migrations-in-dotNET.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 69: Scott Bellware on HTML Specialists</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/TsA3wgWwIeg/</link>
		<comments>http://herdingcode.com/herding-code-69-scott-bellware-on-html-specialists/#comments</comments>
		<pubDate>Fri, 22 Jan 2010 08:18:12 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=232</guid>
		<description><![CDATA[This week on Herding Code, Scott Bellware returns to talk about .&#160; Scott talks about the frustrations in working with &#8220;HTML Specialists&#8221; Scott discusses the team issues caused by specialists in a software team who aren&#8217;t in touch with the entire product development cycle The problem with handoffs: loss of workability Eventually, things turn to [&#8230;]]]></description>
				<content:encoded><![CDATA[This week on Herding Code, Scott Bellware returns to talk about .&#160; Scott talks about the frustrations in working with &#8220;HTML Specialists&#8221; Scott discusses the team issues caused by specialists in a software team who aren&#8217;t in touch with the entire product development cycle The problem with handoffs: loss of workability Eventually, things turn to [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/TsA3wgWwIeg" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-69-scott-bellware-on-html-specialists/feed/</wfw:commentRss>
		<slash:comments>13</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/g08SwOp2L7Y/HerdingCode-0069-Scott-Bellware-on-HTML-Specialists.mp3" fileSize="44080143" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week on Herding Code, Scott Bellware returns to talk about .&amp;#160; Scott talks about the frustrations in working with &amp;#8220;HTML Specialists&amp;#8221; Scott discusses the team issues caused by specialists in a software team who aren&amp;#8217;t in touch wi</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week on Herding Code, Scott Bellware returns to talk about .&amp;#160; Scott talks about the frustrations in working with &amp;#8220;HTML Specialists&amp;#8221; Scott discusses the team issues caused by specialists in a software team who aren&amp;#8217;t in touch with the entire product development cycle The problem with handoffs: loss of workability Eventually, things turn to [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-69-scott-bellware-on-html-specialists/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/g08SwOp2L7Y/HerdingCode-0069-Scott-Bellware-on-HTML-Specialists.mp3" length="44080143" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0069-Scott-Bellware-on-HTML-Specialists.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 68: New Year Shenanigans</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/nATT7nL-UIg/</link>
		<comments>http://herdingcode.com/herding-code-68-new-year-shenanigans/#comments</comments>
		<pubDate>Fri, 15 Jan 2010 05:40:54 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=231</guid>
		<description><![CDATA[In this episode of Herding Code, the gang talks about what happened last year and what they think will happen in the years to come.&#160; Oh, and K Scott brings us the first lightning round of 2010! How will the guys manage the show in 2010?&#160; Google Docs and listener requests? Are you bitter because [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode of Herding Code, the gang talks about what happened last year and what they think will happen in the years to come.&#160; Oh, and K Scott brings us the first lightning round of 2010! How will the guys manage the show in 2010?&#160; Google Docs and listener requests? Are you bitter because [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/nATT7nL-UIg" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-68-new-year-shenanigans/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/I40FSrRK8lM/HerdingCode-0068-New-Year-Shenanigans.mp3" fileSize="43628315" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode of Herding Code, the gang talks about what happened last year and what they think will happen in the years to come.&amp;#160; Oh, and K Scott brings us the first lightning round of 2010! How will the guys manage the show in 2010?&amp;#160; Google </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode of Herding Code, the gang talks about what happened last year and what they think will happen in the years to come.&amp;#160; Oh, and K Scott brings us the first lightning round of 2010! How will the guys manage the show in 2010?&amp;#160; Google Docs and listener requests? Are you bitter because [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-68-new-year-shenanigans/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/I40FSrRK8lM/HerdingCode-0068-New-Year-Shenanigans.mp3" length="43628315" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0068-New-Year-Shenanigans.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 67: Udi Dahan on Scalability</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/0HS2JGoxZx8/</link>
		<comments>http://herdingcode.com/herding-code-67-udi-dahan-on-scalability/#comments</comments>
		<pubDate>Sun, 10 Jan 2010 08:00:19 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=229</guid>
		<description><![CDATA[You&#8217;re interested in web application scalability and availability, right?&#160; Of course you are!&#160; Well, you&#8217;re in luck because Udi Dahan &#8211; enterprise development expert, SOA specialist and author of NServiceBus &#8211; joins the guys on this week&#8217;s episode of Herding Code.&#160; Jon kicks off the show by asking Udi if one can run a high-availability [&#8230;]]]></description>
				<content:encoded><![CDATA[You&#8217;re interested in web application scalability and availability, right?&#160; Of course you are!&#160; Well, you&#8217;re in luck because Udi Dahan &#8211; enterprise development expert, SOA specialist and author of NServiceBus &#8211; joins the guys on this week&#8217;s episode of Herding Code.&#160; Jon kicks off the show by asking Udi if one can run a high-availability [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/0HS2JGoxZx8" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-67-udi-dahan-on-scalability/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/3thwh7DCQVc/HerdingCode-0067-Udi-Dahan-on-Scalability.mp3" fileSize="34355803" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>You&amp;#8217;re interested in web application scalability and availability, right?&amp;#160; Of course you are!&amp;#160; Well, you&amp;#8217;re in luck because Udi Dahan &amp;#8211; enterprise development expert, SOA specialist and author of NServiceBus &amp;#8211; joins the g</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>You&amp;#8217;re interested in web application scalability and availability, right?&amp;#160; Of course you are!&amp;#160; Well, you&amp;#8217;re in luck because Udi Dahan &amp;#8211; enterprise development expert, SOA specialist and author of NServiceBus &amp;#8211; joins the guys on this week&amp;#8217;s episode of Herding Code.&amp;#160; Jon kicks off the show by asking Udi if one can run a high-availability [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-67-udi-dahan-on-scalability/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/3thwh7DCQVc/HerdingCode-0067-Udi-Dahan-on-Scalability.mp3" length="34355803" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0067-Udi-Dahan-on-Scalability.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 66: Brad Wilson and Scott Densmore on iPhone Development</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/cdvKne4zTdM/</link>
		<comments>http://herdingcode.com/herding-code-66-brad-wilson-and-scott-densmore-on-iphone-development/#comments</comments>
		<pubDate>Wed, 16 Dec 2009 10:36:52 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=226</guid>
		<description><![CDATA[What do Brad Wilson and Scott Densmore have in common?&#160; They&#8217;re expert .NET developers, a couple of Mac fanboys, and they&#8217;re both joining the guys on this week&#8217;s episode of Herding Code.&#160; Listen in while Brad and, yet another, Scott talk about the Mac, Windows, and the ins and outs of iPhone development: In case [&#8230;]]]></description>
				<content:encoded><![CDATA[What do Brad Wilson and Scott Densmore have in common?&#160; They&#8217;re expert .NET developers, a couple of Mac fanboys, and they&#8217;re both joining the guys on this week&#8217;s episode of Herding Code.&#160; Listen in while Brad and, yet another, Scott talk about the Mac, Windows, and the ins and outs of iPhone development: In case [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/cdvKne4zTdM" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-66-brad-wilson-and-scott-densmore-on-iphone-development/feed/</wfw:commentRss>
		<slash:comments>10</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/hjoTeisstcg/HerdingCode-0066-Brad-Wilson-and-Scott-Densmore-on-iPhone-development.mp3" fileSize="37598054" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>What do Brad Wilson and Scott Densmore have in common?&amp;#160; They&amp;#8217;re expert .NET developers, a couple of Mac fanboys, and they&amp;#8217;re both joining the guys on this week&amp;#8217;s episode of Herding Code.&amp;#160; Listen in while Brad and, yet another, </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>What do Brad Wilson and Scott Densmore have in common?&amp;#160; They&amp;#8217;re expert .NET developers, a couple of Mac fanboys, and they&amp;#8217;re both joining the guys on this week&amp;#8217;s episode of Herding Code.&amp;#160; Listen in while Brad and, yet another, Scott talk about the Mac, Windows, and the ins and outs of iPhone development: In case [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-66-brad-wilson-and-scott-densmore-on-iphone-development/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/hjoTeisstcg/HerdingCode-0066-Brad-Wilson-and-Scott-Densmore-on-iPhone-development.mp3" length="37598054" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0066-Brad-Wilson-and-Scott-Densmore-on-iPhone-development.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 65: Scott Hanselman on His Secret Ninja Squad and Jon’s new job (bonus: netbook operating system install clinic!)</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/IPX0Re_qX_s/</link>
		<comments>http://herdingcode.com/herding-code-65-scott-hanselman-on-his-secret-ninja-squad-and-jons-new-job-bonus-netbook-operating-system-install-clinic/#comments</comments>
		<pubDate>Sat, 12 Dec 2009 09:19:34 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=224</guid>
		<description><![CDATA[In this episode, we talk to Scott Hanselman about Jon&#8217;s new job with Microsoft, how (if at all) that affects this podcast, and running Ubuntu on a Dell Mini 9. Scott H talks about how, other than the obvious request to get Scott Koon removed from the show, there&#8217;s no need to fear any changes [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode, we talk to Scott Hanselman about Jon&#8217;s new job with Microsoft, how (if at all) that affects this podcast, and running Ubuntu on a Dell Mini 9. Scott H talks about how, other than the obvious request to get Scott Koon removed from the show, there&#8217;s no need to fear any changes [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/IPX0Re_qX_s" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-65-scott-hanselman-on-his-secret-ninja-squad-and-jons-new-job-bonus-netbook-operating-system-install-clinic/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/Z6MCjNeRrV4/HerdingCode-0065-Scott-Hanselman-on-his-Ninja-Squad-and-Jon-s-new-job.mp3" fileSize="34479962" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode, we talk to Scott Hanselman about Jon&amp;#8217;s new job with Microsoft, how (if at all) that affects this podcast, and running Ubuntu on a Dell Mini 9. Scott H talks about how, other than the obvious request to get Scott Koon removed from th</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode, we talk to Scott Hanselman about Jon&amp;#8217;s new job with Microsoft, how (if at all) that affects this podcast, and running Ubuntu on a Dell Mini 9. Scott H talks about how, other than the obvious request to get Scott Koon removed from the show, there&amp;#8217;s no need to fear any changes [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-65-scott-hanselman-on-his-secret-ninja-squad-and-jons-new-job-bonus-netbook-operating-system-install-clinic/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/Z6MCjNeRrV4/HerdingCode-0065-Scott-Hanselman-on-his-Ninja-Squad-and-Jon-s-new-job.mp3" length="34479962" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0065-Scott-Hanselman-on-his-Ninja-Squad-and-Jon-s-new-job.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 64: Phil Haack on MVC 2</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/7-XUrHprmV0/</link>
		<comments>http://herdingcode.com/herding-code-64-phil-haack-on-mvc-2/#comments</comments>
		<pubDate>Sun, 22 Nov 2009 15:10:56 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=222</guid>
		<description><![CDATA[The guys grill Phil on ASP.NET MVC2, and introduce a new segment: Abusive Questions From Twitter! Phil starts with the new &#60;%: code block syntax, IHtmlString, HtmlString, MvcHtmlString Jon asks about DisplayFor, EditorFor improvements Phil discusses validation improvements – validation extensibility and client-side validation MVC 2 is built on .NET 3.5 SP1 Phil talks about [&#8230;]]]></description>
				<content:encoded><![CDATA[The guys grill Phil on ASP.NET MVC2, and introduce a new segment: Abusive Questions From Twitter! Phil starts with the new &lt;%: code block syntax, IHtmlString, HtmlString, MvcHtmlString Jon asks about DisplayFor, EditorFor improvements Phil discusses validation improvements – validation extensibility and client-side validation MVC 2 is built on .NET 3.5 SP1 Phil talks about [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/7-XUrHprmV0" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-64-phil-haack-on-mvc-2/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/TOjyQ0zic6w/HerdingCode-0064-Phil-Haack-on-MVC-2.mp3" fileSize="52945970" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>The guys grill Phil on ASP.NET MVC2, and introduce a new segment: Abusive Questions From Twitter! Phil starts with the new &amp;#60;%: code block syntax, IHtmlString, HtmlString, MvcHtmlString Jon asks about DisplayFor, EditorFor improvements Phil discusses v</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>The guys grill Phil on ASP.NET MVC2, and introduce a new segment: Abusive Questions From Twitter! Phil starts with the new &amp;#60;%: code block syntax, IHtmlString, HtmlString, MvcHtmlString Jon asks about DisplayFor, EditorFor improvements Phil discusses validation improvements – validation extensibility and client-side validation MVC 2 is built on .NET 3.5 SP1 Phil talks about [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-64-phil-haack-on-mvc-2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/TOjyQ0zic6w/HerdingCode-0064-Phil-Haack-on-MVC-2.mp3" length="52945970" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0064-Phil-Haack-on-MVC-2.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 63: Victory in Software Development with K Scott Allen</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/Bz5SqXFY1GU/</link>
		<comments>http://herdingcode.com/herding-code-63-victory-in-software-development-with-k-scott-allen/#comments</comments>
		<pubDate>Sat, 24 Oct 2009 14:40:10 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>
		<category><![CDATA[monotouch]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=221</guid>
		<description><![CDATA[On the heels of his recent Concept Camp 2009 fireside keynote, K Scott brings his opinion about victory in software development to the podcast. Listen in as the guys consider how to define and measure success, how to solve business problems despite our customers and ourselves, and how to focus less on risk and more [&#8230;]]]></description>
				<content:encoded><![CDATA[On the heels of his recent Concept Camp 2009 fireside keynote, K Scott brings his opinion about victory in software development to the podcast. Listen in as the guys consider how to define and measure success, how to solve business problems despite our customers and ourselves, and how to focus less on risk and more [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/Bz5SqXFY1GU" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-63-victory-in-software-development-with-k-scott-allen/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/n_Y96p_Ougs/HerdingCode-0063-Victory-in-Software-Development-with-K-Scott-Allen.mp3" fileSize="30161510" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>On the heels of his recent Concept Camp 2009 fireside keynote, K Scott brings his opinion about victory in software development to the podcast. Listen in as the guys consider how to define and measure success, how to solve business problems despite our cu</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>On the heels of his recent Concept Camp 2009 fireside keynote, K Scott brings his opinion about victory in software development to the podcast. Listen in as the guys consider how to define and measure success, how to solve business problems despite our customers and ourselves, and how to focus less on risk and more [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-63-victory-in-software-development-with-k-scott-allen/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/n_Y96p_Ougs/HerdingCode-0063-Victory-in-Software-Development-with-K-Scott-Allen.mp3" length="30161510" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0063-Victory-in-Software-Development-with-K-Scott-Allen.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 62: MonoTouch with Miguel de Icaza and Geoff Norton</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/lwFBIB_z4CA/</link>
		<comments>http://herdingcode.com/herding-code-62-monotouch-with-miguel-de-icaza-and-geoff-norton/#comments</comments>
		<pubDate>Mon, 12 Oct 2009 06:58:01 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>
		<category><![CDATA[monotouch]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=220</guid>
		<description><![CDATA[In this episode of Herding Code, Jon and Scott Koon pair up with Miguel de Icaza and Geoff Norton of the Mono Project and discuss MonoTouch: Jon asks Geoff Norton, engineering lead on the MonoTouch project and founder of the Cocoa# and Objective-C# projects, to give the elevator speech about MonoTouch and why one might [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode of Herding Code, Jon and Scott Koon pair up with Miguel de Icaza and Geoff Norton of the Mono Project and discuss MonoTouch: Jon asks Geoff Norton, engineering lead on the MonoTouch project and founder of the Cocoa# and Objective-C# projects, to give the elevator speech about MonoTouch and why one might [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/lwFBIB_z4CA" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-62-monotouch-with-miguel-de-icaza-and-geoff-norton/feed/</wfw:commentRss>
		<slash:comments>15</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/-aA2f1BhwsU/HerdingCode-0062-MonoTouch-with-Miguel-de-Icaza-and-Geoff-Norton.mp3" fileSize="30977046" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode of Herding Code, Jon and Scott Koon pair up with Miguel de Icaza and Geoff Norton of the Mono Project and discuss MonoTouch: Jon asks Geoff Norton, engineering lead on the MonoTouch project and founder of the Cocoa# and Objective-C# projec</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode of Herding Code, Jon and Scott Koon pair up with Miguel de Icaza and Geoff Norton of the Mono Project and discuss MonoTouch: Jon asks Geoff Norton, engineering lead on the MonoTouch project and founder of the Cocoa# and Objective-C# projects, to give the elevator speech about MonoTouch and why one might [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-62-monotouch-with-miguel-de-icaza-and-geoff-norton/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/-aA2f1BhwsU/HerdingCode-0062-MonoTouch-with-Miguel-de-Icaza-and-Geoff-Norton.mp3" length="30977046" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0062-MonoTouch-with-Miguel-de-Icaza-and-Geoff-Norton.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 61: CodePlex Foundation, Bing Visual Search, Microsoft Ajax CDN, Zune HD Release</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/eaCdzJknEFw/</link>
		<comments>http://herdingcode.com/herding-code-61-codeplex-foundation-bing-visual-search-microsoft-ajax-cdn-zune-hd-release/#comments</comments>
		<pubDate>Tue, 06 Oct 2009 23:02:58 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=219</guid>
		<description><![CDATA[This episode of Herding Code is a roundtable discussion which includes the entire cast. The guys dedicate the majority of the show to the CodePlex Foundation – what the foundation provides, speculation on what the foundation might accomplished, and how success should be measured.&#160; The guys also offer a glowing review of Bing Visual Search, [&#8230;]]]></description>
				<content:encoded><![CDATA[This episode of Herding Code is a roundtable discussion which includes the entire cast. The guys dedicate the majority of the show to the CodePlex Foundation – what the foundation provides, speculation on what the foundation might accomplished, and how success should be measured.&#160; The guys also offer a glowing review of Bing Visual Search, [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/eaCdzJknEFw" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-61-codeplex-foundation-bing-visual-search-microsoft-ajax-cdn-zune-hd-release/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/__TlQeJIw2M/HerdingCode-0061-CodePlex-Foundation.mp3" fileSize="34713144" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This episode of Herding Code is a roundtable discussion which includes the entire cast. The guys dedicate the majority of the show to the CodePlex Foundation – what the foundation provides, speculation on what the foundation might accomplished, and how su</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This episode of Herding Code is a roundtable discussion which includes the entire cast. The guys dedicate the majority of the show to the CodePlex Foundation – what the foundation provides, speculation on what the foundation might accomplished, and how success should be measured.&amp;#160; The guys also offer a glowing review of Bing Visual Search, [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-61-codeplex-foundation-bing-visual-search-microsoft-ajax-cdn-zune-hd-release/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/__TlQeJIw2M/HerdingCode-0061-CodePlex-Foundation.mp3" length="34713144" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0061-CodePlex-Foundation.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 60: Spark View Engine with Louis DeJardin</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/eKsLoGUwv7g/</link>
		<comments>http://herdingcode.com/herding-code-60-spark-view-engine-with-louis-dejardin/#comments</comments>
		<pubDate>Wed, 23 Sep 2009 22:53:01 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=216</guid>
		<description><![CDATA[In this episode of the Herding Code Podcast, the guys talk to Louis DeJardin about the Spark View Engine. Louis talks about how the Spark View Engine was inspired by NVelocity and hatched from a comment thread on Phil Haack’s blog. Kevin asks about the HTML-like syntax syntax in a Spark view – how it [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode of the Herding Code Podcast, the guys talk to Louis DeJardin about the Spark View Engine. Louis talks about how the Spark View Engine was inspired by NVelocity and hatched from a comment thread on Phil Haack’s blog. Kevin asks about the HTML-like syntax syntax in a Spark view – how it [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/eKsLoGUwv7g" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-60-spark-view-engine-with-louis-dejardin/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/sG6kLhuAAR8/HerdingCode-0060-Spark-View-Engine-with-Louis-DeJardin.mp3" fileSize="39843613" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode of the Herding Code Podcast, the guys talk to Louis DeJardin about the Spark View Engine. Louis talks about how the Spark View Engine was inspired by NVelocity and hatched from a comment thread on Phil Haack’s blog. Kevin asks about the HT</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode of the Herding Code Podcast, the guys talk to Louis DeJardin about the Spark View Engine. Louis talks about how the Spark View Engine was inspired by NVelocity and hatched from a comment thread on Phil Haack’s blog. Kevin asks about the HTML-like syntax syntax in a Spark view – how it [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-60-spark-view-engine-with-louis-dejardin/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/sG6kLhuAAR8/HerdingCode-0060-Spark-View-Engine-with-Louis-DeJardin.mp3" length="39843613" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0060-Spark-View-Engine-with-Louis-DeJardin.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 59: Web Standards with Milan Negovan</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/NRfIzJD6Lks/</link>
		<comments>http://herdingcode.com/herding-code-59-web-standards-with-milan-negovan/#comments</comments>
		<pubDate>Wed, 09 Sep 2009 05:32:06 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=215</guid>
		<description><![CDATA[In this episode of the Herding Code Podcast, the guys sit down with Milan Negovan of ASP.NET Resources to discuss web standards, usability and accessibility.&#160; Milan also shares his opinions on the onslaught of new technologies coming out of Redmond, why developers should avoid big conferences, the benefits of independent consulting, the motivation of Microsoft [&#8230;]]]></description>
				<content:encoded><![CDATA[In this episode of the Herding Code Podcast, the guys sit down with Milan Negovan of ASP.NET Resources to discuss web standards, usability and accessibility.&#160; Milan also shares his opinions on the onslaught of new technologies coming out of Redmond, why developers should avoid big conferences, the benefits of independent consulting, the motivation of Microsoft [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/NRfIzJD6Lks" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-59-web-standards-with-milan-negovan/feed/</wfw:commentRss>
		<slash:comments>10</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/fL-wgGmndqk/HerdingCode-0059-Web-Standards-with-Milan-Negovan.mp3" fileSize="34560419" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this episode of the Herding Code Podcast, the guys sit down with Milan Negovan of ASP.NET Resources to discuss web standards, usability and accessibility.&amp;#160; Milan also shares his opinions on the onslaught of new technologies coming out of Redmond, </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this episode of the Herding Code Podcast, the guys sit down with Milan Negovan of ASP.NET Resources to discuss web standards, usability and accessibility.&amp;#160; Milan also shares his opinions on the onslaught of new technologies coming out of Redmond, why developers should avoid big conferences, the benefits of independent consulting, the motivation of Microsoft [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-59-web-standards-with-milan-negovan/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/fL-wgGmndqk/HerdingCode-0059-Web-Standards-with-Milan-Negovan.mp3" length="34560419" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0059-Web-Standards-with-Milan-Negovan.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 58: Presentation Patterns with Jeremy Miller, Ward Bell, Rob Eisenberg and Glenn Block (Part 2)</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/N0aSSlEAs2c/</link>
		<comments>http://herdingcode.com/herding-code-58-presentation-patterns-with-jeremy-miller-ward-bell-rob-eisenberg-and-glenn-block-part-2/#comments</comments>
		<pubDate>Mon, 24 Aug 2009 23:32:45 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[discussion]]></category>
		<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=212</guid>
		<description><![CDATA[How about that?&#160; You stuck around!&#160; It was the Waylon Jennings, Good Ol&#8217; Boys, Dukes of Hazzard, freeze frame cliffhanger at the end of Part 1 which hooked you, wasn&#8217;t it?&#160; Undoubtedly you have been on the edge of your seat for days, just waiting to see how the show turns out.&#160; Well, wait no [&#8230;]]]></description>
				<content:encoded><![CDATA[How about that?&#160; You stuck around!&#160; It was the Waylon Jennings, Good Ol&#8217; Boys, Dukes of Hazzard, freeze frame cliffhanger at the end of Part 1 which hooked you, wasn&#8217;t it?&#160; Undoubtedly you have been on the edge of your seat for days, just waiting to see how the show turns out.&#160; Well, wait no [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/N0aSSlEAs2c" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-58-presentation-patterns-with-jeremy-miller-ward-bell-rob-eisenberg-and-glenn-block-part-2/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/oSFEsnWfEc0/HerdingCode-0058-Presentation-Patterns-with-Jeremy-Miller-Ward-Bell-Rob-Eisenberg-and-Glenn-Block-Part-2.mp3" fileSize="29171335" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>How about that?&amp;#160; You stuck around!&amp;#160; It was the Waylon Jennings, Good Ol&amp;#8217; Boys, Dukes of Hazzard, freeze frame cliffhanger at the end of Part 1 which hooked you, wasn&amp;#8217;t it?&amp;#160; Undoubtedly you have been on the edge of your seat for </itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>How about that?&amp;#160; You stuck around!&amp;#160; It was the Waylon Jennings, Good Ol&amp;#8217; Boys, Dukes of Hazzard, freeze frame cliffhanger at the end of Part 1 which hooked you, wasn&amp;#8217;t it?&amp;#160; Undoubtedly you have been on the edge of your seat for days, just waiting to see how the show turns out.&amp;#160; Well, wait no [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-58-presentation-patterns-with-jeremy-miller-ward-bell-rob-eisenberg-and-glenn-block-part-2/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/oSFEsnWfEc0/HerdingCode-0058-Presentation-Patterns-with-Jeremy-Miller-Ward-Bell-Rob-Eisenberg-and-Glenn-Block-Part-2.mp3" length="29171335" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0058-Presentation-Patterns-with-Jeremy-Miller-Ward-Bell-Rob-Eisenberg-and-Glenn-Block-Part-2.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 57: Presentation Patterns with Jeremy Miller, Ward Bell, Rob Eisenberg and Glenn Block (Part 1)</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/4MKSVpoU_z0/</link>
		<comments>http://herdingcode.com/herding-code-57-presentation-patterns-with-jeremy-miller-ward-bell-rob-eisenberg-and-glenn-block-part-1/#comments</comments>
		<pubDate>Wed, 19 Aug 2009 20:01:03 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=208</guid>
		<description><![CDATA[Have you seen the circus gag where clown after clown emerges from the smallest car one could possibly image?&#160; Well, this week on Herding Code, the guys attempt that very same trick!&#160; Listen in as Jeremy Miller, Ward Bell, Rob Eisenberg and Glenn Block (that&#8217;s right, four guests!) join the cast and talk Presentation Patterns.&#160; [&#8230;]]]></description>
				<content:encoded><![CDATA[Have you seen the circus gag where clown after clown emerges from the smallest car one could possibly image?&#160; Well, this week on Herding Code, the guys attempt that very same trick!&#160; Listen in as Jeremy Miller, Ward Bell, Rob Eisenberg and Glenn Block (that&#8217;s right, four guests!) join the cast and talk Presentation Patterns.&#160; [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/4MKSVpoU_z0" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-57-presentation-patterns-with-jeremy-miller-ward-bell-rob-eisenberg-and-glenn-block-part-1/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/R5w2wcsVzyU/HerdingCode-0057-Presentation-Patterns-with-Jeremy-Miller-Ward-Bell-Rob-Eisenberg-and-Glenn-Block-Part-1.mp3" fileSize="29448775" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>Have you seen the circus gag where clown after clown emerges from the smallest car one could possibly image?&amp;#160; Well, this week on Herding Code, the guys attempt that very same trick!&amp;#160; Listen in as Jeremy Miller, Ward Bell, Rob Eisenberg and Glenn</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>Have you seen the circus gag where clown after clown emerges from the smallest car one could possibly image?&amp;#160; Well, this week on Herding Code, the guys attempt that very same trick!&amp;#160; Listen in as Jeremy Miller, Ward Bell, Rob Eisenberg and Glenn Block (that&amp;#8217;s right, four guests!) join the cast and talk Presentation Patterns.&amp;#160; [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-57-presentation-patterns-with-jeremy-miller-ward-bell-rob-eisenberg-and-glenn-block-part-1/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/R5w2wcsVzyU/HerdingCode-0057-Presentation-Patterns-with-Jeremy-Miller-Ward-Bell-Rob-Eisenberg-and-Glenn-Block-Part-1.mp3" length="29448775" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0057-Presentation-Patterns-with-Jeremy-Miller-Ward-Bell-Rob-Eisenberg-and-Glenn-Block-Part-1.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 56: Markus Völter on Model-Driven Development, DSLs and Product Line Engineering</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/kGvPQEpKypQ/</link>
		<comments>http://herdingcode.com/herding-code-56-markus-vlter-on-model-driven-development-dsls-and-product-line-engineering/#comments</comments>
		<pubDate>Fri, 07 Aug 2009 19:47:17 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=206</guid>
		<description><![CDATA[You know Markus Völter as the founder and voice of Software Engineering Radio. Well, this week on Herding Code, Markus finds himself on the other side of the microphone – fielding, rather than asking, questions. Listen in as Markus explains model-driven software development and product line engineering. Learn about modeling, domain-specific languages, code generation, Eclipse, [&#8230;]]]></description>
				<content:encoded><![CDATA[You know Markus Völter as the founder and voice of Software Engineering Radio. Well, this week on Herding Code, Markus finds himself on the other side of the microphone – fielding, rather than asking, questions. Listen in as Markus explains model-driven software development and product line engineering. Learn about modeling, domain-specific languages, code generation, Eclipse, [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/kGvPQEpKypQ" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-56-markus-vlter-on-model-driven-development-dsls-and-product-line-engineering/feed/</wfw:commentRss>
		<slash:comments>14</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/T_XQgw7o1KA/HerdingCode-0056-Markus-Volter-on-Model-Driven-Development-DSLs-and-Product-Line-Engineering.mp3" fileSize="31889543" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>You know Markus Völter as the founder and voice of Software Engineering Radio. Well, this week on Herding Code, Markus finds himself on the other side of the microphone – fielding, rather than asking, questions. Listen in as Markus explains model-driven s</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>You know Markus Völter as the founder and voice of Software Engineering Radio. Well, this week on Herding Code, Markus finds himself on the other side of the microphone – fielding, rather than asking, questions. Listen in as Markus explains model-driven software development and product line engineering. Learn about modeling, domain-specific languages, code generation, Eclipse, [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-56-markus-vlter-on-model-driven-development-dsls-and-product-line-engineering/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/T_XQgw7o1KA/HerdingCode-0056-Markus-Volter-on-Model-Driven-Development-DSLs-and-Product-Line-Engineering.mp3" length="31889543" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0056-Markus-Volter-on-Model-Driven-Development-DSLs-and-Product-Line-Engineering.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 55: Nate Kohari brings Your Moment of Zen</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/EDmPiBDpGUY/</link>
		<comments>http://herdingcode.com/herding-code-55-nate-kohari-brings-your-moment-of-zen/#comments</comments>
		<pubDate>Thu, 30 Jul 2009 07:55:00 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=203</guid>
		<description><![CDATA[Nate Kohari? Kanban Boards? Continuous Improvement? Zen? Stop right there! We know what you&#8217;re thinking.&#160; You already heard this episode about three weeks ago on that other podcast, right?&#160; Well, think again, because this week on Herding Code, the guys pick up where that interview left off.&#160; Listen in as Nate Kohari, the creator of [&#8230;]]]></description>
				<content:encoded><![CDATA[Nate Kohari? Kanban Boards? Continuous Improvement? Zen? Stop right there! We know what you&#8217;re thinking.&#160; You already heard this episode about three weeks ago on that other podcast, right?&#160; Well, think again, because this week on Herding Code, the guys pick up where that interview left off.&#160; Listen in as Nate Kohari, the creator of [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/EDmPiBDpGUY" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-55-nate-kohari-brings-your-moment-of-zen/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/L4dEBVsMoQ4/HerdingCode-0055-Nate-Kohari-brings-Your-Moment-of-Zen.mp3" fileSize="51261632" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>Nate Kohari? Kanban Boards? Continuous Improvement? Zen? Stop right there! We know what you&amp;#8217;re thinking.&amp;#160; You already heard this episode about three weeks ago on that other podcast, right?&amp;#160; Well, think again, because this week on Herding C</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>Nate Kohari? Kanban Boards? Continuous Improvement? Zen? Stop right there! We know what you&amp;#8217;re thinking.&amp;#160; You already heard this episode about three weeks ago on that other podcast, right?&amp;#160; Well, think again, because this week on Herding Code, the guys pick up where that interview left off.&amp;#160; Listen in as Nate Kohari, the creator of [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-55-nate-kohari-brings-your-moment-of-zen/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/L4dEBVsMoQ4/HerdingCode-0055-Nate-Kohari-brings-Your-Moment-of-Zen.mp3" length="51261632" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0055-Nate-Kohari-brings-Your-Moment-of-Zen.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 54: Rob Conery interviews the Herding Code guys</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/rWkXnVUKFV4/</link>
		<comments>http://herdingcode.com/herding-code-54-rob-conery-interviews-the-herding-code-guys/#comments</comments>
		<pubDate>Sat, 18 Jul 2009 07:17:43 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=197</guid>
		<description><![CDATA[Let’s keep the party going! In this very special episode of Herding Code, Rob Conery puts Jon, Scott K and Kevin on the spot as he turns the tables and asks his own questions and passes his own judgments. Do you want to know how Herding Code came about? Are you curious how Rob and [&#8230;]]]></description>
				<content:encoded><![CDATA[Let’s keep the party going! In this very special episode of Herding Code, Rob Conery puts Jon, Scott K and Kevin on the spot as he turns the tables and asks his own questions and passes his own judgments. Do you want to know how Herding Code came about? Are you curious how Rob and [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/rWkXnVUKFV4" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-54-rob-conery-interviews-the-herding-code-guys/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/neqhZMvklpQ/HerdingCode-0054-Rob-Conery-interviews-the-Herding-Code-guys.mp3" fileSize="26387947" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>Let’s keep the party going! In this very special episode of Herding Code, Rob Conery puts Jon, Scott K and Kevin on the spot as he turns the tables and asks his own questions and passes his own judgments. Do you want to know how Herding Code came about? A</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>Let’s keep the party going! In this very special episode of Herding Code, Rob Conery puts Jon, Scott K and Kevin on the spot as he turns the tables and asks his own questions and passes his own judgments. Do you want to know how Herding Code came about? Are you curious how Rob and [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-54-rob-conery-interviews-the-herding-code-guys/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/neqhZMvklpQ/HerdingCode-0054-Rob-Conery-interviews-the-Herding-Code-guys.mp3" length="26387947" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0054-Rob-Conery-interviews-the-Herding-Code-guys.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 53: SubSonic 3.0 Release Party with Rob Conery</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/aH4KRnp0D18/</link>
		<comments>http://herdingcode.com/herding-code-53-subsonic-3-0-release-party-with-rob-conery/#comments</comments>
		<pubDate>Wed, 08 Jul 2009 23:55:02 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>
		<category><![CDATA[podcast]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=193</guid>
		<description><![CDATA[What? You thought SubSonic was dead! Well, crack open a beer and join the party &#8211; the SubSonic 3.0 Release Party!&#160; That&#8217;s right. It is finally here and Rob Conery (Herding Code&#8217;s first repeat guest) gets a little rowdy announcing the new features.&#160; Listen in as Rob speaks of SubSonic, the new role he&#8217;s playing [&#8230;]]]></description>
				<content:encoded><![CDATA[What? You thought SubSonic was dead! Well, crack open a beer and join the party &#8211; the SubSonic 3.0 Release Party!&#160; That&#8217;s right. It is finally here and Rob Conery (Herding Code&#8217;s first repeat guest) gets a little rowdy announcing the new features.&#160; Listen in as Rob speaks of SubSonic, the new role he&#8217;s playing [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/aH4KRnp0D18" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-53-subsonic-3-0-release-party-with-rob-conery/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/354Mt1p9BtA/HerdingCode-0053-SubSonic-3-0-Release-Party-with-Rob-Conery.mp3" fileSize="29571081" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>What? You thought SubSonic was dead! Well, crack open a beer and join the party &amp;#8211; the SubSonic 3.0 Release Party!&amp;#160; That&amp;#8217;s right. It is finally here and Rob Conery (Herding Code&amp;#8217;s first repeat guest) gets a little rowdy announcing th</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>What? You thought SubSonic was dead! Well, crack open a beer and join the party &amp;#8211; the SubSonic 3.0 Release Party!&amp;#160; That&amp;#8217;s right. It is finally here and Rob Conery (Herding Code&amp;#8217;s first repeat guest) gets a little rowdy announcing the new features.&amp;#160; Listen in as Rob speaks of SubSonic, the new role he&amp;#8217;s playing [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-53-subsonic-3-0-release-party-with-rob-conery/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/354Mt1p9BtA/HerdingCode-0053-SubSonic-3-0-Release-Party-with-Rob-Conery.mp3" length="29571081" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0053-SubSonic-3-0-Release-Party-with-Rob-Conery.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 52: The Alan Stevens and G. Andrew Duthie Debate Continues!</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/_j3Hx-LpTRY/</link>
		<comments>http://herdingcode.com/herding-code-52-the-alan-stevens-and-g-andrew-duthie-debate-continues/#comments</comments>
		<pubDate>Wed, 01 Jul 2009 08:00:34 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=191</guid>
		<description><![CDATA[In this corner, Microsoft Developer Evangelist and author, G. Andrew Duthie. In the other corner, C# MVP, ASP Insider and Open Space Technology facilitator, Alan Stevens. This week, G. Andrew Duthie and Alan Stevens bring their recent &#8220;Real Software Development vs Microsoft Bubble Development&#8221; Twitter debate to Herding Code. It&#8217;s all the open and honest, [&#8230;]]]></description>
				<content:encoded><![CDATA[In this corner, Microsoft Developer Evangelist and author, G. Andrew Duthie. In the other corner, C# MVP, ASP Insider and Open Space Technology facilitator, Alan Stevens. This week, G. Andrew Duthie and Alan Stevens bring their recent &#8220;Real Software Development vs Microsoft Bubble Development&#8221; Twitter debate to Herding Code. It&#8217;s all the open and honest, [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/_j3Hx-LpTRY" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-52-the-alan-stevens-and-g-andrew-duthie-debate-continues/feed/</wfw:commentRss>
		<slash:comments>17</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/FAviZlNxxCI/HerdingCode-0052-The-Alan-Stevens-and-G-Andrew-Duthie-Debate-Continues.mp3" fileSize="38684141" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>In this corner, Microsoft Developer Evangelist and author, G. Andrew Duthie. In the other corner, C# MVP, ASP Insider and Open Space Technology facilitator, Alan Stevens. This week, G. Andrew Duthie and Alan Stevens bring their recent &amp;#8220;Real Software</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>In this corner, Microsoft Developer Evangelist and author, G. Andrew Duthie. In the other corner, C# MVP, ASP Insider and Open Space Technology facilitator, Alan Stevens. This week, G. Andrew Duthie and Alan Stevens bring their recent &amp;#8220;Real Software Development vs Microsoft Bubble Development&amp;#8221; Twitter debate to Herding Code. It&amp;#8217;s all the open and honest, [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-52-the-alan-stevens-and-g-andrew-duthie-debate-continues/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/FAviZlNxxCI/HerdingCode-0052-The-Alan-Stevens-and-G-Andrew-Duthie-Debate-Continues.mp3" length="38684141" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0052-The-Alan-Stevens-and-G-Andrew-Duthie-Debate-Continues.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 51: Greg Young on Our Grand Failure – Thoughts on DDDD</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/KG2_-2RsS6E/</link>
		<comments>http://herdingcode.com/herding-code-51-greg-young-on-our-grand-failure-thoughts-on-dddd/#comments</comments>
		<pubDate>Fri, 26 Jun 2009 17:58:05 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[interview]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=189</guid>
		<description><![CDATA[This week the guys talk to Greg Young about what he calls &#8220;our greatest failure&#8221;. Greg talks about how we&#8217;ve failed our so completely that they now base their success on our always failing in the same way. He starts with your classic Hello World use-case, the common sex change Greg talks about how we&#8217;ve [&#8230;]]]></description>
				<content:encoded><![CDATA[This week the guys talk to Greg Young about what he calls &#8220;our greatest failure&#8221;. Greg talks about how we&#8217;ve failed our so completely that they now base their success on our always failing in the same way. He starts with your classic Hello World use-case, the common sex change Greg talks about how we&#8217;ve [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/KG2_-2RsS6E" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-51-greg-young-on-our-grand-failure-thoughts-on-dddd/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/KbTObQIel1s/HerdingCode-0051-Greg-Young-on-Our-Grand-Failure-Thoughts-on-DDDD.mp3" fileSize="31618402" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week the guys talk to Greg Young about what he calls &amp;#8220;our greatest failure&amp;#8221;. Greg talks about how we&amp;#8217;ve failed our so completely that they now base their success on our always failing in the same way. He starts with your classic Hel</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week the guys talk to Greg Young about what he calls &amp;#8220;our greatest failure&amp;#8221;. Greg talks about how we&amp;#8217;ve failed our so completely that they now base their success on our always failing in the same way. He starts with your classic Hello World use-case, the common sex change Greg talks about how we&amp;#8217;ve [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-51-greg-young-on-our-grand-failure-thoughts-on-dddd/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/KbTObQIel1s/HerdingCode-0051-Greg-Young-on-Our-Grand-Failure-Thoughts-on-DDDD.mp3" length="31618402" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0051-Greg-Young-on-Our-Grand-Failure-Thoughts-on-DDDD.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 50: Damien Guard on LINQ to SQL, Entity Framework, and Fontography</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/O8Rol_TxGJM/</link>
		<comments>http://herdingcode.com/herding-code-50-damien-guard-on-linq-to-sql-entity-framework-and-fontography/#comments</comments>
		<pubDate>Fri, 19 Jun 2009 07:24:06 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=187</guid>
		<description><![CDATA[This week the guys talk to Damien Guard, a developer working on LINQ to SQL and Entity Framework. After discussing data access for a while, they talk about the programming font Damien publishes, Envy Code R. Damien assures us that LINQ To SQL is not at all dead and talks about some of the new [&#8230;]]]></description>
				<content:encoded><![CDATA[This week the guys talk to Damien Guard, a developer working on LINQ to SQL and Entity Framework. After discussing data access for a while, they talk about the programming font Damien publishes, Envy Code R. Damien assures us that LINQ To SQL is not at all dead and talks about some of the new [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/O8Rol_TxGJM" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-50-damien-guard-on-linq-to-sql-entity-framework-and-fontography/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/v2kW6FZjLrQ/HerdingCode-0050-Damien-Guard-on-LINQ-to-SQL-Entity-Framework-and-Fontography.mp3" fileSize="34131239" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>This week the guys talk to Damien Guard, a developer working on LINQ to SQL and Entity Framework. After discussing data access for a while, they talk about the programming font Damien publishes, Envy Code R. Damien assures us that LINQ To SQL is not at al</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>This week the guys talk to Damien Guard, a developer working on LINQ to SQL and Entity Framework. After discussing data access for a while, they talk about the programming font Damien publishes, Envy Code R. Damien assures us that LINQ To SQL is not at all dead and talks about some of the new [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-50-damien-guard-on-linq-to-sql-entity-framework-and-fontography/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/v2kW6FZjLrQ/HerdingCode-0050-Damien-Guard-on-LINQ-to-SQL-Entity-Framework-and-Fontography.mp3" length="34131239" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0050-Damien-Guard-on-LINQ-to-SQL-Entity-Framework-and-Fontography.mp3</feedburner:origEnclosureLink></item>
		<item>
		<title>Herding Code 49: Search with Bing and Wolfram Alpha</title>
		<link>http://feedproxy.google.com/~r/HerdingCode/~3/V3_Wt5800hA/</link>
		<comments>http://herdingcode.com/herding-code-49-search-with-bing-and-wolfram-alpha/#comments</comments>
		<pubDate>Wed, 10 Jun 2009 17:59:30 +0000</pubDate>
		<dc:creator>jon_galloway@yahoo.com (Herding Code)</dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://herdingcode.com/?p=186</guid>
		<description><![CDATA[Have you binged, bunged or banged using Microsoft&#8217;s Bing? Any idea the type of questions you should feed Wolfram&#124;Alpha? This week on Herding Code, the guys talk about &#8220;new search things that have happened upon the Intertubes.&#8221; Are you planning to catch the Google Wave? Hear the cast&#8217;s thoughts on Google Wave and much more [&#8230;]]]></description>
				<content:encoded><![CDATA[Have you binged, bunged or banged using Microsoft&#8217;s Bing? Any idea the type of questions you should feed Wolfram|Alpha? This week on Herding Code, the guys talk about &#8220;new search things that have happened upon the Intertubes.&#8221; Are you planning to catch the Google Wave? Hear the cast&#8217;s thoughts on Google Wave and much more [&hellip;]<img src="http://feeds.feedburner.com/~r/HerdingCode/~4/V3_Wt5800hA" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://herdingcode.com/herding-code-49-search-with-bing-and-wolfram-alpha/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>

		<media:content url="http://feedproxy.google.com/~r/HerdingCode/~5/0VNDBDhrG10/HerdingCode-0049-Search-with-Bing-and-Wolfram-Alpha.mp3" fileSize="42635943" type="audio/mpeg" /><itunes:explicit>no</itunes:explicit><itunes:subtitle>Have you binged, bunged or banged using Microsoft&amp;#8217;s Bing? Any idea the type of questions you should feed Wolfram&amp;#124;Alpha? This week on Herding Code, the guys talk about &amp;#8220;new search things that have happened upon the Intertubes.&amp;#8221; Are y</itunes:subtitle><itunes:author>Herding Code</itunes:author><itunes:summary>Have you binged, bunged or banged using Microsoft&amp;#8217;s Bing? Any idea the type of questions you should feed Wolfram&amp;#124;Alpha? This week on Herding Code, the guys talk about &amp;#8220;new search things that have happened upon the Intertubes.&amp;#8221; Are you planning to catch the Google Wave? Hear the cast&amp;#8217;s thoughts on Google Wave and much more [&amp;#8230;]</itunes:summary><itunes:keywords>dotnet,asp,net,programming,software,web,development</itunes:keywords><feedburner:origLink>http://herdingcode.com/herding-code-49-search-with-bing-and-wolfram-alpha/</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/HerdingCode/~5/0VNDBDhrG10/HerdingCode-0049-Search-with-Bing-and-Wolfram-Alpha.mp3" length="42635943" type="audio/mpeg" /><feedburner:origEnclosureLink>http://herdingcode.com/wp-content/uploads/HerdingCode-0049-Search-with-Bing-and-Wolfram-Alpha.mp3</feedburner:origEnclosureLink></item>
	<copyright>Creative Commons (by-nc-sa)</copyright><media:credit role="author">Herding Code</media:credit><media:rating>nonadult</media:rating><media:description type="plain">A weekly discussion on software development</media:description></channel>
</rss><!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Page Caching using disk
Database Caching 1/151 queries in 0.523 seconds using disk
Object Caching 5557/5854 objects using disk

 Served from: herdingcode.com @ 2014-11-03 05:20:28 by W3 Total Cache -->
